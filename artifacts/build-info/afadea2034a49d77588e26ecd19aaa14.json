{"id":"afadea2034a49d77588e26ecd19aaa14","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ArtistPayment.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\ncontract ArtistPayment is ReentrancyGuard, Ownable, EIP712 {\r\n    using ECDSA for bytes32;\r\n\r\n    address public craftiaxAddress;\r\n    uint256 public craftiaxFeePercentage;\r\n    \r\n    // Maximum fee percentage allowed (e.g., 20%)\r\n    uint256 public constant MAX_FEE_PERCENTAGE = 20;\r\n    \r\n    // Add new constants for payment limits\r\n    // 5 cents in Wei (0.05 USD ≈ 0.000025 ETH @ $2000/ETH)\r\n    uint256 public constant MIN_PAYMENT = 25000000000000 wei; // 0.000025 ETH\r\n    // 100 USD in Wei (100 USD ≈ 0.05 ETH @ $2000/ETH)\r\n    uint256 public constant MAX_PAYMENT = 50000000000000000 wei; // 0.05 ETH\r\n    \r\n    // Change from constant to regular state variables so they can be updated\r\n    uint256 public generalMinPayment = 5000000000000 wei; // 0.000005 ETH ≈ $0.01\r\n    uint256 public generalMaxPayment = 50000000000000000 wei; // 0.05 ETH ≈ $100\r\n    uint256 public verifiedMaxPayment = 250000000000000000 wei; // 0.25 ETH ≈ $500\r\n\r\n    // Track verified artists\r\n    mapping(address => bool) public isVerifiedArtist;\r\n    \r\n    event PaymentProcessed(\r\n        address indexed artist,\r\n        uint256 artistAmount,\r\n        uint256 craftiaxFee,\r\n        bool isVerified\r\n    );\r\n    \r\n    event FeeUpdated(uint256 newFee);\r\n    event CraftiaxAddressUpdated(address newAddress);\r\n    event ArtistVerificationStatusUpdated(address indexed artist, bool isVerified);\r\n    event PaymentLimitsUpdated(\r\n        uint256 generalMin,\r\n        uint256 generalMax,\r\n        uint256 verifiedMax\r\n    );\r\n    event VerifierUpdated(address indexed oldVerifier, address indexed newVerifier);\r\n    event NonceInvalidated(address indexed user, uint256 currentNonce);\r\n\r\n    // Add new variables for signature verification\r\n    bytes32 private constant PAYMENT_TYPEHASH = keccak256(\r\n        \"PayArtist(address artist,uint256 amount,uint256 nonce,uint256 deadline,uint256 chainId)\"\r\n    );\r\n    mapping(address => uint256) private _nonces;\r\n    address private _verifier;\r\n\r\n    // Add rate limiting\r\n    mapping(address => uint256) private lastPaymentTimestamp;\r\n    uint256 private constant PAYMENT_COOLDOWN = 1 minutes;\r\n\r\n    constructor(address initialOwner) \r\n        Ownable(initialOwner) \r\n        EIP712(\"ArtistPayment\", \"1\") \r\n    {\r\n        craftiaxAddress = 0x8ce0f94755Eb14f7AF130C1aa2cAd26dea2a2Acd;\r\n        craftiaxFeePercentage = 5;\r\n        _verifier = initialOwner; // Initially set owner as verifier\r\n    }\r\n\r\n    function payArtist(\r\n        address artistAddress,\r\n        uint256 deadline,\r\n        bytes memory signature\r\n    ) external payable nonReentrant {\r\n        // Verify deadline\r\n        require(block.timestamp <= deadline, \"Signature expired\");\r\n        \r\n        // Verify signature\r\n        bytes32 structHash = keccak256(abi.encode(\r\n            PAYMENT_TYPEHASH,\r\n            artistAddress,\r\n            msg.value,\r\n            _nonces[msg.sender]++,\r\n            deadline,\r\n            block.chainid\r\n        ));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n        address signer = ECDSA.recover(hash, signature);\r\n        require(signer == _verifier, \"Invalid signature\");\r\n\r\n        require(msg.value >= generalMinPayment, \"Payment amount below minimum\");\r\n        require(artistAddress != address(0), \"Invalid artist address\");\r\n        require(artistAddress != craftiaxAddress, \"Artist cannot be Craftiax address\");\r\n\r\n        // Check payment limits based on artist status\r\n        if (isVerifiedArtist[artistAddress]) {\r\n            require(msg.value <= verifiedMaxPayment, \"Payment exceeds verified limit\");\r\n        } else {\r\n            require(msg.value <= generalMaxPayment, \"Payment exceeds general limit\");\r\n        }\r\n\r\n        uint256 craftiaxFee = (msg.value * craftiaxFeePercentage) / 100;\r\n        uint256 artistPayment = msg.value - craftiaxFee;\r\n\r\n        // Transfer to artist first (favors artist in case of failure)\r\n        (bool successArtist, ) = payable(artistAddress).call{\r\n            value: artistPayment\r\n        }(\"\");\r\n        require(successArtist, \"Failed to send payment to artist\");\r\n\r\n        // Then transfer fee to Craftiax\r\n        (bool successCraftiax, ) = payable(craftiaxAddress).call{\r\n            value: craftiaxFee\r\n        }(\"\");\r\n        require(successCraftiax, \"Failed to send payment to Craftiax\");\r\n\r\n        emit PaymentProcessed(\r\n            artistAddress, \r\n            artistPayment, \r\n            craftiaxFee,\r\n            isVerifiedArtist[artistAddress]\r\n        );\r\n    }\r\n\r\n    function updateCraftiaxAddress(address newAddress) external onlyOwner {\r\n        require(newAddress != address(0), \"Invalid address\");\r\n        require(newAddress != craftiaxAddress, \"Same address provided\");\r\n        craftiaxAddress = newAddress;\r\n        emit CraftiaxAddressUpdated(newAddress);\r\n    }\r\n\r\n    function updateFeePercentage(uint256 newFee) external onlyOwner {\r\n        require(newFee <= MAX_FEE_PERCENTAGE, \"Fee exceeds maximum allowed\");\r\n        craftiaxFeePercentage = newFee;\r\n        emit FeeUpdated(newFee);\r\n    }\r\n\r\n    // New functions for verified management\r\n    function setVerificationStatus(address artistAddress, bool status) \r\n        external \r\n        onlyOwner \r\n    {\r\n        require(artistAddress != address(0), \"Invalid artist address\");\r\n        require(isVerifiedArtist[artistAddress] != status, \"Status already set\");\r\n        \r\n        isVerifiedArtist[artistAddress] = status;\r\n        emit ArtistVerificationStatusUpdated(artistAddress, status);\r\n    }\r\n\r\n    function setVerificationStatusBatch(address[] calldata artists, bool status)\r\n        external\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < artists.length; i++) {\r\n            require(artists[i] != address(0), \"Invalid artist address\");\r\n            if (isVerifiedArtist[artists[i]] != status) {\r\n                isVerifiedArtist[artists[i]] = status;\r\n                emit ArtistVerificationStatusUpdated(artists[i], status);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Add function to update payment limits\r\n    function updatePaymentLimits(\r\n        uint256 newGeneralMin,\r\n        uint256 newGeneralMax,\r\n        uint256 newVerifiedMax\r\n    ) external onlyOwner {\r\n        require(newGeneralMin > 0, \"General min must be greater than 0\");\r\n        require(newGeneralMax > newGeneralMin, \"General max must be greater than min\");\r\n        require(newVerifiedMax > newGeneralMax, \"Verified max must be greater than general max\");\r\n        \r\n        generalMinPayment = newGeneralMin;\r\n        generalMaxPayment = newGeneralMax;\r\n        verifiedMaxPayment = newVerifiedMax;\r\n        \r\n        emit PaymentLimitsUpdated(newGeneralMin, newGeneralMax, newVerifiedMax);\r\n    }\r\n\r\n    // Add new functions for signature verification\r\n    function updateVerifier(address newVerifier) external onlyOwner {\r\n        require(newVerifier != address(0), \"Invalid verifier address\");\r\n        address oldVerifier = _verifier;\r\n        _verifier = newVerifier;\r\n        emit VerifierUpdated(oldVerifier, newVerifier);\r\n    }\r\n\r\n    function nonces(address owner) public view returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    function invalidateNonce(address user) external onlyOwner {\r\n        require(user != address(0), \"Invalid user address\");\r\n        uint256 currentNonce = _nonces[user];\r\n        _nonces[user] = type(uint256).max;\r\n        emit NonceInvalidated(user, currentNonce);\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n\r\n"},"contracts/EventTicketContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./libraries/EventStructs.sol\";\r\nimport \"./libraries/EventLib.sol\";\r\n\r\ncontract EventTicketContract is ERC1155, Ownable, ReentrancyGuard, Pausable {\r\n    using EventLib for *;\r\n\r\n    // USDC token interface\r\n    IERC20 public immutable usdToken;\r\n\r\n    // Constants moved to immutable variables for gas optimization\r\n    uint256 private immutable MAX_TIERS;\r\n    uint256 private immutable MIN_PRICE;\r\n    uint256 private immutable MAX_PRICE;\r\n    \r\n    // Rate limit variables\r\n    uint256 public RATE_LIMIT_WINDOW;\r\n    uint256 public MAX_MINTS_PER_WINDOW;\r\n    uint256 public MIN_TIME_BETWEEN_MINTS;\r\n\r\n    // ... existing Event struct and mappings ...\r\n\r\n    constructor(\r\n        address _usdToken\r\n    ) ERC1155(\"\") Ownable(msg.sender) {\r\n        usdToken = IERC20(_usdToken);\r\n        \r\n        // Initialize immutable variables\r\n        MAX_TIERS = 10;\r\n        MIN_PRICE = 0.0001 ether;\r\n        MAX_PRICE = 100 ether;\r\n        \r\n        _initializeRateLimits();\r\n    }\r\n\r\n    // Internal function to initialize rate limits\r\n    function _initializeRateLimits() private {\r\n        RATE_LIMIT_WINDOW = 1 hours;\r\n        MAX_MINTS_PER_WINDOW = 10;\r\n        MIN_TIME_BETWEEN_MINTS = 1 minutes;\r\n    }\r\n\r\n    // ... rest of the contract with existing functions ...\r\n\r\n    // Simplified payment processing without price conversion\r\n    function _processPayment(\r\n        uint256 amount,\r\n        EventStructs.PaymentCurrency currency,\r\n        address sender\r\n    ) internal returns (bool) {\r\n        if (currency == EventStructs.PaymentCurrency.USD) {\r\n            return usdToken.transferFrom(sender, address(this), amount);\r\n        } else if (currency == EventStructs.PaymentCurrency.ETH || \r\n                   currency == EventStructs.PaymentCurrency.BASE) {\r\n            return msg.value == amount;\r\n        }\r\n        revert(\"Invalid currency\");\r\n    }\r\n}"},"contracts/libraries/EventLib.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./EventStructs.sol\";\r\n\r\nlibrary EventLib {\r\n    error InvalidPrice();\r\n    error InvalidQuantity();\r\n    error InvalidTierLength();\r\n    error EventAlreadyExists();\r\n    error UnauthorizedAccess();\r\n\r\n    function validateEventCreation(\r\n        string[] memory tierIds,\r\n        uint256[] memory prices,\r\n        uint256[] memory maxQuantities,\r\n        uint256 maxTiers\r\n    ) internal pure {\r\n        if (tierIds.length > maxTiers) revert InvalidTierLength();\r\n        if (prices.length != maxQuantities.length) revert InvalidQuantity();\r\n        if (prices.length != tierIds.length) revert InvalidTierLength();\r\n    }\r\n\r\n    function calculateCommission(\r\n        uint256 amount,\r\n        uint256 percentage\r\n    ) internal pure returns (uint256) {\r\n        return (amount * percentage) / 100;\r\n    }\r\n} "},"contracts/libraries/EventStructs.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary EventStructs {\r\n    enum PaymentCurrency { ETH, USD, BASE }\r\n    enum EventTierType { FREE, GENERAL, PREMIUM }\r\n\r\n    struct EventTier {\r\n        uint256 price;\r\n        uint256 maxQuantity;\r\n        uint256 soldCount;\r\n        bool isActive;\r\n        PaymentCurrency currency;\r\n    }\r\n\r\n    struct EventSaleLimits {\r\n        uint256 maxBatchSize;\r\n        uint256 maxPerAddress;\r\n        uint256 saleStartTime;\r\n        uint256 saleEndTime;\r\n    }\r\n\r\n    struct PriceFeeds {\r\n        address ethUsd;\r\n        address baseUsd;\r\n    }\r\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2579],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2580,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2579],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2517],"Context":[2579],"ERC1155":[1226],"ERC1155Utils":[1561],"ERC165":[4281],"IERC1155":[1349],"IERC1155Errors":[309],"IERC1155MetadataURI":[1407],"IERC165":[4293]},"id":1227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":1350,"src":"135:40:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":1408,"src":"176:73:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"184:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":1562,"src":"250:54:3","symbolAliases":[{"foreign":{"id":316,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"258:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":2580,"src":"305:48:3","symbolAliases":[{"foreign":{"id":318,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"313:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":4282,"src":"354:69:3","symbolAliases":[{"foreign":{"id":320,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"362:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":321,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"371:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":2518,"src":"424:46:3","symbolAliases":[{"foreign":{"id":323,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"432:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":310,"src":"471:67:3","symbolAliases":[{"foreign":{"id":325,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"479:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":328,"name":"Context","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"754:7:3"},"id":329,"nodeType":"InheritanceSpecifier","src":"754:7:3"},{"baseName":{"id":330,"name":"ERC165","nameLocations":["763:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4281,"src":"763:6:3"},"id":331,"nodeType":"InheritanceSpecifier","src":"763:6:3"},{"baseName":{"id":332,"name":"IERC1155","nameLocations":["771:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"771:8:3"},"id":333,"nodeType":"InheritanceSpecifier","src":"771:8:3"},{"baseName":{"id":334,"name":"IERC1155MetadataURI","nameLocations":["781:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1407,"src":"781:19:3"},"id":335,"nodeType":"InheritanceSpecifier","src":"781:19:3"},{"baseName":{"id":336,"name":"IERC1155Errors","nameLocations":["802:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":309,"src":"802:14:3"},"id":337,"nodeType":"InheritanceSpecifier","src":"802:14:3"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"540:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1226,"linearizedBaseContracts":[1226,309,1407,1349,4281,4293,2579],"name":"ERC1155","nameLocation":"743:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":341,"libraryName":{"id":338,"name":"Arrays","nameLocations":["829:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2517,"src":"829:6:3"},"nodeType":"UsingForDirective","src":"823:27:3","typeName":{"baseType":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ArrayTypeName","src":"840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":345,"libraryName":{"id":342,"name":"Arrays","nameLocations":["861:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2517,"src":"861:6:3"},"nodeType":"UsingForDirective","src":"855:27:3","typeName":{"baseType":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":344,"nodeType":"ArrayTypeName","src":"872:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":351,"mutability":"mutable","name":"_balances","nameLocation":"955:9:3","nodeType":"VariableDeclaration","scope":1226,"src":"888:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":350,"keyName":"id","keyNameLocation":"904:2:3","keyType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":349,"keyName":"account","keyNameLocation":"926:7:3","keyType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":357,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:3","nodeType":"VariableDeclaration","scope":1226,"src":"971:88:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":356,"keyName":"account","keyNameLocation":"987:7:3","keyType":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":355,"keyName":"operator","keyNameLocation":"1014:8:3","keyType":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":359,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:3","nodeType":"VariableDeclaration","scope":1226,"src":"1180:19:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":358,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":369,"nodeType":"Block","src":"1281:30:3","statements":[{"expression":{"arguments":[{"id":366,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":365,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1291:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"1291:13:3"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"1206:38:3","text":" @dev See {_setURI}."},"id":370,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:3","nodeType":"VariableDeclaration","scope":370,"src":"1261:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":361,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:3"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"1281:0:3"},"scope":1226,"src":"1249:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4280,4292],"body":{"id":400,"nodeType":"Block","src":"1486:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1515:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":383,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"1535:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1349_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1349_$","typeString":"type(contract IERC1155)"}],"id":382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1349","typeString":"type(contract IERC1155)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":387,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1572:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":389,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"1592:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1407_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1407_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":388,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1407","typeString":"type(contract IERC1155MetadataURI)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":394,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1226_$","typeString":"type(contract super ERC1155)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4280,"src":"1640:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":380,"id":399,"nodeType":"Return","src":"1496:180:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1317:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":401,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:3","nodeType":"FunctionDefinition","overrides":{"id":377,"nodeType":"OverrideSpecifier","overrides":[{"id":375,"name":"ERC165","nameLocations":["1454:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4281,"src":"1454:6:3"},{"id":376,"name":"IERC165","nameLocations":["1462:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"1462:7:3"}],"src":"1445:25:3"},"parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:3","nodeType":"VariableDeclaration","scope":401,"src":"1405:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:3"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":401,"src":"1480:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":378,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:3"},"scope":1226,"src":"1378:305:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1406],"body":{"id":411,"nodeType":"Block","src":"2157:28:3","statements":[{"expression":{"id":409,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2174:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":408,"id":410,"nodeType":"Return","src":"2167:11:3"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"1689:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":412,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:3","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"2095:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:3"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"2142:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:3"},"scope":1226,"src":"2082:103:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1287],"body":{"id":428,"nodeType":"Block","src":"2331:46:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":422,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2348:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":424,"indexExpression":{"id":423,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2358:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":426,"indexExpression":{"id":425,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2362:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":421,"id":427,"nodeType":"Return","src":"2341:29:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2191:49:3","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:3","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"account","nameLocation":"2272:7:3","nodeType":"VariableDeclaration","scope":429,"src":"2264:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"id","nameLocation":"2289:2:3","nodeType":"VariableDeclaration","scope":429,"src":"2281:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:3"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"2322:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:3"},"scope":1226,"src":"2245:132:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1300],"body":{"id":498,"nodeType":"Block","src":"2676:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":442,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2690:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:3","memberName":"length","nodeType":"MemberAccess","src":"2690:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":444,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2709:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:3","memberName":"length","nodeType":"MemberAccess","src":"2709:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":455,"nodeType":"IfStatement","src":"2686:121:3","trueBody":{"id":454,"nodeType":"Block","src":"2721:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":448,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2768:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:3","memberName":"length","nodeType":"MemberAccess","src":"2768:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":450,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2780:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:3","memberName":"length","nodeType":"MemberAccess","src":"2780:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":447,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2742:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":453,"nodeType":"RevertStatement","src":"2735:61:3"}]}},{"assignments":[460],"declarations":[{"constant":false,"id":460,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:3","nodeType":"VariableDeclaration","scope":498,"src":"2817:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":459,"nodeType":"ArrayTypeName","src":"2817:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":467,"initialValue":{"arguments":[{"expression":{"id":464,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2864:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:3","memberName":"length","nodeType":"MemberAccess","src":"2864:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":462,"nodeType":"ArrayTypeName","src":"2854:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:3"},{"body":{"id":494,"nodeType":"Block","src":"2937:112:3","statements":[{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":479,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2951:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":481,"indexExpression":{"id":480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2965:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3008:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":483,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2980:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"2980:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3035:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":487,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3012:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"3012:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":482,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2970:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":493,"nodeType":"ExpressionStatement","src":"2951:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2911:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":473,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2915:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:3","memberName":"length","nodeType":"MemberAccess","src":"2915:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":495,"initializationExpression":{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"i","nameLocation":"2904:1:3","nodeType":"VariableDeclaration","scope":495,"src":"2896:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":471,"initialValue":{"hexValue":"30","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:3"},"loopExpression":{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:3","subExpression":{"id":476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"2932:3:3"},"nodeType":"ForStatement","src":"2891:158:3"},{"expression":{"id":496,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"3066:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":441,"id":497,"nodeType":"Return","src":"3059:20:3"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"2383:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":499,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:3","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:3","nodeType":"VariableDeclaration","scope":499,"src":"2567:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":432,"nodeType":"ArrayTypeName","src":"2567:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"ids","nameLocation":"2619:3:3","nodeType":"VariableDeclaration","scope":499,"src":"2602:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":435,"nodeType":"ArrayTypeName","src":"2602:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:3"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"2658:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ArrayTypeName","src":"2658:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:3"},"scope":1226,"src":"2534:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1308],"body":{"id":514,"nodeType":"Block","src":"3229:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":508,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3258:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":510,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3272:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3282:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":507,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3239:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"3239:52:3"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3092:57:3","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:3","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"operator","nameLocation":"3189:8:3","nodeType":"VariableDeclaration","scope":515,"src":"3181:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"approved","nameLocation":"3204:8:3","nodeType":"VariableDeclaration","scope":515,"src":"3199:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":503,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:3"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3229:0:3"},"scope":1226,"src":"3154:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1318],"body":{"id":531,"nodeType":"Block","src":"3461:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":525,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3478:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":527,"indexExpression":{"id":526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3497:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":529,"indexExpression":{"id":528,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3506:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":524,"id":530,"nodeType":"Return","src":"3471:44:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"3304:56:3","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":532,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:3","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"account","nameLocation":"3399:7:3","nodeType":"VariableDeclaration","scope":532,"src":"3391:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"operator","nameLocation":"3416:8:3","nodeType":"VariableDeclaration","scope":532,"src":"3408:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"3455:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":522,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:3"},"scope":1226,"src":"3365:157:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1332],"body":{"id":575,"nodeType":"Block","src":"3702:238:3","statements":[{"assignments":[547],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"sender","nameLocation":"3720:6:3","nodeType":"VariableDeclaration","scope":575,"src":"3712:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":550,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":548,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3729:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":551,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":552,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3763:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:3","subExpression":{"arguments":[{"id":555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3791:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3797:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3774:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"3751:129:3","trueBody":{"id":565,"nodeType":"Block","src":"3806:74:3","statements":[{"errorCall":{"arguments":[{"id":561,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3856:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3864:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3827:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"3820:49:3"}]}},{"expression":{"arguments":[{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3907:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3913:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3917:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3921:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":572,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"3928:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":567,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"3889:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"3889:44:3"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"3528:56:3","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"from","nameLocation":"3623:4:3","nodeType":"VariableDeclaration","scope":576,"src":"3615:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"to","nameLocation":"3637:2:3","nodeType":"VariableDeclaration","scope":576,"src":"3629:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"id","nameLocation":"3649:2:3","nodeType":"VariableDeclaration","scope":576,"src":"3641:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"value","nameLocation":"3661:5:3","nodeType":"VariableDeclaration","scope":576,"src":"3653:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"data","nameLocation":"3681:4:3","nodeType":"VariableDeclaration","scope":576,"src":"3668:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":542,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:3"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"3702:0:3"},"scope":1226,"src":"3589:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":621,"nodeType":"Block","src":"4196:245:3","statements":[{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"sender","nameLocation":"4214:6:3","nodeType":"VariableDeclaration","scope":621,"src":"4206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":594,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"4223:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4249:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":598,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4257:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:3","subExpression":{"arguments":[{"id":601,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4285:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4291:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":600,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"4268:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":612,"nodeType":"IfStatement","src":"4245:129:3","trueBody":{"id":611,"nodeType":"Block","src":"4300:74:3","statements":[{"errorCall":{"arguments":[{"id":607,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4350:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4358:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4321:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"RevertStatement","src":"4314:49:3"}]}},{"expression":{"arguments":[{"id":614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4406:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4412:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4416:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":617,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4421:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4429:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":613,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4383:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"4383:51:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"3946:61:3","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:3","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"from","nameLocation":"4060:4:3","nodeType":"VariableDeclaration","scope":622,"src":"4052:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"to","nameLocation":"4082:2:3","nodeType":"VariableDeclaration","scope":622,"src":"4074:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"ids","nameLocation":"4111:3:3","nodeType":"VariableDeclaration","scope":622,"src":"4094:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":583,"nodeType":"ArrayTypeName","src":"4094:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"values","nameLocation":"4141:6:3","nodeType":"VariableDeclaration","scope":622,"src":"4124:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"nodeType":"ArrayTypeName","src":"4124:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"4170:4:3","nodeType":"VariableDeclaration","scope":622,"src":"4157:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:3"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"4196:0:3"},"scope":1226,"src":"4012:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"5249:1174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":636,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5263:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:3","memberName":"length","nodeType":"MemberAccess","src":"5263:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":638,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5277:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:3","memberName":"length","nodeType":"MemberAccess","src":"5277:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":649,"nodeType":"IfStatement","src":"5259:117:3","trueBody":{"id":648,"nodeType":"Block","src":"5292:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5339:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:3","memberName":"length","nodeType":"MemberAccess","src":"5339:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":644,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5351:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:3","memberName":"length","nodeType":"MemberAccess","src":"5351:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":641,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5313:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"RevertStatement","src":"5306:59:3"}]}},{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"operator","nameLocation":"5394:8:3","nodeType":"VariableDeclaration","scope":774,"src":"5386:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5405:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:3"},{"body":{"id":735,"nodeType":"Block","src":"5469:650:3","statements":[{"assignments":[667],"declarations":[{"constant":false,"id":667,"mutability":"mutable","name":"id","nameLocation":"5491:2:3","nodeType":"VariableDeclaration","scope":735,"src":"5483:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":672,"initialValue":{"arguments":[{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5519:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":668,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5496:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"5496:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:3"},{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"value","nameLocation":"5543:5:3","nodeType":"VariableDeclaration","scope":735,"src":"5535:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":679,"initialValue":{"arguments":[{"id":677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5577:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":675,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5551:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"5551:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5598:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:3","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"5594:420:3","trueBody":{"id":717,"nodeType":"Block","src":"5618:396:3","statements":[{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:3","nodeType":"VariableDeclaration","scope":717,"src":"5636:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":693,"initialValue":{"baseExpression":{"baseExpression":{"id":688,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5658:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":690,"indexExpression":{"id":689,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5668:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":692,"indexExpression":{"id":691,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5672:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5699:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5713:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"5695:129:3","trueBody":{"id":704,"nodeType":"Block","src":"5720:104:3","statements":[{"errorCall":{"arguments":[{"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5776:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5782:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5795:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5802:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"5749:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"RevertStatement","src":"5742:63:3"}]}},{"id":716,"nodeType":"UncheckedBlock","src":"5841:159:3","statements":[{"expression":{"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":706,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5940:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":709,"indexExpression":{"id":707,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5950:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":710,"indexExpression":{"id":708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5954:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5962:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5976:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":715,"nodeType":"ExpressionStatement","src":"5940:41:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6032:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:3","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":734,"nodeType":"IfStatement","src":"6028:81:3","trueBody":{"id":733,"nodeType":"Block","src":"6050:59:3","statements":[{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":725,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6068:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":728,"indexExpression":{"id":726,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"6078:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6082:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"6068:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5448:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":660,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5452:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:3","memberName":"length","nodeType":"MemberAccess","src":"5452:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"initializationExpression":{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"i","nameLocation":"5441:1:3","nodeType":"VariableDeclaration","scope":736,"src":"5433:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":658,"initialValue":{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:3"},"loopExpression":{"expression":{"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:3","subExpression":{"id":663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5466:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":665,"nodeType":"ExpressionStatement","src":"5464:3:3"},"nodeType":"ForStatement","src":"5428:691:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":737,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6133:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:3","memberName":"length","nodeType":"MemberAccess","src":"6133:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":772,"nodeType":"Block","src":"6341:76:3","statements":[{"eventCall":{"arguments":[{"id":765,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6374:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6390:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6394:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":769,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6399:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":764,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6360:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"6355:51:3"}]},"id":773,"nodeType":"IfStatement","src":"6129:288:3","trueBody":{"id":763,"nodeType":"Block","src":"6150:185:3","statements":[{"assignments":[742],"declarations":[{"constant":false,"id":742,"mutability":"mutable","name":"id","nameLocation":"6172:2:3","nodeType":"VariableDeclaration","scope":763,"src":"6164:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":747,"initialValue":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6177:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"6177:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:3"},{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"value","nameLocation":"6224:5:3","nodeType":"VariableDeclaration","scope":763,"src":"6216:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":754,"initialValue":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":750,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6232:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"6232:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:3"},{"eventCall":{"arguments":[{"id":756,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6294:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6304:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6310:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6314:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6318:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":755,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6279:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"EmitStatement","src":"6274:50:3"}]}}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"4447:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:3","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"from","nameLocation":"5167:4:3","nodeType":"VariableDeclaration","scope":775,"src":"5159:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"to","nameLocation":"5181:2:3","nodeType":"VariableDeclaration","scope":775,"src":"5173:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"ids","nameLocation":"5202:3:3","nodeType":"VariableDeclaration","scope":775,"src":"5185:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"nodeType":"ArrayTypeName","src":"5185:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"values","nameLocation":"5224:6:3","nodeType":"VariableDeclaration","scope":775,"src":"5207:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ArrayTypeName","src":"5207:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:3"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"5249:0:3"},"scope":1226,"src":"5142:1281:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":854,"nodeType":"Block","src":"7193:509:3","statements":[{"expression":{"arguments":[{"id":792,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7211:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7217:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7221:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":795,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7226:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":791,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7203:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"7203:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:3","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":853,"nodeType":"IfStatement","src":"7243:453:3","trueBody":{"id":852,"nodeType":"Block","src":"7265:431:3","statements":[{"assignments":[805],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"operator","nameLocation":"7287:8:3","nodeType":"VariableDeclaration","scope":852,"src":"7279:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":808,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":806,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"7298:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":809,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7328:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:3","memberName":"length","nodeType":"MemberAccess","src":"7328:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":850,"nodeType":"Block","src":"7574:112:3","statements":[{"expression":{"arguments":[{"id":842,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"7633:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7643:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7649:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7653:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":846,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7658:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7666:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":839,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"7592:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1561_$","typeString":"type(library ERC1155Utils)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"7592:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"7592:79:3"}]},"id":851,"nodeType":"IfStatement","src":"7324:362:3","trueBody":{"id":838,"nodeType":"Block","src":"7345:223:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"id","nameLocation":"7371:2:3","nodeType":"VariableDeclaration","scope":838,"src":"7363:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"initialValue":{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":815,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7376:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"7376:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:3"},{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"value","nameLocation":"7427:5:3","nodeType":"VariableDeclaration","scope":838,"src":"7419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"arguments":[{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":822,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7435:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"7435:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:3"},{"expression":{"arguments":[{"id":830,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"7517:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7527:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7533:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7537:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"7541:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7548:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":827,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"7481:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1561_$","typeString":"type(library ERC1155Utils)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"7481:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"7481:72:3"}]}}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"6429:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":855,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:3","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"from","nameLocation":"7055:4:3","nodeType":"VariableDeclaration","scope":855,"src":"7047:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"to","nameLocation":"7077:2:3","nodeType":"VariableDeclaration","scope":855,"src":"7069:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"ids","nameLocation":"7106:3:3","nodeType":"VariableDeclaration","scope":855,"src":"7089:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ArrayTypeName","src":"7089:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"values","nameLocation":"7136:6:3","nodeType":"VariableDeclaration","scope":855,"src":"7119:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ArrayTypeName","src":"7119:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"data","nameLocation":"7165:4:3","nodeType":"VariableDeclaration","scope":855,"src":"7152:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"7193:0:3"},"scope":1226,"src":"7002:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"8267:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8281:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:3","typeDescriptions":{}}},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":883,"nodeType":"IfStatement","src":"8277:88:3","trueBody":{"id":882,"nodeType":"Block","src":"8299:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:3","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":875,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"8320:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"RevertStatement","src":"8313:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8378:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:3","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"8374:88:3","trueBody":{"id":897,"nodeType":"Block","src":"8398:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:3","typeDescriptions":{}}},"id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":890,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8419:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"RevertStatement","src":"8412:39:3"}]}},{"assignments":[903,906],"declarations":[{"constant":false,"id":903,"mutability":"mutable","name":"ids","nameLocation":"8489:3:3","nodeType":"VariableDeclaration","scope":920,"src":"8472:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ArrayTypeName","src":"8472:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"values","nameLocation":"8511:6:3","nodeType":"VariableDeclaration","scope":920,"src":"8494:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":905,"nodeType":"ArrayTypeName","src":"8494:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[{"id":908,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8540:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"8544:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8521:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:3"},{"expression":{"arguments":[{"id":913,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8587:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8593:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"8597:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":916,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8602:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"8610:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":912,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8560:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"8560:55:3"}]},"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"7708:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:3","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"from","nameLocation":"8194:4:3","nodeType":"VariableDeclaration","scope":921,"src":"8186:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"to","nameLocation":"8208:2:3","nodeType":"VariableDeclaration","scope":921,"src":"8200:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"id","nameLocation":"8220:2:3","nodeType":"VariableDeclaration","scope":921,"src":"8212:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"8232:5:3","nodeType":"VariableDeclaration","scope":921,"src":"8224:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"data","nameLocation":"8252:4:3","nodeType":"VariableDeclaration","scope":921,"src":"8239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":865,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:3"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"8267:0:3"},"scope":1226,"src":"8159:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"9202:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"9216:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:3","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":951,"nodeType":"IfStatement","src":"9212:88:3","trueBody":{"id":950,"nodeType":"Block","src":"9234:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:3","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":943,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"9255:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"RevertStatement","src":"9248:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9313:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{}}},"id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"9309:88:3","trueBody":{"id":965,"nodeType":"Block","src":"9333:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:3","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"9354:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"RevertStatement","src":"9347:39:3"}]}},{"expression":{"arguments":[{"id":968,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9433:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"9439:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"9443:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":971,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9448:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"9456:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":967,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9406:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"9406:55:3"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"8628:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:3","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"from","nameLocation":"9072:4:3","nodeType":"VariableDeclaration","scope":976,"src":"9064:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"to","nameLocation":"9094:2:3","nodeType":"VariableDeclaration","scope":976,"src":"9086:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"ids","nameLocation":"9123:3:3","nodeType":"VariableDeclaration","scope":976,"src":"9106:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":928,"nodeType":"ArrayTypeName","src":"9106:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"values","nameLocation":"9153:6:3","nodeType":"VariableDeclaration","scope":976,"src":"9136:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ArrayTypeName","src":"9136:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"data","nameLocation":"9182:4:3","nodeType":"VariableDeclaration","scope":976,"src":"9169:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:3"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"9202:0:3"},"scope":1226,"src":"9023:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"10346:30:3","statements":[{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":982,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"10356:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":983,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"10363:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":985,"nodeType":"ExpressionStatement","src":"10356:13:3"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"9474:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:3","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:3","nodeType":"VariableDeclaration","scope":987,"src":"10307:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":978,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:3"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"10346:0:3"},"scope":1226,"src":"10290:86:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"10836:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10850:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:3","typeDescriptions":{}}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1013,"nodeType":"IfStatement","src":"10846:88:3","trueBody":{"id":1012,"nodeType":"Block","src":"10868:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:3","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"10889:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"RevertStatement","src":"10882:41:3"}]}},{"assignments":[1018,1021],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"ids","nameLocation":"10961:3:3","nodeType":"VariableDeclaration","scope":1038,"src":"10944:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ArrayTypeName","src":"10944:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"values","nameLocation":"10983:6:3","nodeType":"VariableDeclaration","scope":1038,"src":"10966:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ArrayTypeName","src":"10966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[{"id":1023,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"11012:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11016:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1022,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"10993:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:3","typeDescriptions":{}}},"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"11071:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"11075:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1034,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"11080:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1035,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11088:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1027,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"11032:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"11032:61:3"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"10382:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:3","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"to","nameLocation":"10777:2:3","nodeType":"VariableDeclaration","scope":1039,"src":"10769:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"id","nameLocation":"10789:2:3","nodeType":"VariableDeclaration","scope":1039,"src":"10781:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"value","nameLocation":"10801:5:3","nodeType":"VariableDeclaration","scope":1039,"src":"10793:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"data","nameLocation":"10821:4:3","nodeType":"VariableDeclaration","scope":1039,"src":"10808:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:3"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"10836:0:3"},"scope":1226,"src":"10754:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1079,"nodeType":"Block","src":"11638:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"11652:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:3","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"nodeType":"IfStatement","src":"11648:88:3","trueBody":{"id":1066,"nodeType":"Block","src":"11670:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:3","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1059,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"11691:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"RevertStatement","src":"11684:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:3","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"11784:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11788:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1075,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"11793:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1076,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"11801:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1068,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"11745:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"11745:61:3"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"11106:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:3","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"to","nameLocation":"11559:2:3","nodeType":"VariableDeclaration","scope":1080,"src":"11551:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"ids","nameLocation":"11580:3:3","nodeType":"VariableDeclaration","scope":1080,"src":"11563:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"nodeType":"ArrayTypeName","src":"11563:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"values","nameLocation":"11602:6:3","nodeType":"VariableDeclaration","scope":1080,"src":"11585:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ArrayTypeName","src":"11585:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"data","nameLocation":"11623:4:3","nodeType":"VariableDeclaration","scope":1080,"src":"11610:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1049,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:3"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[],"src":"11638:0:3"},"scope":1226,"src":"11531:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"12172:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"12186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:3","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"12182:88:3","trueBody":{"id":1103,"nodeType":"Block","src":"12206:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:3","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"12227:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"RevertStatement","src":"12220:39:3"}]}},{"assignments":[1109,1112],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"ids","nameLocation":"12297:3:3","nodeType":"VariableDeclaration","scope":1129,"src":"12280:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ArrayTypeName","src":"12280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"values","nameLocation":"12319:6:3","nodeType":"VariableDeclaration","scope":1129,"src":"12302:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ArrayTypeName","src":"12302:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1114,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12348:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12352:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"12329:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:3"},{"expression":{"arguments":[{"id":1119,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"12395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:3","typeDescriptions":{}}},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"12413:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1125,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"12418:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1118,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"12368:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"12368:61:3"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"11819:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:3","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"from","nameLocation":"12130:4:3","nodeType":"VariableDeclaration","scope":1130,"src":"12122:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"id","nameLocation":"12144:2:3","nodeType":"VariableDeclaration","scope":1130,"src":"12136:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"value","nameLocation":"12156:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"12148:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:3"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"12172:0:3"},"scope":1226,"src":"12107:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"12882:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"12896:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:3","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"IfStatement","src":"12892:88:3","trueBody":{"id":1155,"nodeType":"Block","src":"12916:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"12937:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"RevertStatement","src":"12930:39:3"}]}},{"expression":{"arguments":[{"id":1158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"13016:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:3","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"13034:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1164,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13039:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1157,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"12989:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"12989:61:3"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"12442:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"from","nameLocation":"12820:4:3","nodeType":"VariableDeclaration","scope":1169,"src":"12812:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"ids","nameLocation":"12843:3:3","nodeType":"VariableDeclaration","scope":1169,"src":"12826:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ArrayTypeName","src":"12826:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"values","nameLocation":"12865:6:3","nodeType":"VariableDeclaration","scope":1169,"src":"12848:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1138,"nodeType":"ArrayTypeName","src":"12848:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"12882:0:3"},"scope":1226,"src":"12792:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1208,"nodeType":"Block","src":"13369:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"13383:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:3","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1193,"nodeType":"IfStatement","src":"13379:94:3","trueBody":{"id":1192,"nodeType":"Block","src":"13407:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:3","typeDescriptions":{}}},"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1185,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"13428:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"RevertStatement","src":"13421:41:3"}]}},{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1194,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"13482:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1197,"indexExpression":{"id":1195,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"13501:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1198,"indexExpression":{"id":1196,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"13508:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1199,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"13520:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1201,"nodeType":"ExpressionStatement","src":"13482:46:3"},{"eventCall":{"arguments":[{"id":1203,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"13558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"13565:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"13575:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1202,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"13543:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"EmitStatement","src":"13538:46:3"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"13063:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:3","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"owner","nameLocation":"13312:5:3","nodeType":"VariableDeclaration","scope":1209,"src":"13304:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"operator","nameLocation":"13327:8:3","nodeType":"VariableDeclaration","scope":1209,"src":"13319:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"approved","nameLocation":"13342:8:3","nodeType":"VariableDeclaration","scope":1209,"src":"13337:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1175,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:3"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"13369:0:3"},"scope":1226,"src":"13276:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"13865:664:3","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:3","statements":[{"nodeType":"YulAssignment","src":"13958:21:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:3"},"nodeType":"YulFunctionCall","src":"13968:11:3"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:3"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:3"},"nodeType":"YulFunctionCall","src":"14029:17:3"},"nodeType":"YulExpressionStatement","src":"14029:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:3"},"nodeType":"YulFunctionCall","src":"14163:17:3"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:3"},"nodeType":"YulFunctionCall","src":"14156:35:3"},"nodeType":"YulExpressionStatement","src":"14156:35:3"},{"nodeType":"YulAssignment","src":"14282:27:3","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:3"},"nodeType":"YulFunctionCall","src":"14292:17:3"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:3"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:3"},"nodeType":"YulFunctionCall","src":"14322:17:3"},"nodeType":"YulExpressionStatement","src":"14322:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:3"},"nodeType":"YulFunctionCall","src":"14359:17:3"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:3"},"nodeType":"YulFunctionCall","src":"14352:35:3"},"nodeType":"YulExpressionStatement","src":"14352:35:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:3"},"nodeType":"YulFunctionCall","src":"14495:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:3"},"nodeType":"YulFunctionCall","src":"14482:31:3"},"nodeType":"YulExpressionStatement","src":"14482:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1218,"isOffset":false,"isSlot":false,"src":"13958:6:3","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"14036:6:3","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"14167:6:3","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"14296:6:3","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"14282:6:3","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"14329:6:3","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"14363:6:3","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"14499:6:3","valueSize":1},{"declaration":1212,"isOffset":false,"isSlot":false,"src":"14182:8:3","valueSize":1},{"declaration":1214,"isOffset":false,"isSlot":false,"src":"14378:8:3","valueSize":1}],"flags":["memory-safe"],"id":1223,"nodeType":"InlineAssembly","src":"13875:648:3"}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"13597:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:3","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"element1","nameLocation":"13752:8:3","nodeType":"VariableDeclaration","scope":1225,"src":"13744:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"element2","nameLocation":"13778:8:3","nodeType":"VariableDeclaration","scope":1225,"src":"13770:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:3"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"array1","nameLocation":"13832:6:3","nodeType":"VariableDeclaration","scope":1225,"src":"13815:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ArrayTypeName","src":"13815:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"array2","nameLocation":"13857:6:3","nodeType":"VariableDeclaration","scope":1225,"src":"13840:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ArrayTypeName","src":"13840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:3"},"scope":1226,"src":"13707:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1227,"src":"725:13806:3","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[1246,1261,1270,1277]}],"src":"109:14423:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1349],"IERC165":[4293]},"id":1350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1228,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1350,"sourceUnit":4294,"src":"136:62:4","symbolAliases":[{"foreign":{"id":1229,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1232,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"359:7:4"},"id":1233,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1349,"linearizedBaseContracts":[1349,4293],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1246,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":1246,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":1246,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":1246,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":1246,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":1246,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1261,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":1261,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1261,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":1261,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":1261,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1259,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":1261,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1270,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":1270,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":1270,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":1270,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1267,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1277,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":1277,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1272,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1275,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":1277,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":1287,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":1287,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":1349,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1300,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":1300,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1290,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":1300,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":1349,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1308,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":1308,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":1308,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":1349,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1318,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":1318,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":1318,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":1349,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"2680:910:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1332,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:4","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"from","nameLocation":"3629:4:4","nodeType":"VariableDeclaration","scope":1332,"src":"3621:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"to","nameLocation":"3643:2:4","nodeType":"VariableDeclaration","scope":1332,"src":"3635:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"id","nameLocation":"3655:2:4","nodeType":"VariableDeclaration","scope":1332,"src":"3647:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"value","nameLocation":"3667:5:4","nodeType":"VariableDeclaration","scope":1332,"src":"3659:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"data","nameLocation":"3689:4:4","nodeType":"VariableDeclaration","scope":1332,"src":"3674:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:4"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"3703:0:4"},"scope":1349,"src":"3595:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"3710:814:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:4","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"from","nameLocation":"4577:4:4","nodeType":"VariableDeclaration","scope":1348,"src":"4569:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"to","nameLocation":"4599:2:4","nodeType":"VariableDeclaration","scope":1348,"src":"4591:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"ids","nameLocation":"4630:3:4","nodeType":"VariableDeclaration","scope":1348,"src":"4611:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ArrayTypeName","src":"4611:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"values","nameLocation":"4662:6:4","nodeType":"VariableDeclaration","scope":1348,"src":"4643:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1342,"nodeType":"ArrayTypeName","src":"4643:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"data","nameLocation":"4693:4:4","nodeType":"VariableDeclaration","scope":1348,"src":"4678:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1344,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:4"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"4712:0:4"},"scope":1349,"src":"4529:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1350,"src":"337:4378:4","usedErrors":[],"usedEvents":[1246,1261,1270,1277]}],"src":"110:4606:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1391],"IERC165":[4293]},"id":1392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1351,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1392,"sourceUnit":4294,"src":"144:62:5","symbolAliases":[{"foreign":{"id":1352,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1355,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"357:7:5"},"id":1356,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1391,"linearizedBaseContracts":[1391,4293],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1372,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":1372,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":1372,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":1372,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":1372,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":1372,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1372,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1369,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":1391,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1390,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":1390,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":1390,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":1390,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":1390,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":1390,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1384,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1387,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":1391,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1392,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1349],"IERC1155MetadataURI":[1407]},"id":1408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1393,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1408,"sourceUnit":1350,"src":"158:41:6","symbolAliases":[{"foreign":{"id":1394,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"166:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1397,"name":"IERC1155","nameLocations":["399:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"399:8:6"},"id":1398,"nodeType":"InheritanceSpecifier","src":"399:8:6"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"201:164:6","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1407,"linearizedBaseContracts":[1407,1349,4293],"name":"IERC1155MetadataURI","nameLocation":"376:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"414:192:6","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1406,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:6","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"id","nameLocation":"632:2:6","nodeType":"VariableDeclaration","scope":1406,"src":"624:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:6"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"659:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:6"},"scope":1407,"src":"611:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1408,"src":"366:310:6","usedErrors":[],"usedEvents":[1246,1261,1270,1277]}],"src":"132:545:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1561],"IERC1155Errors":[309],"IERC1155Receiver":[1391]},"id":1562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1409,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":1392,"src":"146:57:7","symbolAliases":[{"foreign":{"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"154:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":310,"src":"204:70:7","symbolAliases":[{"foreign":{"id":1412,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"212:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"276:162:7","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1561,"linearizedBaseContracts":[1561],"name":"ERC1155Utils","nameLocation":"447:12:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1485,"nodeType":"Block","src":"1183:774:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1197:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:7","memberName":"code","nodeType":"MemberAccess","src":"1197:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:7","memberName":"length","nodeType":"MemberAccess","src":"1197:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"1193:758:7","trueBody":{"id":1483,"nodeType":"Block","src":"1217:734:7","statements":[{"clauses":[{"block":{"id":1461,"nodeType":"Block","src":"1333:221:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1355:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1449,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1367:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1391_$","typeString":"type(contract IERC1155Receiver)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:7","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1372,"src":"1367:34:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1460,"nodeType":"IfStatement","src":"1351:189:7","trueBody":{"id":1459,"nodeType":"Block","src":"1412:128:7","statements":[{"errorCall":{"arguments":[{"id":1456,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1518:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1453,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"1480:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$309_$","typeString":"type(contract IERC1155Errors)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":284,"src":"1480:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"RevertStatement","src":"1473:48:7"}]}}]},"errorName":"","id":1462,"nodeType":"TryCatchClause","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"response","nameLocation":"1323:8:7","nodeType":"VariableDeclaration","scope":1462,"src":"1316:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1445,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:7"},"src":"1307:247:7"},{"block":{"id":1480,"nodeType":"Block","src":"1583:358:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1466,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1605:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:7","memberName":"length","nodeType":"MemberAccess","src":"1605:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1478,"nodeType":"Block","src":"1776:151:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:7","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:7"},"nodeType":"YulFunctionCall","src":"1856:15:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:7"},"nodeType":"YulFunctionCall","src":"1873:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:7"},"nodeType":"YulFunctionCall","src":"1849:38:7"},"nodeType":"YulExpressionStatement","src":"1849:38:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1464,"isOffset":false,"isSlot":false,"src":"1864:6:7","valueSize":1},{"declaration":1464,"isOffset":false,"isSlot":false,"src":"1879:6:7","valueSize":1}],"flags":["memory-safe"],"id":1477,"nodeType":"InlineAssembly","src":"1798:111:7"}]},"id":1479,"nodeType":"IfStatement","src":"1601:326:7","trueBody":{"id":1476,"nodeType":"Block","src":"1625:145:7","statements":[{"errorCall":{"arguments":[{"id":1473,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1748:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1470,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"1710:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$309_$","typeString":"type(contract IERC1155Errors)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":284,"src":"1710:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"RevertStatement","src":"1703:48:7"}]}}]},"errorName":"","id":1481,"nodeType":"TryCatchClause","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"reason","nameLocation":"1575:6:7","nodeType":"VariableDeclaration","scope":1481,"src":"1562:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1463,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:7"},"src":"1555:386:7"}],"externalCall":{"arguments":[{"id":1439,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1274:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1284:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1290:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1294:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1443,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"1301:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1252:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1235:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1391_$","typeString":"type(contract IERC1155Receiver)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1391","typeString":"contract IERC1155Receiver"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:7","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1372,"src":"1235:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1482,"nodeType":"TryStatement","src":"1231:710:7"}]}}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"466:527:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:7","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"operator","nameLocation":"1047:8:7","nodeType":"VariableDeclaration","scope":1486,"src":"1039:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"from","nameLocation":"1073:4:7","nodeType":"VariableDeclaration","scope":1486,"src":"1065:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"to","nameLocation":"1095:2:7","nodeType":"VariableDeclaration","scope":1486,"src":"1087:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"id","nameLocation":"1115:2:7","nodeType":"VariableDeclaration","scope":1486,"src":"1107:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"value","nameLocation":"1135:5:7","nodeType":"VariableDeclaration","scope":1486,"src":"1127:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"data","nameLocation":"1163:4:7","nodeType":"VariableDeclaration","scope":1486,"src":"1150:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1426,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:7"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"1183:0:7"},"scope":1561,"src":"998:959:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1559,"nodeType":"Block","src":"2715:816:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"2729:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:7","memberName":"code","nodeType":"MemberAccess","src":"2729:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:7","memberName":"length","nodeType":"MemberAccess","src":"2729:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"nodeType":"IfStatement","src":"2725:800:7","trueBody":{"id":1557,"nodeType":"Block","src":"2749:776:7","statements":[{"clauses":[{"block":{"id":1535,"nodeType":"Block","src":"2902:226:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"2924:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1523,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"2936:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1391_$","typeString":"type(contract IERC1155Receiver)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:7","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2936:39:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"2920:194:7","trueBody":{"id":1533,"nodeType":"Block","src":"2986:128:7","statements":[{"errorCall":{"arguments":[{"id":1530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3092:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1527,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3054:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$309_$","typeString":"type(contract IERC1155Errors)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":284,"src":"3054:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"RevertStatement","src":"3047:48:7"}]}}]},"errorName":"","id":1536,"nodeType":"TryCatchClause","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"response","nameLocation":"2879:8:7","nodeType":"VariableDeclaration","scope":1536,"src":"2872:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1519,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:7"},"src":"2846:282:7"},{"block":{"id":1554,"nodeType":"Block","src":"3157:358:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1540,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"3179:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:7","memberName":"length","nodeType":"MemberAccess","src":"3179:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1552,"nodeType":"Block","src":"3350:151:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:7","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:7"},"nodeType":"YulFunctionCall","src":"3430:15:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:7"},"nodeType":"YulFunctionCall","src":"3447:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:7"},"nodeType":"YulFunctionCall","src":"3423:38:7"},"nodeType":"YulExpressionStatement","src":"3423:38:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"3438:6:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"3453:6:7","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"3372:111:7"}]},"id":1553,"nodeType":"IfStatement","src":"3175:326:7","trueBody":{"id":1550,"nodeType":"Block","src":"3199:145:7","statements":[{"errorCall":{"arguments":[{"id":1547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3322:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1544,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3284:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$309_$","typeString":"type(contract IERC1155Errors)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":284,"src":"3284:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"RevertStatement","src":"3277:48:7"}]}}]},"errorName":"","id":1555,"nodeType":"TryCatchClause","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"reason","nameLocation":"3149:6:7","nodeType":"VariableDeclaration","scope":1555,"src":"3136:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:7"},"src":"3129:386:7"}],"externalCall":{"arguments":[{"id":1513,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"2811:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2821:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1515,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2827:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1516,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2832:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1517,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2840:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"2784:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1509,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"2767:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1391_$","typeString":"type(contract IERC1155Receiver)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1391","typeString":"contract IERC1155Receiver"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:7","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2767:43:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1556,"nodeType":"TryStatement","src":"2763:752:7"}]}}]},"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"1963:537:7","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:7","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"operator","nameLocation":"2559:8:7","nodeType":"VariableDeclaration","scope":1560,"src":"2551:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"from","nameLocation":"2585:4:7","nodeType":"VariableDeclaration","scope":1560,"src":"2577:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"to","nameLocation":"2607:2:7","nodeType":"VariableDeclaration","scope":1560,"src":"2599:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"ids","nameLocation":"2636:3:7","nodeType":"VariableDeclaration","scope":1560,"src":"2619:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1495,"nodeType":"ArrayTypeName","src":"2619:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"values","nameLocation":"2666:6:7","nodeType":"VariableDeclaration","scope":1560,"src":"2649:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ArrayTypeName","src":"2649:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"data","nameLocation":"2695:4:7","nodeType":"VariableDeclaration","scope":1560,"src":"2682:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:7"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"2715:0:7"},"scope":1561,"src":"2505:1026:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1562,"src":"439:3094:7","usedErrors":[],"usedEvents":[]}],"src":"120:3414:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1639]},"id":1640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1563,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"132:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1639,"linearizedBaseContracts":[1639],"name":"IERC20","nameLocation":"214:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"227:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1573,"name":"Transfer","nameLocation":"396:8:8","nodeType":"EventDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:8","nodeType":"VariableDeclaration","scope":1573,"src":"405:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:8","nodeType":"VariableDeclaration","scope":1573,"src":"427:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:8","nodeType":"VariableDeclaration","scope":1573,"src":"447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:8"},"src":"390:72:8"},{"anonymous":false,"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"468:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1582,"name":"Approval","nameLocation":"627:8:8","nodeType":"EventDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:8","nodeType":"VariableDeclaration","scope":1582,"src":"636:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:8","nodeType":"VariableDeclaration","scope":1582,"src":"659:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1580,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:8","nodeType":"VariableDeclaration","scope":1582,"src":"684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:8"},"src":"621:78:8"},{"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"705:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1588,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:8","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:8"},"scope":1639,"src":"775:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"836:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1596,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1596,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1596,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1639,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"986:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1606,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":1606,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"value","nameLocation":"1242:5:8","nodeType":"VariableDeclaration","scope":1606,"src":"1234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:8"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"1267:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:8"},"scope":1639,"src":"1204:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1279:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1616,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:8","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"owner","nameLocation":"1575:5:8","nodeType":"VariableDeclaration","scope":1616,"src":"1567:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"spender","nameLocation":"1590:7:8","nodeType":"VariableDeclaration","scope":1616,"src":"1582:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:8"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1622:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:8"},"scope":1639,"src":"1548:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"1637:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1626,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:8","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"spender","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":1626,"src":"2326:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"value","nameLocation":"2351:5:8","nodeType":"VariableDeclaration","scope":1626,"src":"2343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:8"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"2376:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1623,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:8"},"scope":1639,"src":"2309:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"2388:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1638,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:8","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"from","nameLocation":"2720:4:8","nodeType":"VariableDeclaration","scope":1638,"src":"2712:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"to","nameLocation":"2734:2:8","nodeType":"VariableDeclaration","scope":1638,"src":"2726:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"value","nameLocation":"2746:5:8","nodeType":"VariableDeclaration","scope":1638,"src":"2738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:8"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1638,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1635,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":1639,"src":"2690:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1640,"src":"204:2575:8","usedErrors":[],"usedEvents":[1573,1582]}],"src":"106:2674:8"},"id":8},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2517],"Comparators":[2549],"Math":[5899],"SlotDerivation":[3164],"StorageSlot":[3288]},"id":2518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1641,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":2550,"src":"209:46:9","symbolAliases":[{"foreign":{"id":1642,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"217:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3165,"src":"256:52:9","symbolAliases":[{"foreign":{"id":1644,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"264:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":3289,"src":"309:46:9","symbolAliases":[{"foreign":{"id":1646,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"317:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2518,"sourceUnit":5900,"src":"356:37:9","symbolAliases":[{"foreign":{"id":1648,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"364:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"395:63:9","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2517,"linearizedBaseContracts":[2517],"name":"Arrays","nameLocation":"467:6:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1653,"libraryName":{"id":1651,"name":"SlotDerivation","nameLocations":["486:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3164,"src":"486:14:9"},"nodeType":"UsingForDirective","src":"480:33:9","typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1656,"libraryName":{"id":1654,"name":"StorageSlot","nameLocations":["524:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3288,"src":"524:11:9"},"nodeType":"UsingForDirective","src":"518:30:9","typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1688,"nodeType":"Block","src":"1628:83:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1678,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1656:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1677,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"1649:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1681,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1669:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1680,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1664:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1683,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1677:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1676,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1638:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"1638:44:9"},{"expression":{"id":1686,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1699:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1675,"id":1687,"nodeType":"Return","src":"1692:12:9"}]},"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"554:915:9","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:9","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"array","nameLocation":"1514:5:9","nodeType":"VariableDeclaration","scope":1689,"src":"1497:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ArrayTypeName","src":"1497:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"comp","nameLocation":"1576:4:9","nodeType":"VariableDeclaration","scope":1689,"src":"1529:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1669,"nodeType":"FunctionTypeName","parameterTypes":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1538:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1547:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:9"},"returnParameterTypes":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1570:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1666,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:9"},"src":"1529:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:9"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"1610:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1673,"nodeType":"ArrayTypeName","src":"1610:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:9"},"scope":2517,"src":"1474:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"1894:66:9","statements":[{"expression":{"arguments":[{"id":1700,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1909:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1701,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1916:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2549_$","typeString":"type(library Comparators)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2534,"src":"1916:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1699,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1689,1708,1740,1761,1793,1814],"referencedDeclaration":1689,"src":"1904:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1704,"nodeType":"ExpressionStatement","src":"1904:27:9"},{"expression":{"id":1705,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1948:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1698,"id":1706,"nodeType":"Return","src":"1941:12:9"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1717:93:9","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:9","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"array","nameLocation":"1846:5:9","nodeType":"VariableDeclaration","scope":1708,"src":"1829:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1692,"nodeType":"ArrayTypeName","src":"1829:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:9"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"1876:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ArrayTypeName","src":"1876:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:9"},"scope":2517,"src":"1815:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"3040:97:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1730,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3075:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1729,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1965,1977],"referencedDeclaration":1965,"src":"3055:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1733,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"3102:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1732,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2003,2029],"referencedDeclaration":2003,"src":"3083:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1728,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1689,1708,1740,1761,1793,1814],"referencedDeclaration":1689,"src":"3050:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1736,"nodeType":"ExpressionStatement","src":"3050:58:9"},{"expression":{"id":1737,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3125:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1727,"id":1738,"nodeType":"Return","src":"3118:12:9"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"1966:915:9","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:9","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"array","nameLocation":"2926:5:9","nodeType":"VariableDeclaration","scope":1740,"src":"2909:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1711,"nodeType":"ArrayTypeName","src":"2909:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"comp","nameLocation":"2988:4:9","nodeType":"VariableDeclaration","scope":1740,"src":"2941:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1721,"nodeType":"FunctionTypeName","parameterTypes":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"2950:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"2959:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:9"},"returnParameterTypes":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"2982:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:9"},"src":"2941:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"3022:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1725,"nodeType":"ArrayTypeName","src":"3022:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:9"},"scope":2517,"src":"2886:251:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"3320:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1752,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3355:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1751,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1965,1977],"referencedDeclaration":1965,"src":"3335:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1754,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"3363:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2549_$","typeString":"type(library Comparators)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2534,"src":"3363:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1750,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1689,1708,1740,1761,1793,1814],"referencedDeclaration":1689,"src":"3330:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1757,"nodeType":"ExpressionStatement","src":"3330:48:9"},{"expression":{"id":1758,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3395:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1749,"id":1759,"nodeType":"Return","src":"3388:12:9"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"3143:93:9","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:9","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"array","nameLocation":"3272:5:9","nodeType":"VariableDeclaration","scope":1761,"src":"3255:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1743,"nodeType":"ArrayTypeName","src":"3255:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:9"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"3302:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1747,"nodeType":"ArrayTypeName","src":"3302:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:9"},"scope":2517,"src":"3241:166:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"4487:97:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1783,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1782,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1965,1977],"referencedDeclaration":1977,"src":"4502:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1786,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4549:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":1785,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2003,2029],"referencedDeclaration":2029,"src":"4530:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1781,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1689,1708,1740,1761,1793,1814],"referencedDeclaration":1689,"src":"4497:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1789,"nodeType":"ExpressionStatement","src":"4497:58:9"},{"expression":{"id":1790,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4572:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1780,"id":1791,"nodeType":"Return","src":"4565:12:9"}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"3413:915:9","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:9","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"array","nameLocation":"4373:5:9","nodeType":"VariableDeclaration","scope":1793,"src":"4356:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1764,"nodeType":"ArrayTypeName","src":"4356:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"comp","nameLocation":"4435:4:9","nodeType":"VariableDeclaration","scope":1793,"src":"4388:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1774,"nodeType":"FunctionTypeName","parameterTypes":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"4397:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"4406:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:9"},"returnParameterTypes":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"4429:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1771,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:9"},"src":"4388:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:9"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"4469:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1778,"nodeType":"ArrayTypeName","src":"4469:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:9"},"scope":2517,"src":"4333:251:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1813,"nodeType":"Block","src":"4767:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1805,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"4802:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1804,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1965,1977],"referencedDeclaration":1977,"src":"4782:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1807,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"4810:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2549_$","typeString":"type(library Comparators)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2534,"src":"4810:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1803,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1689,1708,1740,1761,1793,1814],"referencedDeclaration":1689,"src":"4777:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1810,"nodeType":"ExpressionStatement","src":"4777:48:9"},{"expression":{"id":1811,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"4842:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1802,"id":1812,"nodeType":"Return","src":"4835:12:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"4590:93:9","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:9","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"array","nameLocation":"4719:5:9","nodeType":"VariableDeclaration","scope":1814,"src":"4702:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1796,"nodeType":"ArrayTypeName","src":"4702:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:9"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1814,"src":"4749:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1800,"nodeType":"ArrayTypeName","src":"4749:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:9"},"scope":2517,"src":"4688:166:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"5470:889:9","statements":[{"id":1900,"nodeType":"UncheckedBlock","src":"5480:873:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"5508:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1833,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5514:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1838,"nodeType":"IfStatement","src":"5504:31:9","trueBody":{"functionReturnParameters":1831,"id":1837,"nodeType":"Return","src":"5528:7:9"}},{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:9","nodeType":"VariableDeclaration","scope":1900,"src":"5591:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1844,"initialValue":{"arguments":[{"id":1842,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5614:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"5607:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:9"},{"assignments":[1846],"declarations":[{"constant":false,"id":1846,"mutability":"mutable","name":"pos","nameLocation":"5715:3:9","nodeType":"VariableDeclaration","scope":1900,"src":"5707:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1848,"initialValue":{"id":1847,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5721:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:9"},{"body":{"id":1879,"nodeType":"Block","src":"5795:331:9","statements":[{"condition":{"arguments":[{"arguments":[{"id":1864,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5829:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"5822:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1866,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5817:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"5813:299:9","trueBody":{"id":1877,"nodeType":"Block","src":"5842:270:9","statements":[{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1868,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6046:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1871,"nodeType":"ExpressionStatement","src":"6046:11:9"},{"expression":{"arguments":[{"id":1873,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6085:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1874,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6090:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6079:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1876,"nodeType":"ExpressionStatement","src":"6079:14:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5773:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1856,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"5778:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"initializationExpression":{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"it","nameLocation":"5754:2:9","nodeType":"VariableDeclaration","scope":1880,"src":"5746:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1854,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5759:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:9"},"loopExpression":{"expression":{"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1858,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5783:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1861,"nodeType":"ExpressionStatement","src":"5783:10:9"},"nodeType":"ForStatement","src":"5741:385:9"},{"expression":{"arguments":[{"id":1882,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6146:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1883,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6153:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6140:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"6140:17:9"},{"expression":{"arguments":[{"id":1887,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6207:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1888,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6214:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1889,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6219:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1886,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6196:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"6196:28:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6284:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1896,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"6296:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1897,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6301:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1892,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6273:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"6273:33:9"}]}]},"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"4860:491:9","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:9","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"begin","nameLocation":"5384:5:9","nodeType":"VariableDeclaration","scope":1902,"src":"5376:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"end","nameLocation":"5399:3:9","nodeType":"VariableDeclaration","scope":1902,"src":"5391:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"comp","nameLocation":"5451:4:9","nodeType":"VariableDeclaration","scope":1902,"src":"5404:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1828,"nodeType":"FunctionTypeName","parameterTypes":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"5413:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"5422:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:9"},"returnParameterTypes":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"5445:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1825,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:9"},"src":"5404:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:9"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[],"src":"5470:0:9"},"scope":2517,"src":"5356:1003:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1912,"nodeType":"Block","src":"6532:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:9","statements":[{"nodeType":"YulAssignment","src":"6581:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:9"},"nodeType":"YulFunctionCall","src":"6588:16:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1906,"isOffset":false,"isSlot":false,"src":"6592:5:9","valueSize":1},{"declaration":1909,"isOffset":false,"isSlot":false,"src":"6581:3:9","valueSize":1}],"flags":["memory-safe"],"id":1911,"nodeType":"InlineAssembly","src":"6542:72:9"}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"6365:87:9","text":" @dev Pointer to the memory location of the first element of `array`."},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:9","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"array","nameLocation":"6490:5:9","nodeType":"VariableDeclaration","scope":1913,"src":"6473:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"nodeType":"ArrayTypeName","src":"6473:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:9"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:9","nodeType":"VariableDeclaration","scope":1913,"src":"6519:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:9"},"scope":2517,"src":"6457:163:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1932,"nodeType":"Block","src":"6892:93:9","statements":[{"id":1931,"nodeType":"UncheckedBlock","src":"6902:77:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1923,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6940:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1922,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6933:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1925,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6949:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:9","memberName":"length","nodeType":"MemberAccess","src":"6949:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1921,"id":1930,"nodeType":"Return","src":"6926:42:9"}]}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"6626:188:9","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:9","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"array","nameLocation":"6850:5:9","nodeType":"VariableDeclaration","scope":1933,"src":"6833:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ArrayTypeName","src":"6833:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:9"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:9","nodeType":"VariableDeclaration","scope":1933,"src":"6879:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:9"},"scope":2517,"src":"6819:166:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1942,"nodeType":"Block","src":"7136:68:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:9","statements":[{"nodeType":"YulAssignment","src":"7169:19:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:9"},"nodeType":"YulFunctionCall","src":"7178:10:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1936,"isOffset":false,"isSlot":false,"src":"7184:3:9","valueSize":1},{"declaration":1939,"isOffset":false,"isSlot":false,"src":"7169:5:9","valueSize":1}],"id":1941,"nodeType":"InlineAssembly","src":"7146:52:9"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"6991:74:9","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:9","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:9","nodeType":"VariableDeclaration","scope":1943,"src":"7086:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:9"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"value","nameLocation":"7129:5:9","nodeType":"VariableDeclaration","scope":1943,"src":"7121:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:9"},"scope":2517,"src":"7070:134:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1952,"nodeType":"Block","src":"7348:178:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:9","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:9"},"nodeType":"YulFunctionCall","src":"7395:11:9"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:9","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:9"},"nodeType":"YulFunctionCall","src":"7433:11:9"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:9","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:9"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:9"},"nodeType":"YulFunctionCall","src":"7457:20:9"},"nodeType":"YulExpressionStatement","src":"7457:20:9"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:9"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:9"},"nodeType":"YulFunctionCall","src":"7490:20:9"},"nodeType":"YulExpressionStatement","src":"7490:20:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1946,"isOffset":false,"isSlot":false,"src":"7401:4:9","valueSize":1},{"declaration":1946,"isOffset":false,"isSlot":false,"src":"7464:4:9","valueSize":1},{"declaration":1948,"isOffset":false,"isSlot":false,"src":"7439:4:9","valueSize":1},{"declaration":1948,"isOffset":false,"isSlot":false,"src":"7497:4:9","valueSize":1}],"id":1951,"nodeType":"InlineAssembly","src":"7358:162:9"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"7210:77:9","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:9","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:9","nodeType":"VariableDeclaration","scope":1953,"src":"7307:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:9","nodeType":"VariableDeclaration","scope":1953,"src":"7321:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:9"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[],"src":"7348:0:9"},"scope":2517,"src":"7292:234:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1964,"nodeType":"Block","src":"7713:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:9","statements":[{"nodeType":"YulAssignment","src":"7746:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1957,"isOffset":false,"isSlot":false,"src":"7756:5:9","valueSize":1},{"declaration":1961,"isOffset":false,"isSlot":false,"src":"7746:6:9","valueSize":1}],"id":1963,"nodeType":"InlineAssembly","src":"7723:48:9"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"7532:76:9","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:9","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"input","nameLocation":"7659:5:9","nodeType":"VariableDeclaration","scope":1965,"src":"7642:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1956,"nodeType":"ArrayTypeName","src":"7642:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:9"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"output","nameLocation":"7705:6:9","nodeType":"VariableDeclaration","scope":1965,"src":"7688:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1960,"nodeType":"ArrayTypeName","src":"7688:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:9"},"scope":2517,"src":"7613:164:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1976,"nodeType":"Block","src":"7964:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:9","statements":[{"nodeType":"YulAssignment","src":"7997:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1969,"isOffset":false,"isSlot":false,"src":"8007:5:9","valueSize":1},{"declaration":1973,"isOffset":false,"isSlot":false,"src":"7997:6:9","valueSize":1}],"id":1975,"nodeType":"InlineAssembly","src":"7974:48:9"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"7783:76:9","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:9","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"input","nameLocation":"7910:5:9","nodeType":"VariableDeclaration","scope":1977,"src":"7893:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1968,"nodeType":"ArrayTypeName","src":"7893:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:9"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"output","nameLocation":"7956:6:9","nodeType":"VariableDeclaration","scope":1977,"src":"7939:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ArrayTypeName","src":"7939:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:9"},"scope":2517,"src":"7864:164:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2002,"nodeType":"Block","src":"8290:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:9","statements":[{"nodeType":"YulAssignment","src":"8323:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1988,"isOffset":false,"isSlot":false,"src":"8333:5:9","valueSize":1},{"declaration":1999,"isOffset":false,"isSlot":false,"src":"8323:6:9","valueSize":1}],"id":2001,"nodeType":"InlineAssembly","src":"8300:48:9"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"8034:78:9","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:9","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"input","nameLocation":"8201:5:9","nodeType":"VariableDeclaration","scope":2003,"src":"8154:52:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1987,"nodeType":"FunctionTypeName","parameterTypes":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"8163:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"8172:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:9"},"returnParameterTypes":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"8195:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1984,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:9"},"src":"8154:52:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:9"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"output","nameLocation":"8282:6:9","nodeType":"VariableDeclaration","scope":2003,"src":"8235:53:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1998,"nodeType":"FunctionTypeName","parameterTypes":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"8244:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"8253:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:9"},"returnParameterTypes":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"8276:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1995,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:9"},"src":"8235:53:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:9"},"scope":2517,"src":"8117:237:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2028,"nodeType":"Block","src":"8616:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:9","statements":[{"nodeType":"YulAssignment","src":"8649:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2014,"isOffset":false,"isSlot":false,"src":"8659:5:9","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"8649:6:9","valueSize":1}],"id":2027,"nodeType":"InlineAssembly","src":"8626:48:9"}]},"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"8360:78:9","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:9","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"input","nameLocation":"8527:5:9","nodeType":"VariableDeclaration","scope":2029,"src":"8480:52:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2013,"nodeType":"FunctionTypeName","parameterTypes":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"8489:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"8498:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:9"},"returnParameterTypes":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"8521:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2010,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:9"},"src":"8480:52:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:9"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"output","nameLocation":"8608:6:9","nodeType":"VariableDeclaration","scope":2029,"src":"8561:53:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2024,"nodeType":"FunctionTypeName","parameterTypes":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"8570:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"8579:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:9"},"returnParameterTypes":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"8602:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2021,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:9"},"src":"8561:53:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:9"},"scope":2517,"src":"8443:237:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2111,"nodeType":"Block","src":"9405:834:9","statements":[{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"low","nameLocation":"9423:3:9","nodeType":"VariableDeclaration","scope":2111,"src":"9415:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2043,"initialValue":{"hexValue":"30","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:9"},{"assignments":[2045],"declarations":[{"constant":false,"id":2045,"mutability":"mutable","name":"high","nameLocation":"9448:4:9","nodeType":"VariableDeclaration","scope":2111,"src":"9440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2048,"initialValue":{"expression":{"id":2046,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"9455:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:9","memberName":"length","nodeType":"MemberAccess","src":"9455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2049,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9482:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"9478:48:9","trueBody":{"id":2054,"nodeType":"Block","src":"9493:33:9","statements":[{"expression":{"hexValue":"30","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2039,"id":2053,"nodeType":"Return","src":"9507:8:9"}]}},{"body":{"id":2087,"nodeType":"Block","src":"9555:423:9","statements":[{"assignments":[2060],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"mid","nameLocation":"9577:3:9","nodeType":"VariableDeclaration","scope":2087,"src":"9569:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2063,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9596:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2064,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9601:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2061,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"9583:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"9583:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2068,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"9844:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2069,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9851:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2067,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2392,2418,2444],"referencedDeclaration":2444,"src":"9831:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3179_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"9831:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2072,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2085,"nodeType":"Block","src":"9922:46:9","statements":[{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9940:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9946:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ExpressionStatement","src":"9940:13:9"}]},"id":2086,"nodeType":"IfStatement","src":"9827:141:9","trueBody":{"id":2078,"nodeType":"Block","src":"9873:43:9","statements":[{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2074,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9891:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2075,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9898:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2077,"nodeType":"ExpressionStatement","src":"9891:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9543:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2057,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9549:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"nodeType":"WhileStatement","src":"9536:442:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10095:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2093,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10119:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10126:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2092,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2392,2418,2444],"referencedDeclaration":2444,"src":"10106:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3179_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"10106:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2099,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"10144:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2109,"nodeType":"Block","src":"10198:35:9","statements":[{"expression":{"id":2107,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10219:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2039,"id":2108,"nodeType":"Return","src":"10212:10:9"}]},"id":2110,"nodeType":"IfStatement","src":"10091:142:9","trueBody":{"id":2106,"nodeType":"Block","src":"10153:39:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10174:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2039,"id":2105,"nodeType":"Return","src":"10167:14:9"}]}}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"8686:616:9","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:9","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"array","nameLocation":"9349:5:9","nodeType":"VariableDeclaration","scope":2112,"src":"9331:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ArrayTypeName","src":"9331:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"element","nameLocation":"9364:7:9","nodeType":"VariableDeclaration","scope":2112,"src":"9356:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:9"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2112,"src":"9396:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:9"},"scope":2517,"src":"9307:932:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"10756:709:9","statements":[{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"low","nameLocation":"10774:3:9","nodeType":"VariableDeclaration","scope":2175,"src":"10766:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2126,"initialValue":{"hexValue":"30","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:9"},{"assignments":[2128],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"high","nameLocation":"10799:4:9","nodeType":"VariableDeclaration","scope":2175,"src":"10791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2131,"initialValue":{"expression":{"id":2129,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"10806:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:9","memberName":"length","nodeType":"MemberAccess","src":"10806:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10833:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"10829:48:9","trueBody":{"id":2137,"nodeType":"Block","src":"10844:33:9","statements":[{"expression":{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2122,"id":2136,"nodeType":"Return","src":"10858:8:9"}]}},{"body":{"id":2171,"nodeType":"Block","src":"10906:532:9","statements":[{"assignments":[2143],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"mid","nameLocation":"10928:3:9","nodeType":"VariableDeclaration","scope":2171,"src":"10920:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2149,"initialValue":{"arguments":[{"id":2146,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"10947:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2147,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10952:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2144,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"10934:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"10934:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2151,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"11195:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2152,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"11202:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2150,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2392,2418,2444],"referencedDeclaration":2444,"src":"11182:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3179_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"11182:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2155,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11215:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2169,"nodeType":"Block","src":"11385:43:9","statements":[{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2165,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"11403:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"11410:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2168,"nodeType":"ExpressionStatement","src":"11403:10:9"}]},"id":2170,"nodeType":"IfStatement","src":"11178:250:9","trueBody":{"id":2164,"nodeType":"Block","src":"11224:155:9","statements":[{"id":2163,"nodeType":"UncheckedBlock","src":"11301:64:9","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2157,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"11333:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"11339:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"11333:13:9"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"10894:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2140,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10900:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"WhileStatement","src":"10887:551:9"},{"expression":{"id":2173,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"11455:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2174,"nodeType":"Return","src":"11448:10:9"}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"10245:412:9","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:9","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"array","nameLocation":"10700:5:9","nodeType":"VariableDeclaration","scope":2176,"src":"10682:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ArrayTypeName","src":"10682:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"element","nameLocation":"10715:7:9","nodeType":"VariableDeclaration","scope":2176,"src":"10707:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:9"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"10747:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:9"},"scope":2517,"src":"10662:803:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"11982:709:9","statements":[{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"low","nameLocation":"12000:3:9","nodeType":"VariableDeclaration","scope":2239,"src":"11992:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"initialValue":{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:9"},{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"high","nameLocation":"12025:4:9","nodeType":"VariableDeclaration","scope":2239,"src":"12017:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"expression":{"id":2193,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"12032:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:9","memberName":"length","nodeType":"MemberAccess","src":"12032:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12059:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"12055:48:9","trueBody":{"id":2201,"nodeType":"Block","src":"12070:33:9","statements":[{"expression":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2186,"id":2200,"nodeType":"Return","src":"12084:8:9"}]}},{"body":{"id":2235,"nodeType":"Block","src":"12132:532:9","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"mid","nameLocation":"12154:3:9","nodeType":"VariableDeclaration","scope":2235,"src":"12146:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"id":2210,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12173:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2211,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12178:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2208,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"12160:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"12160:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2215,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"12421:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12428:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2214,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2392,2418,2444],"referencedDeclaration":2444,"src":"12408:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3179_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"12408:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2219,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12441:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2233,"nodeType":"Block","src":"12499:155:9","statements":[{"id":2232,"nodeType":"UncheckedBlock","src":"12576:64:9","statements":[{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2226,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12608:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12614:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ExpressionStatement","src":"12608:13:9"}]}]},"id":2234,"nodeType":"IfStatement","src":"12404:250:9","trueBody":{"id":2225,"nodeType":"Block","src":"12450:43:9","statements":[{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2221,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12468:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2222,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"12475:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"12468:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12120:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2204,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12126:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2236,"nodeType":"WhileStatement","src":"12113:551:9"},{"expression":{"id":2237,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"12681:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2186,"id":2238,"nodeType":"Return","src":"12674:10:9"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"11471:412:9","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:9","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"array","nameLocation":"11926:5:9","nodeType":"VariableDeclaration","scope":2240,"src":"11908:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ArrayTypeName","src":"11908:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"element","nameLocation":"11941:7:9","nodeType":"VariableDeclaration","scope":2240,"src":"11933:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:9"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"11973:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:9"},"scope":2517,"src":"11888:803:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"12875:709:9","statements":[{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"low","nameLocation":"12893:3:9","nodeType":"VariableDeclaration","scope":2302,"src":"12885:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2254,"initialValue":{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:9"},{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"high","nameLocation":"12918:4:9","nodeType":"VariableDeclaration","scope":2302,"src":"12910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2259,"initialValue":{"expression":{"id":2257,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"12925:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:9","memberName":"length","nodeType":"MemberAccess","src":"12925:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"12952:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"12948:48:9","trueBody":{"id":2265,"nodeType":"Block","src":"12963:33:9","statements":[{"expression":{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2250,"id":2264,"nodeType":"Return","src":"12977:8:9"}]}},{"body":{"id":2298,"nodeType":"Block","src":"13025:532:9","statements":[{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"mid","nameLocation":"13047:3:9","nodeType":"VariableDeclaration","scope":2298,"src":"13039:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2277,"initialValue":{"arguments":[{"id":2274,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"13066:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2275,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"13071:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2272,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"13053:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"13053:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2279,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"13320:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2280,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13327:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2457,2470,2483],"referencedDeclaration":2483,"src":"13301:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2282,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"13334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2296,"nodeType":"Block","src":"13504:43:9","statements":[{"expression":{"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2292,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"13522:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2293,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13529:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2295,"nodeType":"ExpressionStatement","src":"13522:10:9"}]},"id":2297,"nodeType":"IfStatement","src":"13297:250:9","trueBody":{"id":2291,"nodeType":"Block","src":"13343:155:9","statements":[{"id":2290,"nodeType":"UncheckedBlock","src":"13420:64:9","statements":[{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2284,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"13452:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13458:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2289,"nodeType":"ExpressionStatement","src":"13452:13:9"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"13013:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2268,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"13019:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"WhileStatement","src":"13006:551:9"},{"expression":{"id":2300,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"13574:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2250,"id":2301,"nodeType":"Return","src":"13567:10:9"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"12697:74:9","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:9","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"array","nameLocation":"12819:5:9","nodeType":"VariableDeclaration","scope":2303,"src":"12802:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ArrayTypeName","src":"12802:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"element","nameLocation":"12834:7:9","nodeType":"VariableDeclaration","scope":2303,"src":"12826:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:9"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"12866:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:9"},"scope":2517,"src":"12776:808:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"13768:709:9","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"low","nameLocation":"13786:3:9","nodeType":"VariableDeclaration","scope":2365,"src":"13778:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:9"},{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"high","nameLocation":"13811:4:9","nodeType":"VariableDeclaration","scope":2365,"src":"13803:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2322,"initialValue":{"expression":{"id":2320,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13818:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:9","memberName":"length","nodeType":"MemberAccess","src":"13818:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13845:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2329,"nodeType":"IfStatement","src":"13841:48:9","trueBody":{"id":2328,"nodeType":"Block","src":"13856:33:9","statements":[{"expression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2313,"id":2327,"nodeType":"Return","src":"13870:8:9"}]}},{"body":{"id":2361,"nodeType":"Block","src":"13918:532:9","statements":[{"assignments":[2334],"declarations":[{"constant":false,"id":2334,"mutability":"mutable","name":"mid","nameLocation":"13940:3:9","nodeType":"VariableDeclaration","scope":2361,"src":"13932:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2340,"initialValue":{"arguments":[{"id":2337,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13959:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2338,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13964:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2335,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"13946:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"13946:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2342,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"14213:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2343,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"14220:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2341,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2457,2470,2483],"referencedDeclaration":2483,"src":"14194:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2345,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"14227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2359,"nodeType":"Block","src":"14285:155:9","statements":[{"id":2358,"nodeType":"UncheckedBlock","src":"14362:64:9","statements":[{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2352,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14394:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"14400:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ExpressionStatement","src":"14394:13:9"}]}]},"id":2360,"nodeType":"IfStatement","src":"14190:250:9","trueBody":{"id":2351,"nodeType":"Block","src":"14236:43:9","statements":[{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2347,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"14254:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2348,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"14261:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2350,"nodeType":"ExpressionStatement","src":"14254:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13906:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2331,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13912:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2362,"nodeType":"WhileStatement","src":"13899:551:9"},{"expression":{"id":2363,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14467:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2313,"id":2364,"nodeType":"Return","src":"14460:10:9"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"13590:74:9","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:9","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"array","nameLocation":"13712:5:9","nodeType":"VariableDeclaration","scope":2366,"src":"13695:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ArrayTypeName","src":"13695:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"element","nameLocation":"13727:7:9","nodeType":"VariableDeclaration","scope":2366,"src":"13719:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:9"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2366,"src":"13759:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:9"},"scope":2517,"src":"13669:808:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"14793:167:9","statements":[{"assignments":[2379],"declarations":[{"constant":false,"id":2379,"mutability":"mutable","name":"slot","nameLocation":"14811:4:9","nodeType":"VariableDeclaration","scope":2391,"src":"14803:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2380,"nodeType":"VariableDeclarationStatement","src":"14803:12:9"},{"AST":{"nodeType":"YulBlock","src":"14850:40:9","statements":[{"nodeType":"YulAssignment","src":"14864:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2370,"isOffset":false,"isSlot":true,"src":"14872:8:9","suffix":"slot","valueSize":1},{"declaration":2379,"isOffset":false,"isSlot":false,"src":"14864:4:9","valueSize":1}],"flags":["memory-safe"],"id":2381,"nodeType":"InlineAssembly","src":"14825:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2386,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"14932:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2382,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14906:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"14906:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3069,"src":"14906:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"14906:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3170_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3170_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2377,"id":2390,"nodeType":"Return","src":"14899:54:9"}]},"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"14483:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:9","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"arr","nameLocation":"14719:3:9","nodeType":"VariableDeclaration","scope":2392,"src":"14701:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2369,"nodeType":"ArrayTypeName","src":"14701:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"pos","nameLocation":"14732:3:9","nodeType":"VariableDeclaration","scope":2392,"src":"14724:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:9"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"14760:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3170_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:9","14772:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3170,"src":"14760:23:9"},"referencedDeclaration":3170,"src":"14760:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3170_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:9"},"scope":2517,"src":"14679:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"15276:167:9","statements":[{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"slot","nameLocation":"15294:4:9","nodeType":"VariableDeclaration","scope":2417,"src":"15286:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2406,"nodeType":"VariableDeclarationStatement","src":"15286:12:9"},{"AST":{"nodeType":"YulBlock","src":"15333:40:9","statements":[{"nodeType":"YulAssignment","src":"15347:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2396,"isOffset":false,"isSlot":true,"src":"15355:8:9","suffix":"slot","valueSize":1},{"declaration":2405,"isOffset":false,"isSlot":false,"src":"15347:4:9","valueSize":1}],"flags":["memory-safe"],"id":2407,"nodeType":"InlineAssembly","src":"15308:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2412,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"15415:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2408,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"15389:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"15389:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3069,"src":"15389:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:9","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3221,"src":"15389:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3176_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3176_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2403,"id":2416,"nodeType":"Return","src":"15382:54:9"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"14966:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:9","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"arr","nameLocation":"15202:3:9","nodeType":"VariableDeclaration","scope":2418,"src":"15184:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2395,"nodeType":"ArrayTypeName","src":"15184:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"pos","nameLocation":"15215:3:9","nodeType":"VariableDeclaration","scope":2418,"src":"15207:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:9"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"15243:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3176_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2401,"nodeType":"UserDefinedTypeName","pathNode":{"id":2400,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:9","15255:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3176,"src":"15243:23:9"},"referencedDeclaration":3176,"src":"15243:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3176_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:9"},"scope":2517,"src":"15162:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2443,"nodeType":"Block","src":"15759:167:9","statements":[{"assignments":[2431],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"slot","nameLocation":"15777:4:9","nodeType":"VariableDeclaration","scope":2443,"src":"15769:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2432,"nodeType":"VariableDeclarationStatement","src":"15769:12:9"},{"AST":{"nodeType":"YulBlock","src":"15816:40:9","statements":[{"nodeType":"YulAssignment","src":"15830:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2422,"isOffset":false,"isSlot":true,"src":"15838:8:9","suffix":"slot","valueSize":1},{"declaration":2431,"isOffset":false,"isSlot":false,"src":"15830:4:9","valueSize":1}],"flags":["memory-safe"],"id":2433,"nodeType":"InlineAssembly","src":"15791:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2438,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"15898:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2434,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15872:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"15872:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3069,"src":"15872:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:9","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3232,"src":"15872:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3179_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2429,"id":2442,"nodeType":"Return","src":"15865:54:9"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"15449:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:9","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"arr","nameLocation":"15685:3:9","nodeType":"VariableDeclaration","scope":2444,"src":"15667:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ArrayTypeName","src":"15667:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"pos","nameLocation":"15698:3:9","nodeType":"VariableDeclaration","scope":2444,"src":"15690:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:9"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"15726:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2427,"nodeType":"UserDefinedTypeName","pathNode":{"id":2426,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:9","15738:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3179,"src":"15726:23:9"},"referencedDeclaration":3179,"src":"15726:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:9"},"scope":2517,"src":"15645:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"16227:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:9","statements":[{"nodeType":"YulAssignment","src":"16260:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:9"},"nodeType":"YulFunctionCall","src":"16277:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:9"},"nodeType":"YulFunctionCall","src":"16293:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:9"},"nodeType":"YulFunctionCall","src":"16273:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:9"},"nodeType":"YulFunctionCall","src":"16267:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2448,"isOffset":false,"isSlot":false,"src":"16281:3:9","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"16297:3:9","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"16260:3:9","valueSize":1}],"id":2455,"nodeType":"InlineAssembly","src":"16237:82:9"}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"15932:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:9","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"arr","nameLocation":"16173:3:9","nodeType":"VariableDeclaration","scope":2457,"src":"16156:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2447,"nodeType":"ArrayTypeName","src":"16156:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"pos","nameLocation":"16186:3:9","nodeType":"VariableDeclaration","scope":2457,"src":"16178:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:9"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"res","nameLocation":"16222:3:9","nodeType":"VariableDeclaration","scope":2457,"src":"16214:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:9"},"scope":2517,"src":"16128:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"16626:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:9","statements":[{"nodeType":"YulAssignment","src":"16659:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:9"},"nodeType":"YulFunctionCall","src":"16676:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:9"},"nodeType":"YulFunctionCall","src":"16692:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:9"},"nodeType":"YulFunctionCall","src":"16672:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:9"},"nodeType":"YulFunctionCall","src":"16666:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2461,"isOffset":false,"isSlot":false,"src":"16680:3:9","valueSize":1},{"declaration":2463,"isOffset":false,"isSlot":false,"src":"16696:3:9","valueSize":1},{"declaration":2466,"isOffset":false,"isSlot":false,"src":"16659:3:9","valueSize":1}],"id":2468,"nodeType":"InlineAssembly","src":"16636:82:9"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"16331:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:9","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"arr","nameLocation":"16572:3:9","nodeType":"VariableDeclaration","scope":2470,"src":"16555:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2460,"nodeType":"ArrayTypeName","src":"16555:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"pos","nameLocation":"16585:3:9","nodeType":"VariableDeclaration","scope":2470,"src":"16577:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:9"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"res","nameLocation":"16621:3:9","nodeType":"VariableDeclaration","scope":2470,"src":"16613:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:9"},"scope":2517,"src":"16527:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"17025:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:9","statements":[{"nodeType":"YulAssignment","src":"17058:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:9"},"nodeType":"YulFunctionCall","src":"17075:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:9"},"nodeType":"YulFunctionCall","src":"17091:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:9"},"nodeType":"YulFunctionCall","src":"17071:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:9"},"nodeType":"YulFunctionCall","src":"17065:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2474,"isOffset":false,"isSlot":false,"src":"17079:3:9","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"17095:3:9","valueSize":1},{"declaration":2479,"isOffset":false,"isSlot":false,"src":"17058:3:9","valueSize":1}],"id":2481,"nodeType":"InlineAssembly","src":"17035:82:9"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"16730:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:9","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"arr","nameLocation":"16971:3:9","nodeType":"VariableDeclaration","scope":2483,"src":"16954:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2473,"nodeType":"ArrayTypeName","src":"16954:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"pos","nameLocation":"16984:3:9","nodeType":"VariableDeclaration","scope":2483,"src":"16976:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:9"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"res","nameLocation":"17020:3:9","nodeType":"VariableDeclaration","scope":2483,"src":"17012:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:9"},"scope":2517,"src":"16926:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"17440:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:9"},"nodeType":"YulFunctionCall","src":"17489:23:9"},"nodeType":"YulExpressionStatement","src":"17489:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2487,"isOffset":false,"isSlot":true,"src":"17496:10:9","suffix":"slot","valueSize":1},{"declaration":2489,"isOffset":false,"isSlot":false,"src":"17508:3:9","valueSize":1}],"flags":["memory-safe"],"id":2492,"nodeType":"InlineAssembly","src":"17450:72:9"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"17129:234:9","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:9","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"array","nameLocation":"17411:5:9","nodeType":"VariableDeclaration","scope":2494,"src":"17393:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2486,"nodeType":"ArrayTypeName","src":"17393:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"len","nameLocation":"17426:3:9","nodeType":"VariableDeclaration","scope":2494,"src":"17418:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:9"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"17440:0:9"},"scope":2517,"src":"17368:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"17845:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:9"},"nodeType":"YulFunctionCall","src":"17894:23:9"},"nodeType":"YulExpressionStatement","src":"17894:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2498,"isOffset":false,"isSlot":true,"src":"17901:10:9","suffix":"slot","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"17913:3:9","valueSize":1}],"flags":["memory-safe"],"id":2503,"nodeType":"InlineAssembly","src":"17855:72:9"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"17534:234:9","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:9","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"array","nameLocation":"17816:5:9","nodeType":"VariableDeclaration","scope":2505,"src":"17798:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2497,"nodeType":"ArrayTypeName","src":"17798:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"len","nameLocation":"17831:3:9","nodeType":"VariableDeclaration","scope":2505,"src":"17823:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:9"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"17845:0:9"},"scope":2517,"src":"17773:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"18250:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:9"},"nodeType":"YulFunctionCall","src":"18299:23:9"},"nodeType":"YulExpressionStatement","src":"18299:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2509,"isOffset":false,"isSlot":true,"src":"18306:10:9","suffix":"slot","valueSize":1},{"declaration":2511,"isOffset":false,"isSlot":false,"src":"18318:3:9","valueSize":1}],"flags":["memory-safe"],"id":2514,"nodeType":"InlineAssembly","src":"18260:72:9"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"17939:234:9","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:9","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"array","nameLocation":"18221:5:9","nodeType":"VariableDeclaration","scope":2516,"src":"18203:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2508,"nodeType":"ArrayTypeName","src":"18203:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"len","nameLocation":"18236:3:9","nodeType":"VariableDeclaration","scope":2516,"src":"18228:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:9"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"18250:0:9"},"scope":2517,"src":"18178:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2518,"src":"459:17881:9","usedErrors":[],"usedEvents":[]}],"src":"183:18158:9"},"id":9},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2549]},"id":2550,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2519,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"131:92:10","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2549,"linearizedBaseContracts":[2549],"name":"Comparators","nameLocation":"232:11:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2533,"nodeType":"Block","src":"313:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"334:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2528,"id":2532,"nodeType":"Return","src":"323:12:10"}]},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:10","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"a","nameLocation":"270:1:10","nodeType":"VariableDeclaration","scope":2534,"src":"262:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"b","nameLocation":"281:1:10","nodeType":"VariableDeclaration","scope":2534,"src":"273:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:10"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"307:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2526,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:10"},"scope":2549,"src":"250:92:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"411:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"428:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"432:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2542,"id":2546,"nodeType":"Return","src":"421:12:10"}]},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:10","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"a","nameLocation":"368:1:10","nodeType":"VariableDeclaration","scope":2548,"src":"360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"b","nameLocation":"379:1:10","nodeType":"VariableDeclaration","scope":2548,"src":"371:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:10"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"405:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:10"},"scope":2549,"src":"348:92:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2550,"src":"224:218:10","usedErrors":[],"usedEvents":[]}],"src":"105:338:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2579]},"id":2580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2551,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2579,"linearizedBaseContracts":[2579],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2560,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":2557,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2556,"id":2559,"nodeType":"Return","src":"728:17:11"}]},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":2579,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":2566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2565,"id":2568,"nodeType":"Return","src":"835:15:11"}]},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2563,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":2579,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2577,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2574,"id":2576,"nodeType":"Return","src":"945:8:11"}]},"id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2578,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":2579,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2580,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2631]},"id":2632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2581,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2631,"linearizedBaseContracts":[2631],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":2586,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":2631,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":2590,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":2631,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":2594,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":2631,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":2598,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":2631,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":2602,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":2631,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":2606,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":2631,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":2610,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":2631,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":2614,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":2631,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":2618,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":2631,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":2622,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":2631,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2629,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:12"},"nodeType":"YulFunctionCall","src":"1868:24:12"},"nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:12"},"nodeType":"YulFunctionCall","src":"1905:18:12"},"nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:12"},"nodeType":"YulFunctionCall","src":"1936:18:12"},"nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2625,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":2628,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":2630,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":2631,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2632,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2579],"Pausable":[2748]},"id":2749,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2633,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2749,"sourceUnit":2580,"src":"128:45:13","symbolAliases":[{"foreign":{"id":2634,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"136:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2637,"name":"Context","nameLocations":["645:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"645:7:13"},"id":2638,"nodeType":"InheritanceSpecifier","src":"645:7:13"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"175:439:13","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2748,"linearizedBaseContracts":[2748,2579],"name":"Pausable","nameLocation":"633:8:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2640,"mutability":"mutable","name":"_paused","nameLocation":"672:7:13","nodeType":"VariableDeclaration","scope":2748,"src":"659:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"686:73:13","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2645,"name":"Paused","nameLocation":"770:6:13","nodeType":"EventDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:13","nodeType":"VariableDeclaration","scope":2645,"src":"777:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:13"},"src":"764:30:13"},{"anonymous":false,"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"800:70:13","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2650,"name":"Unpaused","nameLocation":"881:8:13","nodeType":"EventDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:13","nodeType":"VariableDeclaration","scope":2650,"src":"890:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:13"},"src":"875:32:13"},{"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"913:76:13","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2653,"name":"EnforcedPause","nameLocation":"1000:13:13","nodeType":"ErrorDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"1013:2:13"},"src":"994:22:13"},{"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"1022:80:13","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2656,"name":"ExpectedPause","nameLocation":"1113:13:13","nodeType":"ErrorDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[],"src":"1126:2:13"},"src":"1107:22:13"},{"body":{"id":2664,"nodeType":"Block","src":"1221:32:13","statements":[{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"1231:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"ExpressionStatement","src":"1231:15:13"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"1135:67:13","text":" @dev Initializes the contract in unpaused state."},"id":2665,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"1218:2:13"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[],"src":"1221:0:13"},"scope":2748,"src":"1207:46:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2672,"nodeType":"Block","src":"1464:47:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2668,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"1474:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2670,"nodeType":"ExpressionStatement","src":"1474:19:13"},{"id":2671,"nodeType":"PlaceholderStatement","src":"1503:1:13"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"1259:175:13","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2673,"name":"whenNotPaused","nameLocation":"1448:13:13","nodeType":"ModifierDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"1461:2:13"},"src":"1439:72:13","virtual":false,"visibility":"internal"},{"body":{"id":2680,"nodeType":"Block","src":"1711:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2676,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1721:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"1721:16:13"},{"id":2679,"nodeType":"PlaceholderStatement","src":"1747:1:13"}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"1517:167:13","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2681,"name":"whenPaused","nameLocation":"1698:10:13","nodeType":"ModifierDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"1708:2:13"},"src":"1689:66:13","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"1903:31:13","statements":[{"expression":{"id":2687,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"1920:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2686,"id":2688,"nodeType":"Return","src":"1913:14:13"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"1761:84:13","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:13","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[],"src":"1865:2:13"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"1897:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2684,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:13"},"scope":2748,"src":"1850:84:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2701,"nodeType":"Block","src":"2053:77:13","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2694,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2067:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"nodeType":"IfStatement","src":"2063:61:13","trueBody":{"id":2699,"nodeType":"Block","src":"2077:47:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2696,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"2098:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2698,"nodeType":"RevertStatement","src":"2091:22:13"}]}}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"1940:57:13","text":" @dev Throws if the contract is paused."},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:13","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[],"src":"2053:0:13"},"scope":2748,"src":"2002:128:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"2250:78:13","statements":[{"condition":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:13","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2706,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2265:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"2260:62:13","trueBody":{"id":2712,"nodeType":"Block","src":"2275:47:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2709,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2296:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"RevertStatement","src":"2289:22:13"}]}}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"2136:61:13","text":" @dev Throws if the contract is not paused."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:13","nodeType":"FunctionDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"2225:2:13"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[],"src":"2250:0:13"},"scope":2748,"src":"2202:126:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"2512:66:13","statements":[{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2522:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"ExpressionStatement","src":"2522:14:13"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2726,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"2558:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2725,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"2551:6:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"EmitStatement","src":"2546:25:13"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2334:124:13","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2731,"implemented":true,"kind":"function","modifiers":[{"id":2719,"kind":"modifierInvocation","modifierName":{"id":2718,"name":"whenNotPaused","nameLocations":["2498:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"2498:13:13"},"nodeType":"ModifierInvocation","src":"2498:13:13"}],"name":"_pause","nameLocation":"2472:6:13","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"2478:2:13"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"2512:0:13"},"scope":2748,"src":"2463:115:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"2758:69:13","statements":[{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2768:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2740,"nodeType":"ExpressionStatement","src":"2768:15:13"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2742,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"2807:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2741,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"2798:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"EmitStatement","src":"2793:27:13"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"2584:121:13","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2747,"implemented":true,"kind":"function","modifiers":[{"id":2735,"kind":"modifierInvocation","modifierName":{"id":2734,"name":"whenPaused","nameLocations":["2747:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2681,"src":"2747:10:13"},"nodeType":"ModifierInvocation","src":"2747:10:13"}],"name":"_unpause","nameLocation":"2719:8:13","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[],"src":"2727:2:13"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[],"src":"2758:0:13"},"scope":2748,"src":"2710:117:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2749,"src":"615:2214:13","usedErrors":[2653,2656],"usedEvents":[2645,2650]}],"src":"102:2728:13"},"id":13},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2817]},"id":2818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2750,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"135:894:14","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2817,"linearizedBaseContracts":[2817],"name":"ReentrancyGuard","nameLocation":"1048:15:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2754,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:14","nodeType":"VariableDeclaration","scope":2817,"src":"1818:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2757,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:14","nodeType":"VariableDeclaration","scope":2817,"src":"1864:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2759,"mutability":"mutable","name":"_status","nameLocation":"1923:7:14","nodeType":"VariableDeclaration","scope":2817,"src":"1907:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"1937:52:14","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2762,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:14","nodeType":"ErrorDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[],"src":"2028:2:14"},"src":"1994:37:14"},{"body":{"id":2769,"nodeType":"Block","src":"2051:38:14","statements":[{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"2061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2766,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2071:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"2061:21:14"}]},"id":2770,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[],"src":"2048:2:14"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[],"src":"2051:0:14"},"scope":2817,"src":"2037:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"2490:79:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2773,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"2500:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"2500:21:14"},{"id":2776,"nodeType":"PlaceholderStatement","src":"2531:1:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2777,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"2542:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"ExpressionStatement","src":"2542:20:14"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"2095:366:14","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2781,"name":"nonReentrant","nameLocation":"2475:12:14","nodeType":"ModifierDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"2487:2:14"},"src":"2466:103:14","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"2614:268:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"2702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2785,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"2713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2791,"nodeType":"IfStatement","src":"2698:86:14","trueBody":{"id":2790,"nodeType":"Block","src":"2722:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2787,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"2743:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2789,"nodeType":"RevertStatement","src":"2736:37:14"}]}},{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2792,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2793,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"2868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2795,"nodeType":"ExpressionStatement","src":"2858:17:14"}]},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:14","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"2603:2:14"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[],"src":"2614:0:14"},"scope":2817,"src":"2575:307:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2804,"nodeType":"Block","src":"2926:170:14","statements":[{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2800,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"3068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2801,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"3078:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"3068:21:14"}]},"id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:14","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"2915:2:14"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"2926:0:14"},"scope":2817,"src":"2888:208:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2815,"nodeType":"Block","src":"3339:42:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"3356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2812,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"3367:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2810,"id":2814,"nodeType":"Return","src":"3349:25:14"}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"3102:168:14","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:14","nodeType":"FunctionDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"3307:2:14"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"3333:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2808,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:14"},"scope":2817,"src":"3275:106:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2818,"src":"1030:2353:14","usedErrors":[2762],"usedEvents":[]}],"src":"109:3275:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2823],"ShortStrings":[3034],"StorageSlot":[3288]},"id":3035,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3035,"sourceUnit":3289,"src":"132:46:15","symbolAliases":[{"foreign":{"id":2820,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"140:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2823,"name":"ShortString","nameLocation":"353:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:15","underlyingType":{"id":2822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2824,"nodeType":"StructuredDocumentation","src":"378:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":3034,"linearizedBaseContracts":[3034],"name":"ShortStrings","nameLocation":"1263:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2827,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:15","nodeType":"VariableDeclaration","scope":3034,"src":"1345:111:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2831,"name":"StringTooLong","nameLocation":"1469:13:15","nodeType":"ErrorDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"str","nameLocation":"1490:3:15","nodeType":"VariableDeclaration","scope":2831,"src":"1483:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2828,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:15"},"src":"1463:32:15"},{"errorSelector":"b3512b0c","id":2833,"name":"InvalidShortString","nameLocation":"1506:18:15","nodeType":"ErrorDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[],"src":"1524:2:15"},"src":"1500:27:15"},{"body":{"id":2876,"nodeType":"Block","src":"1786:208:15","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:15","nodeType":"VariableDeclaration","scope":2876,"src":"1796:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"id":2846,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"1822:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:15","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2849,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1840:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:15","memberName":"length","nodeType":"MemberAccess","src":"1840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"nodeType":"IfStatement","src":"1836:72:15","trueBody":{"id":2857,"nodeType":"Block","src":"1858:50:15","statements":[{"errorCall":{"arguments":[{"id":2854,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"1893:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2853,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"1879:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"RevertStatement","src":"1872:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2867,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1965:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{}}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:15","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2870,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:15","memberName":"length","nodeType":"MemberAccess","src":"1974:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:15","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2859,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"1924:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"type(ShortString)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"functionReturnParameters":2841,"id":2875,"nodeType":"Return","src":"1917:70:15"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"1533:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:15","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"str","nameLocation":"1745:3:15","nodeType":"VariableDeclaration","scope":2877,"src":"1731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:15"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"1773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":2839,"nodeType":"UserDefinedTypeName","pathNode":{"id":2838,"name":"ShortString","nameLocations":["1773:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"1773:11:15"},"referencedDeclaration":2823,"src":"1773:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:15"},"scope":3034,"src":"1708:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2902,"nodeType":"Block","src":"2152:304:15","statements":[{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"len","nameLocation":"2170:3:15","nodeType":"VariableDeclaration","scope":2902,"src":"2162:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2891,"initialValue":{"arguments":[{"id":2889,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2187:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"id":2888,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"2176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:15"},{"assignments":[2893],"declarations":[{"constant":false,"id":2893,"mutability":"mutable","name":"str","nameLocation":"2294:3:15","nodeType":"VariableDeclaration","scope":2902,"src":"2280:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2898,"initialValue":{"arguments":[{"hexValue":"3332","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2894,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:15"},{"AST":{"nodeType":"YulBlock","src":"2349:81:15","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:15"},"nodeType":"YulFunctionCall","src":"2363:16:15"},"nodeType":"YulExpressionStatement","src":"2363:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:15"},"nodeType":"YulFunctionCall","src":"2399:14:15"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:15"},"nodeType":"YulFunctionCall","src":"2392:28:15"},"nodeType":"YulExpressionStatement","src":"2392:28:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2887,"isOffset":false,"isSlot":false,"src":"2375:3:15","valueSize":1},{"declaration":2881,"isOffset":false,"isSlot":false,"src":"2415:4:15","valueSize":1},{"declaration":2893,"isOffset":false,"isSlot":false,"src":"2370:3:15","valueSize":1},{"declaration":2893,"isOffset":false,"isSlot":false,"src":"2403:3:15","valueSize":1}],"flags":["memory-safe"],"id":2899,"nodeType":"InlineAssembly","src":"2324:106:15"},{"expression":{"id":2900,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2446:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2885,"id":2901,"nodeType":"Return","src":"2439:10:15"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"2000:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2903,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:15","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:15","nodeType":"VariableDeclaration","scope":2903,"src":"2096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"ShortString","nameLocations":["2096:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2096:11:15"},"referencedDeclaration":2823,"src":"2096:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:15"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2903,"src":"2137:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2883,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:15"},"scope":3034,"src":"2078:378:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"2598:175:15","statements":[{"assignments":[2913],"declarations":[{"constant":false,"id":2913,"mutability":"mutable","name":"result","nameLocation":"2616:6:15","nodeType":"VariableDeclaration","scope":2934,"src":"2608:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2918,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2652:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"expression":{"id":2916,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2633:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"type(ShortString)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:15","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"2679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2931,"nodeType":"IfStatement","src":"2675:69:15","trueBody":{"id":2930,"nodeType":"Block","src":"2692:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2927,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2713:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"RevertStatement","src":"2706:27:15"}]}},{"expression":{"id":2932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"2760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2911,"id":2933,"nodeType":"Return","src":"2753:13:15"}]},"documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"2462:61:15","text":" @dev Return the length of a `ShortString`."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:15","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:15","nodeType":"VariableDeclaration","scope":2935,"src":"2548:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":2906,"nodeType":"UserDefinedTypeName","pathNode":{"id":2905,"name":"ShortString","nameLocations":["2548:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2548:11:15"},"referencedDeclaration":2823,"src":"2548:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:15"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2935,"src":"2589:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:15"},"scope":3034,"src":"2528:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2974,"nodeType":"Block","src":"2996:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3016:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:15","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:15","memberName":"length","nodeType":"MemberAccess","src":"3010:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2972,"nodeType":"Block","src":"3094:127:15","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2961,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3134:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2958,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"3108:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3288_$","typeString":"type(library StorageSlot)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"3108:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$3185_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3185_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"3108:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3149:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2966,"nodeType":"ExpressionStatement","src":"3108:46:15"},{"expression":{"arguments":[{"id":2969,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3192:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2967,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"3175:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"type(ShortString)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"functionReturnParameters":2945,"id":2971,"nodeType":"Return","src":"3168:42:15"}]},"id":2973,"nodeType":"IfStatement","src":"3006:215:15","trueBody":{"id":2957,"nodeType":"Block","src":"3036:52:15","statements":[{"expression":{"arguments":[{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3071:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2953,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3057:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"functionReturnParameters":2945,"id":2956,"nodeType":"Return","src":"3050:27:15"}]}}]},"documentation":{"id":2936,"nodeType":"StructuredDocumentation","src":"2779:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:15","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"value","nameLocation":"2936:5:15","nodeType":"VariableDeclaration","scope":2975,"src":"2922:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"store","nameLocation":"2958:5:15","nodeType":"VariableDeclaration","scope":2975,"src":"2943:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2939,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:15"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2975,"src":"2983:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":2943,"nodeType":"UserDefinedTypeName","pathNode":{"id":2942,"name":"ShortString","nameLocations":["2983:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2983:11:15"},"referencedDeclaration":2823,"src":"2983:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:15"},"scope":3034,"src":"2887:340:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3001,"nodeType":"Block","src":"3467:158:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"3500:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"expression":{"id":2986,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"3481:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"type(ShortString)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2990,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3510:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2999,"nodeType":"Block","src":"3582:37:15","statements":[{"expression":{"id":2997,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"3603:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2985,"id":2998,"nodeType":"Return","src":"3596:12:15"}]},"id":3000,"nodeType":"IfStatement","src":"3477:142:15","trueBody":{"id":2996,"nodeType":"Block","src":"3529:47:15","statements":[{"expression":{"arguments":[{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"3559:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"id":2992,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"3550:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2985,"id":2995,"nodeType":"Return","src":"3543:22:15"}]}}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"3233:120:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":3002,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:15","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"value","nameLocation":"3400:5:15","nodeType":"VariableDeclaration","scope":3002,"src":"3388:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":2978,"nodeType":"UserDefinedTypeName","pathNode":{"id":2977,"name":"ShortString","nameLocations":["3388:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"3388:11:15"},"referencedDeclaration":2823,"src":"3388:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"store","nameLocation":"3422:5:15","nodeType":"VariableDeclaration","scope":3002,"src":"3407:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2980,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:15"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3002,"src":"3452:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:15"},"scope":3034,"src":"3358:267:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"4105:174:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"4138:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"expression":{"id":3013,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"4119:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"type(ShortString)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3017,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"4148:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3030,"nodeType":"Block","src":"4222:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":3026,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"4249:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3024,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:15","typeDescriptions":{}}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:15","memberName":"length","nodeType":"MemberAccess","src":"4243:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3012,"id":3029,"nodeType":"Return","src":"4236:26:15"}]},"id":3031,"nodeType":"IfStatement","src":"4115:158:15","trueBody":{"id":3023,"nodeType":"Block","src":"4167:49:15","statements":[{"expression":{"arguments":[{"id":3020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"4199:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}],"id":3019,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4188:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2823_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3012,"id":3022,"nodeType":"Return","src":"4181:24:15"}]}}]},"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"3631:364:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:15","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"value","nameLocation":"4044:5:15","nodeType":"VariableDeclaration","scope":3033,"src":"4032:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":3005,"nodeType":"UserDefinedTypeName","pathNode":{"id":3004,"name":"ShortString","nameLocations":["4032:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"4032:11:15"},"referencedDeclaration":2823,"src":"4032:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"store","nameLocation":"4066:5:15","nodeType":"VariableDeclaration","scope":3033,"src":"4051:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3007,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:15"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3033,"src":"4096:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:15"},"scope":3034,"src":"4000:279:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3035,"src":"1255:3026:15","usedErrors":[2831,2833],"usedEvents":[]}],"src":"106:4176:15"},"id":15},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3164]},"id":3165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3036,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"225:1372:16","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3164,"linearizedBaseContracts":[3164],"name":"SlotDerivation","nameLocation":"1606:14:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3046,"nodeType":"Block","src":"1789:194:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:16"},"nodeType":"YulFunctionCall","src":"1865:20:16"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:16"},"nodeType":"YulFunctionCall","src":"1887:16:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:16"},"nodeType":"YulFunctionCall","src":"1855:49:16"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:16"},"nodeType":"YulFunctionCall","src":"1851:57:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:16"},"nodeType":"YulFunctionCall","src":"1838:71:16"},"nodeType":"YulExpressionStatement","src":"1838:71:16"},{"nodeType":"YulAssignment","src":"1922:45:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:16"},"nodeType":"YulFunctionCall","src":"1934:21:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:16"},"nodeType":"YulFunctionCall","src":"1957:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:16"},"nodeType":"YulFunctionCall","src":"1930:37:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"1869:9:16","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"1893:9:16","valueSize":1},{"declaration":3043,"isOffset":false,"isSlot":false,"src":"1922:4:16","valueSize":1}],"flags":["memory-safe"],"id":3045,"nodeType":"InlineAssembly","src":"1799:178:16"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"1627:74:16","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:16","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:16","nodeType":"VariableDeclaration","scope":3047,"src":"1727:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3039,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:16"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"slot","nameLocation":"1783:4:16","nodeType":"VariableDeclaration","scope":3047,"src":"1775:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:16"},"scope":3164,"src":"1706:277:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3068,"nodeType":"Block","src":"2175:86:16","statements":[{"id":3067,"nodeType":"UncheckedBlock","src":"2185:70:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3061,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2232:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:16","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3063,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2240:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:16","typeDescriptions":{}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3056,"id":3066,"nodeType":"Return","src":"2209:35:16"}]}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"1989:99:16","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:16","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"slot","nameLocation":"2117:4:16","nodeType":"VariableDeclaration","scope":3069,"src":"2109:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"pos","nameLocation":"2131:3:16","nodeType":"VariableDeclaration","scope":3069,"src":"2123:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:16"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"result","nameLocation":"2167:6:16","nodeType":"VariableDeclaration","scope":3069,"src":"2159:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:16"},"scope":3164,"src":"2093:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3078,"nodeType":"Block","src":"2464:127:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:16","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:16"},"nodeType":"YulFunctionCall","src":"2513:18:16"},"nodeType":"YulExpressionStatement","src":"2513:18:16"},{"nodeType":"YulAssignment","src":"2544:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:16"},"nodeType":"YulFunctionCall","src":"2554:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2544:6:16","valueSize":1},{"declaration":3072,"isOffset":false,"isSlot":false,"src":"2526:4:16","valueSize":1}],"flags":["memory-safe"],"id":3077,"nodeType":"InlineAssembly","src":"2474:111:16"}]},"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"2267:118:16","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:16","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"slot","nameLocation":"2419:4:16","nodeType":"VariableDeclaration","scope":3079,"src":"2411:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:16"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"result","nameLocation":"2456:6:16","nodeType":"VariableDeclaration","scope":3079,"src":"2448:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:16"},"scope":3164,"src":"2390:201:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3090,"nodeType":"Block","src":"2769:179:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:16","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:16","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:16"},"nodeType":"YulFunctionCall","src":"2848:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:16"},"nodeType":"YulFunctionCall","src":"2840:15:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:16"},"nodeType":"YulFunctionCall","src":"2831:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:16"},"nodeType":"YulFunctionCall","src":"2818:39:16"},"nodeType":"YulExpressionStatement","src":"2818:39:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:16"},"nodeType":"YulFunctionCall","src":"2870:18:16"},"nodeType":"YulExpressionStatement","src":"2870:18:16"},{"nodeType":"YulAssignment","src":"2901:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:16"},"nodeType":"YulFunctionCall","src":"2911:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3084,"isOffset":false,"isSlot":false,"src":"2835:3:16","valueSize":1},{"declaration":3087,"isOffset":false,"isSlot":false,"src":"2901:6:16","valueSize":1},{"declaration":3082,"isOffset":false,"isSlot":false,"src":"2883:4:16","valueSize":1}],"flags":["memory-safe"],"id":3089,"nodeType":"InlineAssembly","src":"2779:163:16"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"2597:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3091,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:16","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":3091,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"key","nameLocation":"2725:3:16","nodeType":"VariableDeclaration","scope":3091,"src":"2717:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:16"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"result","nameLocation":"2761:6:16","nodeType":"VariableDeclaration","scope":3091,"src":"2753:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:16"},"scope":3164,"src":"2680:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3102,"nodeType":"Block","src":"3123:173:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:16"},"nodeType":"YulFunctionCall","src":"3192:11:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:16"},"nodeType":"YulFunctionCall","src":"3185:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:16"},"nodeType":"YulFunctionCall","src":"3172:33:16"},"nodeType":"YulExpressionStatement","src":"3172:33:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:16"},"nodeType":"YulFunctionCall","src":"3218:18:16"},"nodeType":"YulExpressionStatement","src":"3218:18:16"},{"nodeType":"YulAssignment","src":"3249:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:16"},"nodeType":"YulFunctionCall","src":"3259:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3096,"isOffset":false,"isSlot":false,"src":"3199:3:16","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"3249:6:16","valueSize":1},{"declaration":3094,"isOffset":false,"isSlot":false,"src":"3231:4:16","valueSize":1}],"flags":["memory-safe"],"id":3101,"nodeType":"InlineAssembly","src":"3133:157:16"}]},"documentation":{"id":3092,"nodeType":"StructuredDocumentation","src":"2954:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:16","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"slot","nameLocation":"3068:4:16","nodeType":"VariableDeclaration","scope":3103,"src":"3060:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"key","nameLocation":"3079:3:16","nodeType":"VariableDeclaration","scope":3103,"src":"3074:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:16"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"result","nameLocation":"3115:6:16","nodeType":"VariableDeclaration","scope":3103,"src":"3107:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:16"},"scope":3164,"src":"3037:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"3474:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:16"},"nodeType":"YulFunctionCall","src":"3523:17:16"},"nodeType":"YulExpressionStatement","src":"3523:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:16"},"nodeType":"YulFunctionCall","src":"3553:18:16"},"nodeType":"YulExpressionStatement","src":"3553:18:16"},{"nodeType":"YulAssignment","src":"3584:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:16"},"nodeType":"YulFunctionCall","src":"3594:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3108,"isOffset":false,"isSlot":false,"src":"3536:3:16","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"3584:6:16","valueSize":1},{"declaration":3106,"isOffset":false,"isSlot":false,"src":"3566:4:16","valueSize":1}],"flags":["memory-safe"],"id":3113,"nodeType":"InlineAssembly","src":"3484:141:16"}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"3302:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:16","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"slot","nameLocation":"3416:4:16","nodeType":"VariableDeclaration","scope":3115,"src":"3408:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"key","nameLocation":"3430:3:16","nodeType":"VariableDeclaration","scope":3115,"src":"3422:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:16"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"result","nameLocation":"3466:6:16","nodeType":"VariableDeclaration","scope":3115,"src":"3458:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:16"},"scope":3164,"src":"3385:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3126,"nodeType":"Block","src":"3809:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:16"},"nodeType":"YulFunctionCall","src":"3858:17:16"},"nodeType":"YulExpressionStatement","src":"3858:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:16"},"nodeType":"YulFunctionCall","src":"3888:18:16"},"nodeType":"YulExpressionStatement","src":"3888:18:16"},{"nodeType":"YulAssignment","src":"3919:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:16"},"nodeType":"YulFunctionCall","src":"3929:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3120,"isOffset":false,"isSlot":false,"src":"3871:3:16","valueSize":1},{"declaration":3123,"isOffset":false,"isSlot":false,"src":"3919:6:16","valueSize":1},{"declaration":3118,"isOffset":false,"isSlot":false,"src":"3901:4:16","valueSize":1}],"flags":["memory-safe"],"id":3125,"nodeType":"InlineAssembly","src":"3819:141:16"}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"3637:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:16","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"slot","nameLocation":"3751:4:16","nodeType":"VariableDeclaration","scope":3127,"src":"3743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"key","nameLocation":"3765:3:16","nodeType":"VariableDeclaration","scope":3127,"src":"3757:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:16"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"result","nameLocation":"3801:6:16","nodeType":"VariableDeclaration","scope":3127,"src":"3793:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:16"},"scope":3164,"src":"3720:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"4143:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:16"},"nodeType":"YulFunctionCall","src":"4192:17:16"},"nodeType":"YulExpressionStatement","src":"4192:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:16"},"nodeType":"YulFunctionCall","src":"4222:18:16"},"nodeType":"YulExpressionStatement","src":"4222:18:16"},{"nodeType":"YulAssignment","src":"4253:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:16"},"nodeType":"YulFunctionCall","src":"4263:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3132,"isOffset":false,"isSlot":false,"src":"4205:3:16","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"4253:6:16","valueSize":1},{"declaration":3130,"isOffset":false,"isSlot":false,"src":"4235:4:16","valueSize":1}],"flags":["memory-safe"],"id":3137,"nodeType":"InlineAssembly","src":"4153:141:16"}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"3972:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:16","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"slot","nameLocation":"4086:4:16","nodeType":"VariableDeclaration","scope":3139,"src":"4078:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"key","nameLocation":"4099:3:16","nodeType":"VariableDeclaration","scope":3139,"src":"4092:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3131,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:16"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"result","nameLocation":"4135:6:16","nodeType":"VariableDeclaration","scope":3139,"src":"4127:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:16"},"scope":3164,"src":"4055:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"4484:326:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:16"},"nodeType":"YulFunctionCall","src":"4547:10:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:16"},"nodeType":"YulFunctionCall","src":"4583:14:16"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:16"},"nodeType":"YulFunctionCall","src":"4621:18:16"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:16","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:16"},"nodeType":"YulFunctionCall","src":"4665:10:16"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:16"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:16"},"nodeType":"YulFunctionCall","src":"4688:17:16"},"nodeType":"YulExpressionStatement","src":"4688:17:16"},{"nodeType":"YulAssignment","src":"4718:45:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:16"},"nodeType":"YulFunctionCall","src":"4745:17:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:16"},"nodeType":"YulFunctionCall","src":"4728:35:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:16"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:16"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:16"},"nodeType":"YulFunctionCall","src":"4776:18:16"},"nodeType":"YulExpressionStatement","src":"4776:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3144,"isOffset":false,"isSlot":false,"src":"4553:3:16","valueSize":1},{"declaration":3144,"isOffset":false,"isSlot":false,"src":"4587:3:16","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"4718:6:16","valueSize":1},{"declaration":3142,"isOffset":false,"isSlot":false,"src":"4700:4:16","valueSize":1}],"flags":["memory-safe"],"id":3149,"nodeType":"InlineAssembly","src":"4494:310:16"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"4306:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:16","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"slot","nameLocation":"4420:4:16","nodeType":"VariableDeclaration","scope":3151,"src":"4412:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"key","nameLocation":"4440:3:16","nodeType":"VariableDeclaration","scope":3151,"src":"4426:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3143,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:16"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"result","nameLocation":"4476:6:16","nodeType":"VariableDeclaration","scope":3151,"src":"4468:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:16"},"scope":3164,"src":"4389:421:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"4993:326:16","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:16"},"nodeType":"YulFunctionCall","src":"5056:10:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:16"},"nodeType":"YulFunctionCall","src":"5092:14:16"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:16"},"nodeType":"YulFunctionCall","src":"5130:18:16"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:16","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:16"},"nodeType":"YulFunctionCall","src":"5174:10:16"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:16"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:16"},"nodeType":"YulFunctionCall","src":"5197:17:16"},"nodeType":"YulExpressionStatement","src":"5197:17:16"},{"nodeType":"YulAssignment","src":"5227:45:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:16"},"nodeType":"YulFunctionCall","src":"5254:17:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:16"},"nodeType":"YulFunctionCall","src":"5237:35:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:16"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:16"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:16"},"nodeType":"YulFunctionCall","src":"5285:18:16"},"nodeType":"YulExpressionStatement","src":"5285:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3156,"isOffset":false,"isSlot":false,"src":"5062:3:16","valueSize":1},{"declaration":3156,"isOffset":false,"isSlot":false,"src":"5096:3:16","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"5227:6:16","valueSize":1},{"declaration":3154,"isOffset":false,"isSlot":false,"src":"5209:4:16","valueSize":1}],"flags":["memory-safe"],"id":3161,"nodeType":"InlineAssembly","src":"5003:310:16"}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"4816:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:16","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"slot","nameLocation":"4930:4:16","nodeType":"VariableDeclaration","scope":3163,"src":"4922:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"key","nameLocation":"4949:3:16","nodeType":"VariableDeclaration","scope":3163,"src":"4936:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:16"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"result","nameLocation":"4985:6:16","nodeType":"VariableDeclaration","scope":3163,"src":"4977:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:16"},"scope":3164,"src":"4899:420:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3165,"src":"1598:3723:16","usedErrors":[],"usedEvents":[]}],"src":"199:5123:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3288]},"id":3289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3288,"linearizedBaseContracts":[3288],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3170,"members":[{"constant":false,"id":3169,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":3170,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3168,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":3288,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3173,"members":[{"constant":false,"id":3172,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":3173,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3171,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":3288,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3176,"members":[{"constant":false,"id":3175,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":3176,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":3288,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3179,"members":[{"constant":false,"id":3178,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":3179,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":3288,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3182,"members":[{"constant":false,"id":3181,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":3182,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3180,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":3288,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3185,"members":[{"constant":false,"id":3184,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":3185,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3183,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":3288,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3188,"members":[{"constant":false,"id":3187,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":3188,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3186,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":3288,"src":"1756:45:17","visibility":"public"},{"body":{"id":3198,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:17","statements":[{"nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3195,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":3197,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":3199,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":3199,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3170_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3194,"nodeType":"UserDefinedTypeName","pathNode":{"id":3193,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3170,"src":"1960:11:17"},"referencedDeclaration":3170,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3170_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":3288,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:17","statements":[{"nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3206,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":3202,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":3208,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":3210,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":3210,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3173_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3205,"nodeType":"UserDefinedTypeName","pathNode":{"id":3204,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3173,"src":"2220:11:17"},"referencedDeclaration":3173,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3173_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":3288,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3220,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:17","statements":[{"nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3217,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":3213,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":3219,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":3221,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":3221,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3176_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3216,"nodeType":"UserDefinedTypeName","pathNode":{"id":3215,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3176,"src":"2480:11:17"},"referencedDeclaration":3176,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3176_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":3288,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3231,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:17","statements":[{"nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3228,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":3230,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":3232,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":3232,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3227,"nodeType":"UserDefinedTypeName","pathNode":{"id":3226,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3179,"src":"2740:11:17"},"referencedDeclaration":3179,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3179_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":3288,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:17","statements":[{"nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3239,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":3241,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":3243,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":3243,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3182_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3238,"nodeType":"UserDefinedTypeName","pathNode":{"id":3237,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"2998:10:17"},"referencedDeclaration":3182,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3182_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":3288,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:17","statements":[{"nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3250,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":3246,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":3252,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":3254,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":3254,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3185_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3249,"nodeType":"UserDefinedTypeName","pathNode":{"id":3248,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3185,"src":"3255:10:17"},"referencedDeclaration":3185,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3185_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":3288,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:17","statements":[{"nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3261,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3263,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":3265,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3256,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":3265,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3185_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3260,"nodeType":"UserDefinedTypeName","pathNode":{"id":3259,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3185,"src":"3536:10:17"},"referencedDeclaration":3185,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3185_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":3288,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3275,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:17","statements":[{"nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3272,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":3268,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":3274,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":3276,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":3276,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3188_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3271,"nodeType":"UserDefinedTypeName","pathNode":{"id":3270,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"3797:9:17"},"referencedDeclaration":3188,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3188_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":3288,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:17","statements":[{"nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3283,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3285,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":3287,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":3287,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3188_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3282,"nodeType":"UserDefinedTypeName","pathNode":{"id":3281,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"4073:9:17"},"referencedDeclaration":3188,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3188_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":3288,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3289,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5899],"SignedMath":[7808],"Strings":[3608]},"id":3609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3290,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3609,"sourceUnit":5900,"src":"127:37:18","symbolAliases":[{"foreign":{"id":3291,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3609,"sourceUnit":7809,"src":"165:49:18","symbolAliases":[{"foreign":{"id":3293,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7808,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":3608,"linearizedBaseContracts":[3608],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3298,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":3608,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3296,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3301,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":3608,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3299,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3308,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":3308,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":3308,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":3355,"nodeType":"Block","src":"708:561:18","statements":[{"id":3354,"nodeType":"UncheckedBlock","src":"718:545:18","statements":[{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":3354,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3324,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3318,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5671,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":3354,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3325,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3329,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3327,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":3354,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3334,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nodeType":"YulBlock","src":"899:67:18","statements":[{"nodeType":"YulAssignment","src":"917:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:18"},"nodeType":"YulFunctionCall","src":"936:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:18"},"nodeType":"YulFunctionCall","src":"924:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3326,"isOffset":false,"isSlot":false,"src":"928:6:18","valueSize":1},{"declaration":3317,"isOffset":false,"isSlot":false,"src":"944:6:18","valueSize":1},{"declaration":3333,"isOffset":false,"isSlot":false,"src":"917:3:18","valueSize":1}],"flags":["memory-safe"],"id":3335,"nodeType":"InlineAssembly","src":"874:92:18"},{"body":{"id":3350,"nodeType":"Block","src":"992:234:18","statements":[{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:18","subExpression":{"id":3337,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"1010:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ExpressionStatement","src":"1010:5:18"},{"AST":{"nodeType":"YulBlock","src":"1058:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:18"},"nodeType":"YulFunctionCall","src":"1098:14:18"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:18"},"nodeType":"YulFunctionCall","src":"1093:32:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:18"},"nodeType":"YulFunctionCall","src":"1080:46:18"},"nodeType":"YulExpressionStatement","src":"1080:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3298,"isOffset":false,"isSlot":false,"src":"1114:10:18","valueSize":1},{"declaration":3333,"isOffset":false,"isSlot":false,"src":"1088:3:18","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"1102:5:18","valueSize":1}],"flags":["memory-safe"],"id":3340,"nodeType":"InlineAssembly","src":"1033:111:18"},{"expression":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1161:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3344,"nodeType":"ExpressionStatement","src":"1161:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1194:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"1190:21:18","trueBody":{"id":3348,"nodeType":"Break","src":"1206:5:18"}}]},"condition":{"hexValue":"74727565","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3351,"nodeType":"WhileStatement","src":"979:247:18"},{"expression":{"id":3352,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1246:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3315,"id":3353,"nodeType":"Return","src":"1239:13:18"}]}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":3356,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":3608,"src":"637:632:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"1445:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"1476:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:18","trueExpression":{"hexValue":"2d","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"1522:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3374,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7808,"src":"1507:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7808_$","typeString":"type(library SignedMath)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7807,"src":"1507:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3373,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1498:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3364,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:18","typeDescriptions":{}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3363,"id":3380,"nodeType":"Return","src":"1455:75:18"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"1275:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:18","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"1400:5:18","nodeType":"VariableDeclaration","scope":3382,"src":"1393:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3358,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:18"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1430:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3361,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:18"},"scope":3608,"src":"1369:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"1716:100:18","statements":[{"id":3400,"nodeType":"UncheckedBlock","src":"1726:84:18","statements":[{"expression":{"arguments":[{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"1769:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"1788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3392,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"1776:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5842,"src":"1776:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3402,3485,3505],"referencedDeclaration":3485,"src":"1757:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3389,"id":3399,"nodeType":"Return","src":"1750:49:18"}]}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"1543:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:18","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"value","nameLocation":"1671:5:18","nodeType":"VariableDeclaration","scope":3402,"src":"1663:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:18"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"1701:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3387,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:18"},"scope":3608,"src":"1642:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3484,"nodeType":"Block","src":"2029:435:18","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:18","nodeType":"VariableDeclaration","scope":3484,"src":"2039:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"id":3414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"2060:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:18"},{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:18","nodeType":"VariableDeclaration","scope":3484,"src":"2075:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3416,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3426,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3421,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2111:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3418,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:18"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3427,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2132:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3429,"indexExpression":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3432,"nodeType":"ExpressionStatement","src":"2132:15:18"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3433,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2157:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3435,"indexExpression":{"hexValue":"31","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3438,"nodeType":"ExpressionStatement","src":"2157:15:18"},{"body":{"id":3467,"nodeType":"Block","src":"2227:95:18","statements":[{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3453,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2241:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3455,"indexExpression":{"id":3454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2248:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3456,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"2253:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3460,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2264:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3462,"nodeType":"ExpressionStatement","src":"2241:40:18"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2295:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"2295:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"initializationExpression":{"assignments":[3440],"declarations":[{"constant":false,"id":3440,"mutability":"mutable","name":"i","nameLocation":"2195:1:18","nodeType":"VariableDeclaration","scope":3468,"src":"2187:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3442,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2203:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:18"},"loopExpression":{"expression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:18","subExpression":{"id":3450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2224:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"nodeType":"ExpressionStatement","src":"2222:3:18"},"nodeType":"ForStatement","src":"2182:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2335:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3478,"nodeType":"IfStatement","src":"2331:96:18","trueBody":{"id":3477,"nodeType":"Block","src":"2352:75:18","statements":[{"errorCall":{"arguments":[{"id":3473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"2402:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3474,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2409:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3472,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2373:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3476,"nodeType":"RevertStatement","src":"2366:50:18"}]}},{"expression":{"arguments":[{"id":3481,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2450:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3479,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:18","typeDescriptions":{}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3411,"id":3483,"nodeType":"Return","src":"2436:21:18"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"1822:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3485,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:18","nodeType":"FunctionDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"1968:5:18","nodeType":"VariableDeclaration","scope":3485,"src":"1960:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"length","nameLocation":"1983:6:18","nodeType":"VariableDeclaration","scope":3485,"src":"1975:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:18"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3485,"src":"2014:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3409,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:18"},"scope":3608,"src":"1939:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3504,"nodeType":"Block","src":"2696:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3498,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2741:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3496,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:18","typeDescriptions":{}}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:18","typeDescriptions":{}}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3501,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"2749:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3493,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3402,3485,3505],"referencedDeclaration":3485,"src":"2713:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3492,"id":3503,"nodeType":"Return","src":"2706:58:18"}]},"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"2470:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3505,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:18","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"addr","nameLocation":"2652:4:18","nodeType":"VariableDeclaration","scope":3505,"src":"2644:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:18"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3505,"src":"2681:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3490,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:18"},"scope":3608,"src":"2623:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"3028:642:18","statements":[{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:18","nodeType":"VariableDeclaration","scope":3569,"src":"3038:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3513,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3521,"initialValue":{"arguments":[{"arguments":[{"id":3518,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"3078:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3517,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3402,3485,3505],"referencedDeclaration":3505,"src":"3066:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3515,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:18","typeDescriptions":{}}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:18"},{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:18","nodeType":"VariableDeclaration","scope":3569,"src":"3169:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3524,"nodeType":"VariableDeclarationStatement","src":"3169:17:18"},{"AST":{"nodeType":"YulBlock","src":"3221:78:18","statements":[{"nodeType":"YulAssignment","src":"3235:54:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:18"},"nodeType":"YulFunctionCall","src":"3266:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:18"},"nodeType":"YulFunctionCall","src":"3256:32:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:18"},"nodeType":"YulFunctionCall","src":"3248:41:18"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3514,"isOffset":false,"isSlot":false,"src":"3270:6:18","valueSize":1},{"declaration":3523,"isOffset":false,"isSlot":false,"src":"3235:9:18","valueSize":1}],"flags":["memory-safe"],"id":3525,"nodeType":"InlineAssembly","src":"3196:103:18"},{"body":{"id":3562,"nodeType":"Block","src":"3342:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"3448:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3477:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3545,"indexExpression":{"id":3544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"3484:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3541,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:18","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3557,"nodeType":"IfStatement","src":"3444:150:18","trueBody":{"id":3556,"nodeType":"Block","src":"3494:100:18","statements":[{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3550,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3562:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3552,"indexExpression":{"id":3551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"3569:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3555,"nodeType":"ExpressionStatement","src":"3562:17:18"}]}},{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"3607:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3561,"nodeType":"ExpressionStatement","src":"3607:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"3330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3563,"initializationExpression":{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"i","nameLocation":"3322:1:18","nodeType":"VariableDeclaration","scope":3563,"src":"3314:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3529,"initialValue":{"hexValue":"3431","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:18"},"loopExpression":{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:18","subExpression":{"id":3533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"3339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3535,"nodeType":"ExpressionStatement","src":"3337:3:18"},"nodeType":"ForStatement","src":"3309:324:18"},{"expression":{"arguments":[{"id":3566,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3656:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3564,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:18","typeDescriptions":{}}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3512,"id":3568,"nodeType":"Return","src":"3642:21:18"}]},"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"2777:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:18","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"addr","nameLocation":"2984:4:18","nodeType":"VariableDeclaration","scope":3570,"src":"2976:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:18"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"3013:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3510,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:18"},"scope":3608,"src":"2947:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"3825:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"3848:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:18","typeDescriptions":{}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:18","memberName":"length","nodeType":"MemberAccess","src":"3842:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"3867:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3585,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:18","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:18","memberName":"length","nodeType":"MemberAccess","src":"3861:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"3896:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3592,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:18","typeDescriptions":{}}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3591,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"3919:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3598,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:18","typeDescriptions":{}}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3597,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3579,"id":3605,"nodeType":"Return","src":"3835:87:18"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"3676:66:18","text":" @dev Returns true if the two strings are equal."},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:18","nodeType":"FunctionDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"a","nameLocation":"3776:1:18","nodeType":"VariableDeclaration","scope":3607,"src":"3762:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3572,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"b","nameLocation":"3793:1:18","nodeType":"VariableDeclaration","scope":3607,"src":"3779:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3574,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:18"},"returnParameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"3819:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3577,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:18"},"scope":3608,"src":"3747:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3609,"src":"251:3680:18","usedErrors":[3308],"usedEvents":[]}],"src":"101:3831:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3956]},"id":3957,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3956,"linearizedBaseContracts":[3956],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3616,"members":[{"id":3612,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":3613,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":3614,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":3615,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3619,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":3618,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3624,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":3624,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3629,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":3629,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":3681,"nodeType":"Block","src":"2285:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3644,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"2299:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:19","memberName":"length","nodeType":"MemberAccess","src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3679,"nodeType":"Block","src":"2793:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{}}},"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3670,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3614,"src":"2827:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3674,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"2872:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:19","memberName":"length","nodeType":"MemberAccess","src":"2872:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:19","typeDescriptions":{}}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3643,"id":3678,"nodeType":"Return","src":"2807:83:19"}]},"id":3680,"nodeType":"IfStatement","src":"2295:606:19","trueBody":{"id":3665,"nodeType":"Block","src":"2323:464:19","statements":[{"assignments":[3649],"declarations":[{"constant":false,"id":3649,"mutability":"mutable","name":"r","nameLocation":"2345:1:19","nodeType":"VariableDeclaration","scope":3665,"src":"2337:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3650,"nodeType":"VariableDeclarationStatement","src":"2337:9:19"},{"assignments":[3652],"declarations":[{"constant":false,"id":3652,"mutability":"mutable","name":"s","nameLocation":"2368:1:19","nodeType":"VariableDeclaration","scope":3665,"src":"2360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3653,"nodeType":"VariableDeclarationStatement","src":"2360:9:19"},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"v","nameLocation":"2389:1:19","nodeType":"VariableDeclaration","scope":3665,"src":"2383:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3654,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3656,"nodeType":"VariableDeclarationStatement","src":"2383:7:19"},{"AST":{"nodeType":"YulBlock","src":"2560:171:19","statements":[{"nodeType":"YulAssignment","src":"2578:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:19"},"nodeType":"YulFunctionCall","src":"2589:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:19"},"nodeType":"YulFunctionCall","src":"2583:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:19"}]},{"nodeType":"YulAssignment","src":"2627:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:19"},"nodeType":"YulFunctionCall","src":"2638:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:19"},"nodeType":"YulFunctionCall","src":"2632:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:19"}]},{"nodeType":"YulAssignment","src":"2676:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:19"},"nodeType":"YulFunctionCall","src":"2695:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:19"},"nodeType":"YulFunctionCall","src":"2689:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:19"},"nodeType":"YulFunctionCall","src":"2681:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"2578:1:19","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"2627:1:19","valueSize":1},{"declaration":3634,"isOffset":false,"isSlot":false,"src":"2593:9:19","valueSize":1},{"declaration":3634,"isOffset":false,"isSlot":false,"src":"2642:9:19","valueSize":1},{"declaration":3634,"isOffset":false,"isSlot":false,"src":"2699:9:19","valueSize":1},{"declaration":3655,"isOffset":false,"isSlot":false,"src":"2676:1:19","valueSize":1}],"flags":["memory-safe"],"id":3657,"nodeType":"InlineAssembly","src":"2535:196:19"},{"expression":{"arguments":[{"id":3659,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"2762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3660,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"2768:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3661,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2771:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3662,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"2774:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3658,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3682,3762,3870],"referencedDeclaration":3870,"src":"2751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3643,"id":3664,"nodeType":"Return","src":"2744:32:19"}]}}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"hash","nameLocation":"2166:4:19","nodeType":"VariableDeclaration","scope":3682,"src":"2158:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"signature","nameLocation":"2193:9:19","nodeType":"VariableDeclaration","scope":3682,"src":"2180:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3633,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:19"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:19","nodeType":"VariableDeclaration","scope":3682,"src":"2232:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"err","nameLocation":"2264:3:19","nodeType":"VariableDeclaration","scope":3682,"src":"2251:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3639,"nodeType":"UserDefinedTypeName","pathNode":{"id":3638,"name":"RecoverError","nameLocations":["2251:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"2251:12:19"},"referencedDeclaration":3616,"src":"2251:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:19","nodeType":"VariableDeclaration","scope":3682,"src":"2269:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:19"},"scope":3956,"src":"2129:778:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"3801:168:19","statements":[{"assignments":[3693,3696,3698],"declarations":[{"constant":false,"id":3693,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:19","nodeType":"VariableDeclaration","scope":3711,"src":"3812:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3692,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"error","nameLocation":"3844:5:19","nodeType":"VariableDeclaration","scope":3711,"src":"3831:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3695,"nodeType":"UserDefinedTypeName","pathNode":{"id":3694,"name":"RecoverError","nameLocations":["3831:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"3831:12:19"},"referencedDeclaration":3616,"src":"3831:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:19","nodeType":"VariableDeclaration","scope":3711,"src":"3851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3703,"initialValue":{"arguments":[{"id":3700,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"3882:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3701,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3888:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3699,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3682,3762,3870],"referencedDeclaration":3682,"src":"3871:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:19"},{"expression":{"arguments":[{"id":3705,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3920:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"id":3706,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3927:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3704,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3908:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3616_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"3908:28:19"},{"expression":{"id":3709,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"3953:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3691,"id":3710,"nodeType":"Return","src":"3946:16:19"}]},"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"2913:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:19","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"hash","nameLocation":"3739:4:19","nodeType":"VariableDeclaration","scope":3712,"src":"3731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"signature","nameLocation":"3758:9:19","nodeType":"VariableDeclaration","scope":3712,"src":"3745:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:19"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"3792:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3689,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:19"},"scope":3956,"src":"3714:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"4348:342:19","statements":[{"id":3760,"nodeType":"UncheckedBlock","src":"4358:326:19","statements":[{"assignments":[3730],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"s","nameLocation":"4390:1:19","nodeType":"VariableDeclaration","scope":3760,"src":"4382:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3737,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4394:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{}}},"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:19"},{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"v","nameLocation":"4591:1:19","nodeType":"VariableDeclaration","scope":3760,"src":"4585:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3738,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3752,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3744,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4610:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:19","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3740,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:19","typeDescriptions":{}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:19"},{"expression":{"arguments":[{"id":3754,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3755,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"4665:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3757,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"4671:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3753,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3682,3762,3870],"referencedDeclaration":3870,"src":"4648:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3728,"id":3759,"nodeType":"Return","src":"4641:32:19"}]}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"3975:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:19","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"hash","nameLocation":"4222:4:19","nodeType":"VariableDeclaration","scope":3762,"src":"4214:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"r","nameLocation":"4244:1:19","nodeType":"VariableDeclaration","scope":3762,"src":"4236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"vs","nameLocation":"4263:2:19","nodeType":"VariableDeclaration","scope":3762,"src":"4255:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:19"},"returnParameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:19","nodeType":"VariableDeclaration","scope":3762,"src":"4295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"err","nameLocation":"4327:3:19","nodeType":"VariableDeclaration","scope":3762,"src":"4314:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3724,"nodeType":"UserDefinedTypeName","pathNode":{"id":3723,"name":"RecoverError","nameLocations":["4314:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"4314:12:19"},"referencedDeclaration":3616,"src":"4314:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:19","nodeType":"VariableDeclaration","scope":3762,"src":"4332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:19"},"scope":3956,"src":"4185:505:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3794,"nodeType":"Block","src":"4903:164:19","statements":[{"assignments":[3775,3778,3780],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:19","nodeType":"VariableDeclaration","scope":3794,"src":"4914:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"error","nameLocation":"4946:5:19","nodeType":"VariableDeclaration","scope":3794,"src":"4933:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3777,"nodeType":"UserDefinedTypeName","pathNode":{"id":3776,"name":"RecoverError","nameLocations":["4933:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"4933:12:19"},"referencedDeclaration":3616,"src":"4933:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:19","nodeType":"VariableDeclaration","scope":3794,"src":"4953:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3786,"initialValue":{"arguments":[{"id":3782,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3784,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"4993:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3781,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3682,3762,3870],"referencedDeclaration":3762,"src":"4973:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:19"},{"expression":{"arguments":[{"id":3788,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"id":3789,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"5025:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3787,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"5006:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3616_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3791,"nodeType":"ExpressionStatement","src":"5006:28:19"},{"expression":{"id":3792,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"5051:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3773,"id":3793,"nodeType":"Return","src":"5044:16:19"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"4696:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3795,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:19","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"hash","nameLocation":"4842:4:19","nodeType":"VariableDeclaration","scope":3795,"src":"4834:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"r","nameLocation":"4856:1:19","nodeType":"VariableDeclaration","scope":3795,"src":"4848:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"vs","nameLocation":"4867:2:19","nodeType":"VariableDeclaration","scope":3795,"src":"4859:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:19"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3795,"src":"4894:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:19"},"scope":3956,"src":"4817:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"5382:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3816,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6278:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:19","typeDescriptions":{}}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3830,"nodeType":"IfStatement","src":"6266:164:19","trueBody":{"id":3829,"nodeType":"Block","src":"6351:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3820,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:19","typeDescriptions":{}}},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3824,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"6385:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3615,"src":"6385:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"id":3826,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6417:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3813,"id":3828,"nodeType":"Return","src":"6365:54:19"}]}},{"assignments":[3832],"declarations":[{"constant":false,"id":3832,"mutability":"mutable","name":"signer","nameLocation":"6532:6:19","nodeType":"VariableDeclaration","scope":3869,"src":"6524:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3839,"initialValue":{"arguments":[{"id":3834,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6551:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3835,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"6557:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3836,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3837,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3833,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"6579:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:19","typeDescriptions":{}}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3859,"nodeType":"IfStatement","src":"6575:113:19","trueBody":{"id":3858,"nodeType":"Block","src":"6601:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:19","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3850,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"6635:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"6635:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:19","typeDescriptions":{}}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3813,"id":3857,"nodeType":"Return","src":"6615:62:19"}]}},{"expression":{"components":[{"id":3860,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"6706:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3861,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"6714:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"6714:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:19","typeDescriptions":{}}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3813,"id":3868,"nodeType":"Return","src":"6698:49:19"}]},"documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"5073:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:19","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"hash","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":3870,"src":"5232:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"v","nameLocation":"5260:1:19","nodeType":"VariableDeclaration","scope":3870,"src":"5254:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3799,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"r","nameLocation":"5279:1:19","nodeType":"VariableDeclaration","scope":3870,"src":"5271:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"s","nameLocation":"5298:1:19","nodeType":"VariableDeclaration","scope":3870,"src":"5290:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:19"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:19","nodeType":"VariableDeclaration","scope":3870,"src":"5329:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"err","nameLocation":"5361:3:19","nodeType":"VariableDeclaration","scope":3870,"src":"5348:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3809,"nodeType":"UserDefinedTypeName","pathNode":{"id":3808,"name":"RecoverError","nameLocations":["5348:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"5348:12:19"},"referencedDeclaration":3616,"src":"5348:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:19","nodeType":"VariableDeclaration","scope":3870,"src":"5366:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:19"},"scope":3956,"src":"5203:1551:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3905,"nodeType":"Block","src":"6981:166:19","statements":[{"assignments":[3885,3888,3890],"declarations":[{"constant":false,"id":3885,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:19","nodeType":"VariableDeclaration","scope":3905,"src":"6992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"error","nameLocation":"7024:5:19","nodeType":"VariableDeclaration","scope":3905,"src":"7011:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3887,"nodeType":"UserDefinedTypeName","pathNode":{"id":3886,"name":"RecoverError","nameLocations":["7011:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"7011:12:19"},"referencedDeclaration":3616,"src":"7011:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:19","nodeType":"VariableDeclaration","scope":3905,"src":"7031:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3897,"initialValue":{"arguments":[{"id":3892,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"7062:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3893,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"7068:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3894,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"7071:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3895,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"7074:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3891,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3682,3762,3870],"referencedDeclaration":3870,"src":"7051:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3616_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:19"},{"expression":{"arguments":[{"id":3899,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7098:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},{"id":3900,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"7105:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3898,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"7086:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3616_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3902,"nodeType":"ExpressionStatement","src":"7086:28:19"},{"expression":{"id":3903,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7131:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3883,"id":3904,"nodeType":"Return","src":"7124:16:19"}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"6760:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:19","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"hash","nameLocation":"6912:4:19","nodeType":"VariableDeclaration","scope":3906,"src":"6904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"v","nameLocation":"6924:1:19","nodeType":"VariableDeclaration","scope":3906,"src":"6918:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3874,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"r","nameLocation":"6935:1:19","nodeType":"VariableDeclaration","scope":3906,"src":"6927:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"s","nameLocation":"6946:1:19","nodeType":"VariableDeclaration","scope":3906,"src":"6938:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:19"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"6972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3881,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:19"},"scope":3956,"src":"6887:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"7352:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7366:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3916,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"7375:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"7375:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7462:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3922,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"7471:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7567:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3930,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"7576:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3614,"src":"7576:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7701:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3942,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"7710:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3615,"src":"7710:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"nodeType":"IfStatement","src":"7697:109:19","trueBody":{"id":3949,"nodeType":"Block","src":"7742:64:19","statements":[{"errorCall":{"arguments":[{"id":3946,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7786:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3945,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"7763:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3948,"nodeType":"RevertStatement","src":"7756:39:19"}]}},"id":3951,"nodeType":"IfStatement","src":"7563:243:19","trueBody":{"id":3940,"nodeType":"Block","src":"7613:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3936,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:19","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3933,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"7634:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3939,"nodeType":"RevertStatement","src":"7627:53:19"}]}},"id":3952,"nodeType":"IfStatement","src":"7458:348:19","trueBody":{"id":3928,"nodeType":"Block","src":"7502:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3925,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"7523:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3927,"nodeType":"RevertStatement","src":"7516:30:19"}]}},"id":3953,"nodeType":"IfStatement","src":"7362:444:19","trueBody":{"id":3920,"nodeType":"Block","src":"7397:55:19","statements":[{"functionReturnParameters":3914,"id":3919,"nodeType":"Return","src":"7411:7:19"}]}}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"7153:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:19","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"error","nameLocation":"7314:5:19","nodeType":"VariableDeclaration","scope":3955,"src":"7301:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3909,"nodeType":"UserDefinedTypeName","pathNode":{"id":3908,"name":"RecoverError","nameLocations":["7301:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3616,"src":"7301:12:19"},"referencedDeclaration":3616,"src":"7301:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:19","nodeType":"VariableDeclaration","scope":3955,"src":"7321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:19"},"returnParameters":{"id":3914,"nodeType":"ParameterList","parameters":[],"src":"7352:0:19"},"scope":3956,"src":"7280:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3957,"src":"344:7470:19","usedErrors":[3619,3624,3629],"usedEvents":[]}],"src":"112:7703:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4183],"IERC5267":[172],"MessageHashUtils":[4257],"ShortString":[2823],"ShortStrings":[3034]},"id":4184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3958,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4184,"sourceUnit":4258,"src":"139:56:20","symbolAliases":[{"foreign":{"id":3959,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3963,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4184,"sourceUnit":3035,"src":"196:62:20","symbolAliases":[{"foreign":{"id":3961,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3962,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4184,"sourceUnit":173,"src":"259:55:20","symbolAliases":[{"foreign":{"id":3964,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3967,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:20"},"id":3968,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4183,"linearizedBaseContracts":[4183,172],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3970,"libraryName":{"id":3969,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3034,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":3975,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":4183,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3977,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":4183,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3979,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":4183,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3981,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":4183,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3983,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":4183,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3985,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":4183,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3988,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":4183,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":3987,"nodeType":"UserDefinedTypeName","pathNode":{"id":3986,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2607:11:20"},"referencedDeclaration":2823,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3991,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":4183,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"},"typeName":{"id":3990,"nodeType":"UserDefinedTypeName","pathNode":{"id":3989,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2648:11:20"},"referencedDeclaration":2823,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3993,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:20","nodeType":"VariableDeclaration","scope":4183,"src":"2692:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3992,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3995,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:20","nodeType":"VariableDeclaration","scope":4183,"src":"2726:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3994,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4052,"nodeType":"Block","src":"3383:376:20","statements":[{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4003,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"3393:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4006,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"3432:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4004,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"3401:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"3401:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2823_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"src":"3393:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"id":4009,"nodeType":"ExpressionStatement","src":"3393:53:20"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4010,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"3456:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4013,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"3501:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4011,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"3467:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"3467:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2823_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"src":"3456:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"id":4016,"nodeType":"ExpressionStatement","src":"3456:62:20"},{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4017,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3528:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4021,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"3558:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4019,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:20","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4025,"nodeType":"ExpressionStatement","src":"3528:36:20"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4026,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3574:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4030,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"3607:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4028,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:20","typeDescriptions":{}}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4027,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4034,"nodeType":"ExpressionStatement","src":"3574:42:20"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3627:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4036,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"nodeType":"ExpressionStatement","src":"3627:30:20"},{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"3667:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4041,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"3692:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4044,"nodeType":"ExpressionStatement","src":"3667:48:20"},{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:20","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4051,"nodeType":"ExpressionStatement","src":"3725:27:20"}]},"documentation":{"id":3996,"nodeType":"StructuredDocumentation","src":"2764:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4053,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"name","nameLocation":"3354:4:20","nodeType":"VariableDeclaration","scope":4053,"src":"3340:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3997,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"version","nameLocation":"3374:7:20","nodeType":"VariableDeclaration","scope":4053,"src":"3360:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3999,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:20"},"returnParameters":{"id":4002,"nodeType":"ParameterList","parameters":[],"src":"3383:0:20"},"scope":4183,"src":"3328:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"3907:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4061,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}],"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4059,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:20","typeDescriptions":{}}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4063,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"3938:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4065,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4067,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3970:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4076,"nodeType":"Block","src":"4046:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4073,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"4067:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4058,"id":4075,"nodeType":"Return","src":"4060:30:20"}]},"id":4077,"nodeType":"IfStatement","src":"3917:184:20","trueBody":{"id":4072,"nodeType":"Block","src":"3986:54:20","statements":[{"expression":{"id":4070,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"4007:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4058,"id":4071,"nodeType":"Return","src":"4000:29:20"}]}}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"3765:75:20","text":" @dev Returns the domain separator for the current chain."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:20","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[],"src":"3872:2:20"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"3898:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:20"},"scope":4183,"src":"3845:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"4177:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4087,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4215:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4088,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"4226:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4089,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4239:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4090,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4094,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}],"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4092,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:20","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4085,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4084,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4083,"id":4098,"nodeType":"Return","src":"4187:98:20"}]},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:20","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[],"src":"4143:2:20"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"4168:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:20"},"scope":4183,"src":"4113:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4115,"nodeType":"Block","src":"5003:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4110,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"5053:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4112,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"5075:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4108,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"5020:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4257_$","typeString":"type(library MessageHashUtils)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"5020:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4107,"id":4114,"nodeType":"Return","src":"5013:73:20"}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"4298:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:20","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:20","nodeType":"VariableDeclaration","scope":4116,"src":"4943:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:20"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"4994:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:20"},"scope":4183,"src":"4917:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":4157,"nodeType":"Block","src":"5472:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4136,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5533:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4138,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"5560:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4140,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4144,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4183","typeString":"contract EIP712"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:20","typeDescriptions":{}}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:20","typeDescriptions":{}}},"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4151,"nodeType":"ArrayTypeName","src":"5672:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4134,"id":4156,"nodeType":"Return","src":"5482:212:20"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"5099:40:20","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:20","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"5165:2:20"},"returnParameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"fields","nameLocation":"5249:6:20","nodeType":"VariableDeclaration","scope":4158,"src":"5242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4119,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"name","nameLocation":"5283:4:20","nodeType":"VariableDeclaration","scope":4158,"src":"5269:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4121,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"version","nameLocation":"5315:7:20","nodeType":"VariableDeclaration","scope":4158,"src":"5301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4123,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:20","nodeType":"VariableDeclaration","scope":4158,"src":"5336:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:20","nodeType":"VariableDeclaration","scope":4158,"src":"5365:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4127,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"salt","nameLocation":"5412:4:20","nodeType":"VariableDeclaration","scope":4158,"src":"5404:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:20","nodeType":"VariableDeclaration","scope":4158,"src":"5430:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ArrayTypeName","src":"5430:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:20"},"scope":4183,"src":"5144:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4169,"nodeType":"Block","src":"6082:65:20","statements":[{"expression":{"arguments":[{"id":4166,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"6126:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"6099:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"6099:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2823_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4163,"id":4168,"nodeType":"Return","src":"6092:48:20"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"5707:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4170,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:20","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[],"src":"6041:2:20"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4170,"src":"6067:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4161,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:20"},"scope":4183,"src":"6021:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4181,"nodeType":"Block","src":"6537:71:20","statements":[{"expression":{"arguments":[{"id":4178,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6584:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4176,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"6554:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2823","typeString":"ShortString"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"6554:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2823_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2823_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4175,"id":4180,"nodeType":"Return","src":"6547:54:20"}]},"documentation":{"id":4171,"nodeType":"StructuredDocumentation","src":"6153:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:20","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[],"src":"6496:2:20"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4182,"src":"6522:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4173,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:20"},"scope":4183,"src":"6473:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4184,"src":"1960:4650:20","usedErrors":[2831,2833],"usedEvents":[152]}],"src":"113:6498:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4257],"Strings":[3608]},"id":4258,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4185,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4258,"sourceUnit":3609,"src":"149:39:21","symbolAliases":[{"foreign":{"id":4186,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4257,"linearizedBaseContracts":[4257],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4197,"nodeType":"Block","src":"1314:341:21","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:21"},"nodeType":"YulFunctionCall","src":"1363:48:21"},"nodeType":"YulExpressionStatement","src":"1363:48:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:21","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:21"},"nodeType":"YulFunctionCall","src":"1465:25:21"},"nodeType":"YulExpressionStatement","src":"1465:25:21"},{"nodeType":"YulAssignment","src":"1544:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:21"},"nodeType":"YulFunctionCall","src":"1554:21:21"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4194,"isOffset":false,"isSlot":false,"src":"1544:6:21","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"1478:11:21","valueSize":1}],"flags":["memory-safe"],"id":4196,"nodeType":"InlineAssembly","src":"1324:325:21"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"552:665:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:21","nodeType":"FunctionDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:21","nodeType":"VariableDeclaration","scope":4198,"src":"1254:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:21"},"returnParameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"digest","nameLocation":"1306:6:21","nodeType":"VariableDeclaration","scope":4198,"src":"1298:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:21"},"scope":4257,"src":"1222:433:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"2207:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4215,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"2316:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:21","memberName":"length","nodeType":"MemberAccess","src":"2316:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4213,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2299:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3608_$","typeString":"type(library Strings)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3356,"src":"2299:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4211,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:21","typeDescriptions":{}}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4219,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"2334:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4207,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:21","typeDescriptions":{}}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4206,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4205,"id":4222,"nodeType":"Return","src":"2217:126:21"}]},"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"1661:455:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:21","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"message","nameLocation":"2166:7:21","nodeType":"VariableDeclaration","scope":4224,"src":"2153:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4200,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:21"},"returnParameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"2198:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:21"},"scope":4257,"src":"2121:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"2804:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4238,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"2860:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4239,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"2871:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4235,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4234,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4233,"id":4242,"nodeType":"Return","src":"2814:63:21"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"2356:332:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:21","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"validator","nameLocation":"2742:9:21","nodeType":"VariableDeclaration","scope":4244,"src":"2734:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4226,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"data","nameLocation":"2766:4:21","nodeType":"VariableDeclaration","scope":4244,"src":"2753:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4228,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:21"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"2795:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:21"},"scope":4257,"src":"2693:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4255,"nodeType":"Block","src":"3435:265:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:21"},"nodeType":"YulFunctionCall","src":"3495:11:21"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:21"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:21"},"nodeType":"YulFunctionCall","src":"3519:23:21"},"nodeType":"YulExpressionStatement","src":"3519:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:21"},"nodeType":"YulFunctionCall","src":"3562:14:21"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:21"},"nodeType":"YulFunctionCall","src":"3555:39:21"},"nodeType":"YulExpressionStatement","src":"3555:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:21"},"nodeType":"YulFunctionCall","src":"3614:14:21"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:21"},"nodeType":"YulFunctionCall","src":"3607:34:21"},"nodeType":"YulExpressionStatement","src":"3607:34:21"},{"nodeType":"YulAssignment","src":"3654:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:21"},"nodeType":"YulFunctionCall","src":"3664:20:21"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4252,"isOffset":false,"isSlot":false,"src":"3654:6:21","valueSize":1},{"declaration":4247,"isOffset":false,"isSlot":false,"src":"3578:15:21","valueSize":1},{"declaration":4249,"isOffset":false,"isSlot":false,"src":"3630:10:21","valueSize":1}],"flags":["memory-safe"],"id":4254,"nodeType":"InlineAssembly","src":"3445:249:21"}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"2890:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4256,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:21","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:21","nodeType":"VariableDeclaration","scope":4256,"src":"3351:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:21","nodeType":"VariableDeclaration","scope":4256,"src":"3376:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:21"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"digest","nameLocation":"3427:6:21","nodeType":"VariableDeclaration","scope":4256,"src":"3419:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:21"},"scope":4257,"src":"3326:374:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4258,"src":"521:3181:21","usedErrors":[],"usedEvents":[]}],"src":"123:3580:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4281],"IERC165":[4293]},"id":4282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4259,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4282,"sourceUnit":4294,"src":"140:38:22","symbolAliases":[{"foreign":{"id":4260,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4263,"name":"IERC165","nameLocations":["688:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"688:7:22"},"id":4264,"nodeType":"InheritanceSpecifier","src":"688:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"180:479:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4281,"linearizedBaseContracts":[4281,4293],"name":"ERC165","nameLocation":"678:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4292],"body":{"id":4279,"nodeType":"Block","src":"845:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"862:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4274,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"882:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4293_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4293_$","typeString":"type(contract IERC165)"}],"id":4273,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4293","typeString":"type(contract IERC165)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4271,"id":4278,"nodeType":"Return","src":"855:47:22"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"702:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:22","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:22","nodeType":"VariableDeclaration","scope":4280,"src":"790:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4266,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:22"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4280,"src":"839:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4269,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:22"},"scope":4281,"src":"763:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4282,"src":"660:251:22","usedErrors":[],"usedEvents":[]}],"src":"114:798:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4293]},"id":4294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"141:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4293,"linearizedBaseContracts":[4293],"name":"IERC165","nameLocation":"432:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4285,"nodeType":"StructuredDocumentation","src":"446:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4292,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:23","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:23","nodeType":"VariableDeclaration","scope":4292,"src":"818:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4286,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:23"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"861:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4289,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:23"},"scope":4293,"src":"791:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4294,"src":"422:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:755:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5899],"Panic":[2631],"SafeCast":[7664]},"id":5900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5900,"sourceUnit":2632,"src":"129:35:24","symbolAliases":[{"foreign":{"id":4296,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5900,"sourceUnit":7665,"src":"165:40:24","symbolAliases":[{"foreign":{"id":4298,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5899,"linearizedBaseContracts":[5899],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4305,"members":[{"id":4301,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":4302,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":4303,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":4304,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":4336,"nodeType":"Block","src":"677:140:24","statements":[{"id":4335,"nodeType":"UncheckedBlock","src":"687:124:24","statements":[{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"c","nameLocation":"719:1:24","nodeType":"VariableDeclaration","scope":4335,"src":"711:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"727:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"746:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"750:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"742:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4316,"id":4329,"nodeType":"Return","src":"753:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4332,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"798:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4316,"id":4334,"nodeType":"Return","src":"784:16:24"}]}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"475:106:24","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4337,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:24","nodeType":"FunctionDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"a","nameLocation":"610:1:24","nodeType":"VariableDeclaration","scope":4337,"src":"602:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"b","nameLocation":"621:1:24","nodeType":"VariableDeclaration","scope":4337,"src":"613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:24"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"success","nameLocation":"652:7:24","nodeType":"VariableDeclaration","scope":4337,"src":"647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4312,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"result","nameLocation":"669:6:24","nodeType":"VariableDeclaration","scope":4337,"src":"661:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:24"},"scope":5899,"src":"586:231:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"1028:113:24","statements":[{"id":4363,"nodeType":"UncheckedBlock","src":"1038:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"1066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"1070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"1062:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4348,"id":4355,"nodeType":"Return","src":"1073:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"1118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"1122:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4348,"id":4362,"nodeType":"Return","src":"1104:20:24"}]}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"823:109:24","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:24","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"a","nameLocation":"961:1:24","nodeType":"VariableDeclaration","scope":4365,"src":"953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"b","nameLocation":"972:1:24","nodeType":"VariableDeclaration","scope":4365,"src":"964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:24"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"success","nameLocation":"1003:7:24","nodeType":"VariableDeclaration","scope":4365,"src":"998:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4344,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4347,"mutability":"mutable","name":"result","nameLocation":"1020:6:24","nodeType":"VariableDeclaration","scope":4365,"src":"1012:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:24"},"scope":5899,"src":"937:204:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4406,"nodeType":"Block","src":"1355:417:24","statements":[{"id":4405,"nodeType":"UncheckedBlock","src":"1365:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"1623:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4384,"nodeType":"IfStatement","src":"1619:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4376,"id":4383,"nodeType":"Return","src":"1631:16:24"}},{"assignments":[4386],"declarations":[{"constant":false,"id":4386,"mutability":"mutable","name":"c","nameLocation":"1669:1:24","nodeType":"VariableDeclaration","scope":4405,"src":"1661:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4390,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"1673:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"1677:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"1696:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"1700:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"1705:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"nodeType":"IfStatement","src":"1692:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4376,"id":4399,"nodeType":"Return","src":"1708:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4402,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"1753:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4376,"id":4404,"nodeType":"Return","src":"1739:16:24"}]}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"1147:112:24","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:24","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"a","nameLocation":"1288:1:24","nodeType":"VariableDeclaration","scope":4407,"src":"1280:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"b","nameLocation":"1299:1:24","nodeType":"VariableDeclaration","scope":4407,"src":"1291:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:24"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"success","nameLocation":"1330:7:24","nodeType":"VariableDeclaration","scope":4407,"src":"1325:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4372,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"result","nameLocation":"1347:6:24","nodeType":"VariableDeclaration","scope":4407,"src":"1339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:24"},"scope":5899,"src":"1264:508:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"1987:114:24","statements":[{"id":4433,"nodeType":"UncheckedBlock","src":"1997:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2025:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4426,"nodeType":"IfStatement","src":"2021:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4418,"id":4425,"nodeType":"Return","src":"2033:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2082:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4418,"id":4432,"nodeType":"Return","src":"2064:20:24"}]}]},"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"1778:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:24","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"a","nameLocation":"1920:1:24","nodeType":"VariableDeclaration","scope":4435,"src":"1912:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4412,"mutability":"mutable","name":"b","nameLocation":"1931:1:24","nodeType":"VariableDeclaration","scope":4435,"src":"1923:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:24"},"returnParameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"success","nameLocation":"1962:7:24","nodeType":"VariableDeclaration","scope":4435,"src":"1957:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4414,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4417,"mutability":"mutable","name":"result","nameLocation":"1979:6:24","nodeType":"VariableDeclaration","scope":4435,"src":"1971:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:24"},"scope":5899,"src":"1896:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"2326:114:24","statements":[{"id":4461,"nodeType":"UncheckedBlock","src":"2336:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2364:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"nodeType":"IfStatement","src":"2360:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4446,"id":4453,"nodeType":"Return","src":"2372:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2417:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2421:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4446,"id":4460,"nodeType":"Return","src":"2403:20:24"}]}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"2107:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:24","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"a","nameLocation":"2259:1:24","nodeType":"VariableDeclaration","scope":4463,"src":"2251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"b","nameLocation":"2270:1:24","nodeType":"VariableDeclaration","scope":4463,"src":"2262:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:24"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"success","nameLocation":"2301:7:24","nodeType":"VariableDeclaration","scope":4463,"src":"2296:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"result","nameLocation":"2318:6:24","nodeType":"VariableDeclaration","scope":4463,"src":"2310:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:24"},"scope":5899,"src":"2235:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4489,"nodeType":"Block","src":"2912:207:24","statements":[{"id":4488,"nodeType":"UncheckedBlock","src":"2922:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4475,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"3060:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"3066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"3070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4482,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3091:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"3075:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"3075:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4474,"id":4487,"nodeType":"Return","src":"3053:49:24"}]}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"2446:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:24","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"condition","nameLocation":"2847:9:24","nodeType":"VariableDeclaration","scope":4490,"src":"2842:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4465,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4468,"mutability":"mutable","name":"a","nameLocation":"2866:1:24","nodeType":"VariableDeclaration","scope":4490,"src":"2858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"b","nameLocation":"2877:1:24","nodeType":"VariableDeclaration","scope":4490,"src":"2869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:24"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"2903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:24"},"scope":5899,"src":"2825:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4508,"nodeType":"Block","src":"3256:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"3281:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"3285:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"3288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"3291:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4500,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"3273:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4499,"id":4507,"nodeType":"Return","src":"3266:27:24"}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"3125:59:24","text":" @dev Returns the largest of two numbers."},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:24","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"a","nameLocation":"3210:1:24","nodeType":"VariableDeclaration","scope":4509,"src":"3202:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"b","nameLocation":"3221:1:24","nodeType":"VariableDeclaration","scope":4509,"src":"3213:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:24"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4509,"src":"3247:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:24"},"scope":5899,"src":"3189:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4527,"nodeType":"Block","src":"3438:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"3463:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4521,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"3470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"3473:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4519,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4518,"id":4526,"nodeType":"Return","src":"3448:27:24"}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"3306:60:24","text":" @dev Returns the smallest of two numbers."},"id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:24","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"a","nameLocation":"3392:1:24","nodeType":"VariableDeclaration","scope":4528,"src":"3384:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"b","nameLocation":"3403:1:24","nodeType":"VariableDeclaration","scope":4528,"src":"3395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:24"},"returnParameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"3429:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:24"},"scope":5899,"src":"3371:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"3666:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"3721:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"3725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"3731:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"3735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4537,"id":4549,"nodeType":"Return","src":"3713:28:24"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"3488:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:24","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"a","nameLocation":"3620:1:24","nodeType":"VariableDeclaration","scope":4551,"src":"3612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"b","nameLocation":"3631:1:24","nodeType":"VariableDeclaration","scope":4551,"src":"3623:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:24"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"3657:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:24"},"scope":5899,"src":"3595:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"4040:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"4050:150:24","trueBody":{"id":4571,"nodeType":"Block","src":"4062:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":4567,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"4166:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"4166:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4564,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"4154:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"4154:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4570,"nodeType":"ExpressionStatement","src":"4154:35:24"}]}},{"id":4590,"nodeType":"UncheckedBlock","src":"4583:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"4630:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4573,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"4614:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"4614:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"4641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4650:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4560,"id":4589,"nodeType":"Return","src":"4607:49:24"}]}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"3754:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:24","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"a","nameLocation":"3994:1:24","nodeType":"VariableDeclaration","scope":4592,"src":"3986:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"b","nameLocation":"4005:1:24","nodeType":"VariableDeclaration","scope":4592,"src":"3997:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:24"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4592,"src":"4031:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:24"},"scope":5899,"src":"3969:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"5094:4128:24","statements":[{"id":4727,"nodeType":"UncheckedBlock","src":"5104:4112:24","statements":[{"assignments":[4605],"declarations":[{"constant":false,"id":4605,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:24","nodeType":"VariableDeclaration","scope":4727,"src":"5433:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4606,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"5449:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4607,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"5453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:24"},{"assignments":[4611],"declarations":[{"constant":false,"id":4611,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:24","nodeType":"VariableDeclaration","scope":4727,"src":"5513:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4612,"nodeType":"VariableDeclarationStatement","src":"5513:13:24"},{"AST":{"nodeType":"YulBlock","src":"5593:122:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:24"},"nodeType":"YulFunctionCall","src":"5634:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:24"},"nodeType":"YulFunctionCall","src":"5621:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:24","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:24"},"nodeType":"YulFunctionCall","src":"5671:14:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:24"},"nodeType":"YulFunctionCall","src":"5687:13:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:24"},"nodeType":"YulFunctionCall","src":"5667:34:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4605,"isOffset":false,"isSlot":false,"src":"5679:5:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"5694:5:24","valueSize":1},{"declaration":4611,"isOffset":false,"isSlot":false,"src":"5658:5:24","valueSize":1},{"declaration":4595,"isOffset":false,"isSlot":false,"src":"5628:1:24","valueSize":1},{"declaration":4597,"isOffset":false,"isSlot":false,"src":"5631:1:24","valueSize":1}],"id":4613,"nodeType":"InlineAssembly","src":"5584:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"5796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4622,"nodeType":"IfStatement","src":"5792:368:24","trueBody":{"id":4621,"nodeType":"Block","src":"5808:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"6126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4618,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"6134:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4603,"id":4620,"nodeType":"Return","src":"6119:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"6270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4624,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"6285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4641,"nodeType":"IfStatement","src":"6266:143:24","trueBody":{"id":4640,"nodeType":"Block","src":"6292:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"6330:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4633,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"6348:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"6348:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4635,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"6372:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2594,"src":"6372:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"6322:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4626,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"6310:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"6310:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4639,"nodeType":"ExpressionStatement","src":"6310:84:24"}]}},{"assignments":[4643],"declarations":[{"constant":false,"id":4643,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:24","nodeType":"VariableDeclaration","scope":4727,"src":"6664:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4644,"nodeType":"VariableDeclarationStatement","src":"6664:17:24"},{"AST":{"nodeType":"YulBlock","src":"6704:291:24","statements":[{"nodeType":"YulAssignment","src":"6773:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:24"},"nodeType":"YulFunctionCall","src":"6786:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:24"}]},{"nodeType":"YulAssignment","src":"6893:41:24","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:24"},"nodeType":"YulFunctionCall","src":"6913:20:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:24"},"nodeType":"YulFunctionCall","src":"6902:32:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:24"}]},{"nodeType":"YulAssignment","src":"6951:30:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:24"},"nodeType":"YulFunctionCall","src":"6960:21:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4599,"isOffset":false,"isSlot":false,"src":"6799:11:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"6927:5:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"6951:5:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"6964:5:24","valueSize":1},{"declaration":4611,"isOffset":false,"isSlot":false,"src":"6893:5:24","valueSize":1},{"declaration":4611,"isOffset":false,"isSlot":false,"src":"6906:5:24","valueSize":1},{"declaration":4643,"isOffset":false,"isSlot":false,"src":"6773:9:24","valueSize":1},{"declaration":4643,"isOffset":false,"isSlot":false,"src":"6916:9:24","valueSize":1},{"declaration":4643,"isOffset":false,"isSlot":false,"src":"6971:9:24","valueSize":1},{"declaration":4595,"isOffset":false,"isSlot":false,"src":"6793:1:24","valueSize":1},{"declaration":4597,"isOffset":false,"isSlot":false,"src":"6796:1:24","valueSize":1}],"id":4645,"nodeType":"InlineAssembly","src":"6695:300:24"},{"assignments":[4647],"declarations":[{"constant":false,"id":4647,"mutability":"mutable","name":"twos","nameLocation":"7207:4:24","nodeType":"VariableDeclaration","scope":4727,"src":"7199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"7214:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4650,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"7233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:24"},{"AST":{"nodeType":"YulBlock","src":"7268:366:24","statements":[{"nodeType":"YulAssignment","src":"7333:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:24"},"nodeType":"YulFunctionCall","src":"7348:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:24"}]},{"nodeType":"YulAssignment","src":"7437:25:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:24"},"nodeType":"YulFunctionCall","src":"7446:16:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:24"}]},{"nodeType":"YulAssignment","src":"7581:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:24"},"nodeType":"YulFunctionCall","src":"7597:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:24"},"nodeType":"YulFunctionCall","src":"7593:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:24"},"nodeType":"YulFunctionCall","src":"7589:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4599,"isOffset":false,"isSlot":false,"src":"7333:11:24","valueSize":1},{"declaration":4599,"isOffset":false,"isSlot":false,"src":"7352:11:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"7437:5:24","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"7450:5:24","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"7365:4:24","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"7457:4:24","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"7581:4:24","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"7604:4:24","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"7611:4:24","valueSize":1}],"id":4655,"nodeType":"InlineAssembly","src":"7259:375:24"},{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"7700:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"7709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4658,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7717:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"7700:21:24"},{"assignments":[4663],"declarations":[{"constant":false,"id":4663,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:24","nodeType":"VariableDeclaration","scope":4727,"src":"8056:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4670,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4665,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8079:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:24"},{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8327:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4674,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8341:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"8312:36:24"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8397:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4682,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8411:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"8382:36:24"},{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8454:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8469:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4690,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8483:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"8454:36:24"},{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8525:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4698,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8554:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"nodeType":"ExpressionStatement","src":"8525:36:24"},{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4703,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8613:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4706,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8627:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4710,"nodeType":"ExpressionStatement","src":"8598:36:24"},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4711,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"8687:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4714,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"8672:36:24"},{"expression":{"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"9154:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9163:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4721,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"9171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4724,"nodeType":"ExpressionStatement","src":"9154:24:24"},{"expression":{"id":4725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"9199:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4603,"id":4726,"nodeType":"Return","src":"9192:13:24"}]}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"4679:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:24","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"x","nameLocation":"5020:1:24","nodeType":"VariableDeclaration","scope":4729,"src":"5012:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"y","nameLocation":"5031:1:24","nodeType":"VariableDeclaration","scope":4729,"src":"5023:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:24","nodeType":"VariableDeclaration","scope":4729,"src":"5034:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:24"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"result","nameLocation":"5086:6:24","nodeType":"VariableDeclaration","scope":4729,"src":"5078:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:24"},"scope":5899,"src":"4996:4226:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"9461:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4745,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9485:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4746,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9488:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"9491:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4744,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4729,4766],"referencedDeclaration":4729,"src":"9478:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4752,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"9539:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":4751,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"9522:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4305_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4755,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9559:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4756,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9562:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4757,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"9565:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4754,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4749,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"9506:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"9506:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4743,"id":4764,"nodeType":"Return","src":"9471:111:24"}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"9228:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:24","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"x","nameLocation":"9375:1:24","nodeType":"VariableDeclaration","scope":4766,"src":"9367:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"y","nameLocation":"9386:1:24","nodeType":"VariableDeclaration","scope":4766,"src":"9378:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:24","nodeType":"VariableDeclaration","scope":4766,"src":"9389:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4739,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:24","nodeType":"VariableDeclaration","scope":4766,"src":"9410:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":4738,"nodeType":"UserDefinedTypeName","pathNode":{"id":4737,"name":"Rounding","nameLocations":["9410:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"9410:8:24"},"referencedDeclaration":4305,"src":"9410:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:24"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4766,"src":"9452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:24"},"scope":5899,"src":"9351:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"10223:1849:24","statements":[{"id":4861,"nodeType":"UncheckedBlock","src":"10233:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"10261:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4781,"nodeType":"IfStatement","src":"10257:20:24","trueBody":{"expression":{"hexValue":"30","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4775,"id":4780,"nodeType":"Return","src":"10269:8:24"}},{"assignments":[4783],"declarations":[{"constant":false,"id":4783,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:24","nodeType":"VariableDeclaration","scope":4861,"src":"10748:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4787,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"10768:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4785,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"10772:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:24"},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:24","nodeType":"VariableDeclaration","scope":4861,"src":"10787:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4791,"initialValue":{"id":4790,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"10801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:24"},{"assignments":[4793],"declarations":[{"constant":false,"id":4793,"mutability":"mutable","name":"x","nameLocation":"10945:1:24","nodeType":"VariableDeclaration","scope":4861,"src":"10938:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4792,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4795,"initialValue":{"hexValue":"30","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:24"},{"assignments":[4797],"declarations":[{"constant":false,"id":4797,"mutability":"mutable","name":"y","nameLocation":"10971:1:24","nodeType":"VariableDeclaration","scope":4861,"src":"10964:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4796,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4799,"initialValue":{"hexValue":"31","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:24"},{"body":{"id":4836,"nodeType":"Block","src":"11014:882:24","statements":[{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:24","nodeType":"VariableDeclaration","scope":4836,"src":"11032:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4808,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11051:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4806,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11057:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:24"},{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4809,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11086:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4810,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11091:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4812,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11436:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11442:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4815,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"11454:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4820,"nodeType":"ExpressionStatement","src":"11085:395:24"},{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4821,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"11500:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4822,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"11503:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4823,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4824,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"11585:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"11839:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"11843:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4829,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"11854:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4827,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"11499:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"10998:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4837,"nodeType":"WhileStatement","src":"10991:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11914:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4843,"nodeType":"IfStatement","src":"11910:22:24","trueBody":{"expression":{"hexValue":"30","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4775,"id":4842,"nodeType":"Return","src":"11924:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"11983:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:24","subExpression":{"id":4851,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"12003:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:24","typeDescriptions":{}}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4857,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"12015:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:24","typeDescriptions":{}}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4844,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"11975:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4775,"id":4860,"nodeType":"Return","src":"11968:50:24"}]}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"9595:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:24","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"a","nameLocation":"10177:1:24","nodeType":"VariableDeclaration","scope":4863,"src":"10169:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4771,"mutability":"mutable","name":"n","nameLocation":"10188:1:24","nodeType":"VariableDeclaration","scope":4863,"src":"10180:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:24"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4863,"src":"10214:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:24"},"scope":5899,"src":"10153:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4883,"nodeType":"Block","src":"12672:82:24","statements":[{"id":4882,"nodeType":"UncheckedBlock","src":"12682:66:24","statements":[{"expression":{"arguments":[{"id":4875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"12725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"12728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4879,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"12735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4873,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"12713:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5899_$","typeString":"type(library Math)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4920,"src":"12713:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4872,"id":4881,"nodeType":"Return","src":"12706:31:24"}]}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"12078:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:24","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"a","nameLocation":"12626:1:24","nodeType":"VariableDeclaration","scope":4884,"src":"12618:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"p","nameLocation":"12637:1:24","nodeType":"VariableDeclaration","scope":4884,"src":"12629:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:24"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4884,"src":"12663:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:24"},"scope":5899,"src":"12597:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4919,"nodeType":"Block","src":"13524:174:24","statements":[{"assignments":[4897,4899],"declarations":[{"constant":false,"id":4897,"mutability":"mutable","name":"success","nameLocation":"13540:7:24","nodeType":"VariableDeclaration","scope":4919,"src":"13535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4896,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"result","nameLocation":"13557:6:24","nodeType":"VariableDeclaration","scope":4919,"src":"13549:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4905,"initialValue":{"arguments":[{"id":4901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13577:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4902,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"13580:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4903,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"13583:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4900,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4944,5026],"referencedDeclaration":4944,"src":"13567:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:24"},{"condition":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:24","subExpression":{"id":4906,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"13600:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"13595:74:24","trueBody":{"id":4915,"nodeType":"Block","src":"13609:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":4911,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"13635:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"13635:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4908,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"13623:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"13623:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4914,"nodeType":"ExpressionStatement","src":"13623:35:24"}]}},{"expression":{"id":4917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"13685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4895,"id":4918,"nodeType":"Return","src":"13678:13:24"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"12760:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:24","nodeType":"FunctionDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"b","nameLocation":"13467:1:24","nodeType":"VariableDeclaration","scope":4920,"src":"13459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4886,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4889,"mutability":"mutable","name":"e","nameLocation":"13478:1:24","nodeType":"VariableDeclaration","scope":4920,"src":"13470:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4891,"mutability":"mutable","name":"m","nameLocation":"13489:1:24","nodeType":"VariableDeclaration","scope":4920,"src":"13481:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:24"},"returnParameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"13515:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:24"},"scope":5899,"src":"13443:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4943,"nodeType":"Block","src":"14552:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"14566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4941,"nodeType":"IfStatement","src":"14562:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4933,"id":4940,"nodeType":"Return","src":"14574:17:24"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:24"},"nodeType":"YulFunctionCall","src":"14651:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:24"},"nodeType":"YulFunctionCall","src":"15563:17:24"},"nodeType":"YulExpressionStatement","src":"15563:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:24"},"nodeType":"YulFunctionCall","src":"15600:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:24"},"nodeType":"YulFunctionCall","src":"15593:28:24"},"nodeType":"YulExpressionStatement","src":"15593:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:24"},"nodeType":"YulFunctionCall","src":"15641:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:24"},"nodeType":"YulFunctionCall","src":"15634:28:24"},"nodeType":"YulExpressionStatement","src":"15634:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:24"},"nodeType":"YulFunctionCall","src":"15682:14:24"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:24"},"nodeType":"YulFunctionCall","src":"15675:25:24"},"nodeType":"YulExpressionStatement","src":"15675:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:24"},"nodeType":"YulFunctionCall","src":"15720:14:24"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:24"},"nodeType":"YulFunctionCall","src":"15713:25:24"},"nodeType":"YulExpressionStatement","src":"15713:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:24"},"nodeType":"YulFunctionCall","src":"15758:14:24"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:24"},"nodeType":"YulFunctionCall","src":"15751:25:24"},"nodeType":"YulExpressionStatement","src":"15751:25:24"},{"nodeType":"YulAssignment","src":"15938:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:24"},"nodeType":"YulFunctionCall","src":"15960:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:24","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:24","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:24"},"nodeType":"YulFunctionCall","src":"15949:46:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:24"}]},{"nodeType":"YulAssignment","src":"16008:21:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:24"},"nodeType":"YulFunctionCall","src":"16018:11:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4923,"isOffset":false,"isSlot":false,"src":"15698:1:24","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"15736:1:24","valueSize":1},{"declaration":4927,"isOffset":false,"isSlot":false,"src":"15774:1:24","valueSize":1},{"declaration":4932,"isOffset":false,"isSlot":false,"src":"16008:6:24","valueSize":1},{"declaration":4930,"isOffset":false,"isSlot":false,"src":"15938:7:24","valueSize":1}],"flags":["memory-safe"],"id":4942,"nodeType":"InlineAssembly","src":"14601:1438:24"}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"13704:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4944,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:24","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"b","nameLocation":"14474:1:24","nodeType":"VariableDeclaration","scope":4944,"src":"14466:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4925,"mutability":"mutable","name":"e","nameLocation":"14485:1:24","nodeType":"VariableDeclaration","scope":4944,"src":"14477:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"m","nameLocation":"14496:1:24","nodeType":"VariableDeclaration","scope":4944,"src":"14488:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:24"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"success","nameLocation":"14527:7:24","nodeType":"VariableDeclaration","scope":4944,"src":"14522:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4929,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"result","nameLocation":"14544:6:24","nodeType":"VariableDeclaration","scope":4944,"src":"14536:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:24"},"scope":5899,"src":"14447:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4979,"nodeType":"Block","src":"16242:179:24","statements":[{"assignments":[4957,4959],"declarations":[{"constant":false,"id":4957,"mutability":"mutable","name":"success","nameLocation":"16258:7:24","nodeType":"VariableDeclaration","scope":4979,"src":"16253:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4956,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"result","nameLocation":"16280:6:24","nodeType":"VariableDeclaration","scope":4979,"src":"16267:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4958,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4965,"initialValue":{"arguments":[{"id":4961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"16300:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4962,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"16303:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4963,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"16306:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4960,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4944,5026],"referencedDeclaration":5026,"src":"16290:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:24"},{"condition":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:24","subExpression":{"id":4966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"16323:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4976,"nodeType":"IfStatement","src":"16318:74:24","trueBody":{"id":4975,"nodeType":"Block","src":"16332:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":4971,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"16358:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"16358:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4968,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"16346:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2631_$","typeString":"type(library Panic)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"16346:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4974,"nodeType":"ExpressionStatement","src":"16346:35:24"}]}},{"expression":{"id":4977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"16408:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4955,"id":4978,"nodeType":"Return","src":"16401:13:24"}]},"documentation":{"id":4945,"nodeType":"StructuredDocumentation","src":"16051:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:24","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"b","nameLocation":"16170:1:24","nodeType":"VariableDeclaration","scope":4980,"src":"16157:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4946,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"e","nameLocation":"16186:1:24","nodeType":"VariableDeclaration","scope":4980,"src":"16173:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4948,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"m","nameLocation":"16202:1:24","nodeType":"VariableDeclaration","scope":4980,"src":"16189:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4950,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:24"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4980,"src":"16228:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4953,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:24"},"scope":5899,"src":"16141:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"16675:771:24","statements":[{"condition":{"arguments":[{"id":4995,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"16700:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4994,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"16689:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5004,"nodeType":"IfStatement","src":"16685:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4998,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4993,"id":5003,"nodeType":"Return","src":"16704:28:24"}},{"assignments":[5006],"declarations":[{"constant":false,"id":5006,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:24","nodeType":"VariableDeclaration","scope":5025,"src":"16743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5009,"initialValue":{"expression":{"id":5007,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"16758:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:24","memberName":"length","nodeType":"MemberAccess","src":"16758:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:24"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"16848:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"16874:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:24","memberName":"length","nodeType":"MemberAccess","src":"16874:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5015,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"16884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:24","memberName":"length","nodeType":"MemberAccess","src":"16884:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5017,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"16894:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"16900:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5019,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"16903:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5020,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"16906:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5011,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5023,"nodeType":"ExpressionStatement","src":"16848:60:24"},{"AST":{"nodeType":"YulBlock","src":"16944:496:24","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:24","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:24"},"nodeType":"YulFunctionCall","src":"16973:17:24"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:24","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:24"},"nodeType":"YulFunctionCall","src":"17102:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:24","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:24"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:24"},"nodeType":"YulFunctionCall","src":"17124:13:24"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:24"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:24"},"nodeType":"YulFunctionCall","src":"17091:62:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:24"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:24"},"nodeType":"YulFunctionCall","src":"17302:20:24"},"nodeType":"YulExpressionStatement","src":"17302:20:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:24"},"nodeType":"YulFunctionCall","src":"17411:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:24"},"nodeType":"YulFunctionCall","src":"17398:32:24"},"nodeType":"YulExpressionStatement","src":"17398:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":5006,"isOffset":false,"isSlot":false,"src":"17148:4:24","valueSize":1},{"declaration":5006,"isOffset":false,"isSlot":false,"src":"17317:4:24","valueSize":1},{"declaration":5006,"isOffset":false,"isSlot":false,"src":"17424:4:24","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"16977:6:24","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"17130:6:24","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"17309:6:24","valueSize":1},{"declaration":4990,"isOffset":false,"isSlot":false,"src":"17080:7:24","valueSize":1}],"flags":["memory-safe"],"id":5024,"nodeType":"InlineAssembly","src":"16919:521:24"}]},"documentation":{"id":4981,"nodeType":"StructuredDocumentation","src":"16427:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:24","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"b","nameLocation":"16561:1:24","nodeType":"VariableDeclaration","scope":5026,"src":"16548:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4982,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"e","nameLocation":"16585:1:24","nodeType":"VariableDeclaration","scope":5026,"src":"16572:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4984,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"m","nameLocation":"16609:1:24","nodeType":"VariableDeclaration","scope":5026,"src":"16596:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4986,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:24"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"success","nameLocation":"16645:7:24","nodeType":"VariableDeclaration","scope":5026,"src":"16640:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4989,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"result","nameLocation":"16667:6:24","nodeType":"VariableDeclaration","scope":5026,"src":"16654:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4991,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:24"},"scope":5899,"src":"16520:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"17601:176:24","statements":[{"body":{"id":5054,"nodeType":"Block","src":"17658:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5045,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17676:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5047,"indexExpression":{"id":5046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"17686:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5053,"nodeType":"IfStatement","src":"17672:68:24","trueBody":{"id":5052,"nodeType":"Block","src":"17695:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5033,"id":5051,"nodeType":"Return","src":"17713:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"17631:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5039,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17635:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:24","memberName":"length","nodeType":"MemberAccess","src":"17635:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5055,"initializationExpression":{"assignments":[5035],"declarations":[{"constant":false,"id":5035,"mutability":"mutable","name":"i","nameLocation":"17624:1:24","nodeType":"VariableDeclaration","scope":5055,"src":"17616:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5037,"initialValue":{"hexValue":"30","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:24"},"loopExpression":{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:24","subExpression":{"id":5042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"17655:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5044,"nodeType":"ExpressionStatement","src":"17653:3:24"},"nodeType":"ForStatement","src":"17611:139:24"},{"expression":{"hexValue":"74727565","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5033,"id":5057,"nodeType":"Return","src":"17759:11:24"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"17452:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:24","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:24","nodeType":"VariableDeclaration","scope":5059,"src":"17549:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5028,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:24"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5059,"src":"17595:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5031,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:24"},"scope":5899,"src":"17529:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5277,"nodeType":"Block","src":"18137:5124:24","statements":[{"id":5276,"nodeType":"UncheckedBlock","src":"18147:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"18241:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5073,"nodeType":"IfStatement","src":"18237:53:24","trueBody":{"id":5072,"nodeType":"Block","src":"18249:41:24","statements":[{"expression":{"id":5070,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"18274:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5066,"id":5071,"nodeType":"Return","src":"18267:8:24"}]}},{"assignments":[5075],"declarations":[{"constant":false,"id":5075,"mutability":"mutable","name":"aa","nameLocation":"19225:2:24","nodeType":"VariableDeclaration","scope":5276,"src":"19217:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5077,"initialValue":{"id":5076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"19230:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:24"},{"assignments":[5079],"declarations":[{"constant":false,"id":5079,"mutability":"mutable","name":"xn","nameLocation":"19253:2:24","nodeType":"VariableDeclaration","scope":5276,"src":"19245:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5081,"initialValue":{"hexValue":"31","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"19274:92:24","trueBody":{"id":5096,"nodeType":"Block","src":"19296:70:24","statements":[{"expression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5088,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19314:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5091,"nodeType":"ExpressionStatement","src":"19314:10:24"},{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19342:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"nodeType":"ExpressionStatement","src":"19342:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19383:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5113,"nodeType":"IfStatement","src":"19379:90:24","trueBody":{"id":5112,"nodeType":"Block","src":"19400:69:24","statements":[{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5104,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19418:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5107,"nodeType":"ExpressionStatement","src":"19418:9:24"},{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19445:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5111,"nodeType":"ExpressionStatement","src":"19445:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19486:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5129,"nodeType":"IfStatement","src":"19482:90:24","trueBody":{"id":5128,"nodeType":"Block","src":"19503:69:24","statements":[{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5120,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19521:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"19521:9:24"},{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19548:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"19548:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19589:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"IfStatement","src":"19585:89:24","trueBody":{"id":5144,"nodeType":"Block","src":"19606:68:24","statements":[{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19624:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"19624:9:24"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19651:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"19651:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19691:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5161,"nodeType":"IfStatement","src":"19687:87:24","trueBody":{"id":5160,"nodeType":"Block","src":"19707:67:24","statements":[{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5152,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19725:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5155,"nodeType":"ExpressionStatement","src":"19725:8:24"},{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5156,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19751:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5159,"nodeType":"ExpressionStatement","src":"19751:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5162,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19791:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"19787:87:24","trueBody":{"id":5176,"nodeType":"Block","src":"19807:67:24","statements":[{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19825:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"19825:8:24"},{"expression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19851:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5175,"nodeType":"ExpressionStatement","src":"19851:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"19891:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"IfStatement","src":"19887:61:24","trueBody":{"id":5188,"nodeType":"Block","src":"19907:41:24","statements":[{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19925:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5187,"nodeType":"ExpressionStatement","src":"19925:8:24"}]}},{"expression":{"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5190,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"20368:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5192,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"20378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5198,"nodeType":"ExpressionStatement","src":"20368:18:24"},{"expression":{"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5199,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22273:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22279:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22284:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5202,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22288:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5209,"nodeType":"ExpressionStatement","src":"22273:23:24"},{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5210,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22382:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22388:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22393:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5213,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22397:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5220,"nodeType":"ExpressionStatement","src":"22382:23:24"},{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5221,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22493:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22499:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22504:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5224,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22508:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"22493:23:24"},{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22602:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5233,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22608:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22613:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5235,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22617:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5242,"nodeType":"ExpressionStatement","src":"22602:23:24"},{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22712:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22718:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5246,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22727:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"22712:23:24"},{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22822:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22828:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"22833:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5257,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22837:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"22822:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"23211:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"23232:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"23237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"23241:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"23216:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"23216:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5066,"id":5275,"nodeType":"Return","src":"23204:40:24"}]}]},"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"17783:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:24","nodeType":"FunctionDefinition","parameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"a","nameLocation":"18102:1:24","nodeType":"VariableDeclaration","scope":5278,"src":"18094:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:24"},"returnParameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"18128:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:24"},"scope":5899,"src":"18080:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"23434:171:24","statements":[{"id":5310,"nodeType":"UncheckedBlock","src":"23444:155:24","statements":[{"assignments":[5290],"declarations":[{"constant":false,"id":5290,"mutability":"mutable","name":"result","nameLocation":"23476:6:24","nodeType":"VariableDeclaration","scope":5310,"src":"23468:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5294,"initialValue":{"arguments":[{"id":5292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"23490:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5291,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5278,5312],"referencedDeclaration":5278,"src":"23485:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"23513:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5299,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"23555:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":5298,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"23538:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4305_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"23568:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"23577:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"23586:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5296,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"23522:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"23522:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5288,"id":5309,"nodeType":"Return","src":"23506:82:24"}]}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"23267:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:24","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"a","nameLocation":"23380:1:24","nodeType":"VariableDeclaration","scope":5312,"src":"23372:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5284,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:24","nodeType":"VariableDeclaration","scope":5312,"src":"23383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":5283,"nodeType":"UserDefinedTypeName","pathNode":{"id":5282,"name":"Rounding","nameLocations":["23383:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"23383:8:24"},"referencedDeclaration":4305,"src":"23383:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:24"},"returnParameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5312,"src":"23425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:24"},"scope":5899,"src":"23358:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5507,"nodeType":"Block","src":"23796:981:24","statements":[{"assignments":[5321],"declarations":[{"constant":false,"id":5321,"mutability":"mutable","name":"result","nameLocation":"23814:6:24","nodeType":"VariableDeclaration","scope":5507,"src":"23806:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5323,"initialValue":{"hexValue":"30","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:24"},{"assignments":[5325],"declarations":[{"constant":false,"id":5325,"mutability":"mutable","name":"exp","nameLocation":"23842:3:24","nodeType":"VariableDeclaration","scope":5507,"src":"23834:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5326,"nodeType":"VariableDeclarationStatement","src":"23834:11:24"},{"id":5504,"nodeType":"UncheckedBlock","src":"23855:893:24","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5327,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"23879:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"23891:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"23891:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"23879:51:24"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23944:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5344,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"23954:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"23944:13:24"},{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"23971:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5348,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"23981:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5350,"nodeType":"ExpressionStatement","src":"23971:13:24"},{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5351,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"23999:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24026:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5353,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24010:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24010:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5366,"nodeType":"ExpressionStatement","src":"23999:49:24"},{"expression":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24062:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5368,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24072:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5370,"nodeType":"ExpressionStatement","src":"24062:13:24"},{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24089:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5372,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24099:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"24089:13:24"},{"expression":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5375,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24117:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24144:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5377,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24128:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24128:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5390,"nodeType":"ExpressionStatement","src":"24117:49:24"},{"expression":{"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24180:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5392,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24190:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5394,"nodeType":"ExpressionStatement","src":"24180:13:24"},{"expression":{"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24207:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5396,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24217:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5398,"nodeType":"ExpressionStatement","src":"24207:13:24"},{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5399,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24235:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24262:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5401,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24246:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24246:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5414,"nodeType":"ExpressionStatement","src":"24235:49:24"},{"expression":{"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5416,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24308:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5418,"nodeType":"ExpressionStatement","src":"24298:13:24"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24325:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5420,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24335:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5422,"nodeType":"ExpressionStatement","src":"24325:13:24"},{"expression":{"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5423,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24353:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5425,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24363:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24363:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5438,"nodeType":"ExpressionStatement","src":"24353:47:24"},{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5440,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24424:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5442,"nodeType":"ExpressionStatement","src":"24414:13:24"},{"expression":{"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24441:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5444,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24451:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5446,"nodeType":"ExpressionStatement","src":"24441:13:24"},{"expression":{"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24469:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5449,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24479:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24479:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5462,"nodeType":"ExpressionStatement","src":"24469:47:24"},{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24530:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5464,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24540:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5466,"nodeType":"ExpressionStatement","src":"24530:13:24"},{"expression":{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24557:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5468,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24567:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5470,"nodeType":"ExpressionStatement","src":"24557:13:24"},{"expression":{"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24585:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5473,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24595:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24595:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5486,"nodeType":"ExpressionStatement","src":"24585:47:24"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24646:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5488,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24656:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"24646:13:24"},{"expression":{"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24673:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5492,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"24683:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5494,"nodeType":"ExpressionStatement","src":"24673:13:24"},{"expression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24701:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"24727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5496,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"24711:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"24711:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5503,"nodeType":"ExpressionStatement","src":"24701:36:24"}]},{"expression":{"id":5505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"24764:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5319,"id":5506,"nodeType":"Return","src":"24757:13:24"}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"23611:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5508,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:24","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"23757:5:24","nodeType":"VariableDeclaration","scope":5508,"src":"23749:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:24"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5508,"src":"23787:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:24"},"scope":5899,"src":"23735:1042:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5541,"nodeType":"Block","src":"25010:175:24","statements":[{"id":5540,"nodeType":"UncheckedBlock","src":"25020:159:24","statements":[{"assignments":[5520],"declarations":[{"constant":false,"id":5520,"mutability":"mutable","name":"result","nameLocation":"25052:6:24","nodeType":"VariableDeclaration","scope":5540,"src":"25044:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5524,"initialValue":{"arguments":[{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"25066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5521,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5508,5542],"referencedDeclaration":5508,"src":"25061:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"25093:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5529,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"25135:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":5528,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"25118:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4305_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"25153:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"25162:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5526,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"25102:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"25102:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5518,"id":5539,"nodeType":"Return","src":"25086:82:24"}]}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"24783:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5542,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:24","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"value","nameLocation":"24952:5:24","nodeType":"VariableDeclaration","scope":5542,"src":"24944:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5514,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:24","nodeType":"VariableDeclaration","scope":5542,"src":"24959:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":5513,"nodeType":"UserDefinedTypeName","pathNode":{"id":5512,"name":"Rounding","nameLocations":["24959:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"24959:8:24"},"referencedDeclaration":4305,"src":"24959:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:24"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5542,"src":"25001:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:24"},"scope":5899,"src":"24930:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5670,"nodeType":"Block","src":"25378:854:24","statements":[{"assignments":[5551],"declarations":[{"constant":false,"id":5551,"mutability":"mutable","name":"result","nameLocation":"25396:6:24","nodeType":"VariableDeclaration","scope":5670,"src":"25388:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5553,"initialValue":{"hexValue":"30","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:24"},{"id":5667,"nodeType":"UncheckedBlock","src":"25416:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25444:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5570,"nodeType":"IfStatement","src":"25440:103:24","trueBody":{"id":5569,"nodeType":"Block","src":"25463:80:24","statements":[{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25481:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ExpressionStatement","src":"25481:17:24"},{"expression":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"25516:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5568,"nodeType":"ExpressionStatement","src":"25516:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25560:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"IfStatement","src":"25556:103:24","trueBody":{"id":5586,"nodeType":"Block","src":"25579:80:24","statements":[{"expression":{"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25597:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5581,"nodeType":"ExpressionStatement","src":"25597:17:24"},{"expression":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"25632:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5585,"nodeType":"ExpressionStatement","src":"25632:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25676:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"IfStatement","src":"25672:103:24","trueBody":{"id":5603,"nodeType":"Block","src":"25695:80:24","statements":[{"expression":{"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25713:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5598,"nodeType":"ExpressionStatement","src":"25713:17:24"},{"expression":{"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"25748:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5602,"nodeType":"ExpressionStatement","src":"25748:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25792:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"nodeType":"IfStatement","src":"25788:100:24","trueBody":{"id":5620,"nodeType":"Block","src":"25810:78:24","statements":[{"expression":{"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25828:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5615,"nodeType":"ExpressionStatement","src":"25828:16:24"},{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"25862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5619,"nodeType":"ExpressionStatement","src":"25862:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5638,"nodeType":"IfStatement","src":"25901:100:24","trueBody":{"id":5637,"nodeType":"Block","src":"25923:78:24","statements":[{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"25941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5632,"nodeType":"ExpressionStatement","src":"25941:16:24"},{"expression":{"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"25975:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5636,"nodeType":"ExpressionStatement","src":"25975:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"26018:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5655,"nodeType":"IfStatement","src":"26014:100:24","trueBody":{"id":5654,"nodeType":"Block","src":"26036:78:24","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"26054:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"26054:16:24"},{"expression":{"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"26088:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5653,"nodeType":"ExpressionStatement","src":"26088:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"26131:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"IfStatement","src":"26127:66:24","trueBody":{"id":5665,"nodeType":"Block","src":"26149:44:24","statements":[{"expression":{"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"26167:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5664,"nodeType":"ExpressionStatement","src":"26167:11:24"}]}}]},{"expression":{"id":5668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"26219:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5549,"id":5669,"nodeType":"Return","src":"26212:13:24"}]},"documentation":{"id":5543,"nodeType":"StructuredDocumentation","src":"25191:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5671,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:24","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"value","nameLocation":"25339:5:24","nodeType":"VariableDeclaration","scope":5671,"src":"25331:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:24"},"returnParameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5671,"src":"25369:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:24"},"scope":5899,"src":"25316:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5704,"nodeType":"Block","src":"26467:177:24","statements":[{"id":5703,"nodeType":"UncheckedBlock","src":"26477:161:24","statements":[{"assignments":[5683],"declarations":[{"constant":false,"id":5683,"mutability":"mutable","name":"result","nameLocation":"26509:6:24","nodeType":"VariableDeclaration","scope":5703,"src":"26501:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5687,"initialValue":{"arguments":[{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"26524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5684,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5671,5705],"referencedDeclaration":5671,"src":"26518:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"26551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5692,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"26593:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":5691,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"26576:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4305_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"26612:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"26621:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"26560:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"26560:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5681,"id":5702,"nodeType":"Return","src":"26544:83:24"}]}]},"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"26238:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:24","nodeType":"FunctionDefinition","parameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"value","nameLocation":"26409:5:24","nodeType":"VariableDeclaration","scope":5705,"src":"26401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5677,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:24","nodeType":"VariableDeclaration","scope":5705,"src":"26416:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":5676,"nodeType":"UserDefinedTypeName","pathNode":{"id":5675,"name":"Rounding","nameLocations":["26416:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"26416:8:24"},"referencedDeclaration":4305,"src":"26416:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:24"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5705,"src":"26458:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:24"},"scope":5899,"src":"26386:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5841,"nodeType":"Block","src":"26964:674:24","statements":[{"assignments":[5714],"declarations":[{"constant":false,"id":5714,"mutability":"mutable","name":"result","nameLocation":"26982:6:24","nodeType":"VariableDeclaration","scope":5841,"src":"26974:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5716,"initialValue":{"hexValue":"30","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:24"},{"assignments":[5718],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:24","nodeType":"VariableDeclaration","scope":5841,"src":"27002:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5719,"nodeType":"VariableDeclarationStatement","src":"27002:12:24"},{"id":5838,"nodeType":"UncheckedBlock","src":"27024:585:24","statements":[{"expression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5720,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27048:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27071:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5721,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27055:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27055:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5733,"nodeType":"ExpressionStatement","src":"27048:46:24"},{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27108:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27118:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5739,"nodeType":"ExpressionStatement","src":"27108:20:24"},{"expression":{"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27142:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27152:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5745,"nodeType":"ExpressionStatement","src":"27142:19:24"},{"expression":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5746,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27176:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5747,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27183:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27183:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5759,"nodeType":"ExpressionStatement","src":"27176:45:24"},{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27235:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5761,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27245:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ExpressionStatement","src":"27235:19:24"},{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27268:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5767,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27278:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5771,"nodeType":"ExpressionStatement","src":"27268:18:24"},{"expression":{"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27301:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27324:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5773,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27308:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27308:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5785,"nodeType":"ExpressionStatement","src":"27301:45:24"},{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27360:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27370:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5791,"nodeType":"ExpressionStatement","src":"27360:19:24"},{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27403:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5797,"nodeType":"ExpressionStatement","src":"27393:18:24"},{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27426:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27433:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27433:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"27426:45:24"},{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27485:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27495:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5817,"nodeType":"ExpressionStatement","src":"27485:19:24"},{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27518:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27528:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5823,"nodeType":"ExpressionStatement","src":"27518:18:24"},{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"27577:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27561:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27561:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5837,"nodeType":"ExpressionStatement","src":"27551:47:24"}]},{"expression":{"id":5839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"27625:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5712,"id":5840,"nodeType":"Return","src":"27618:13:24"}]},"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"26650:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5842,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:24","nodeType":"FunctionDefinition","parameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"value","nameLocation":"26925:5:24","nodeType":"VariableDeclaration","scope":5842,"src":"26917:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:24"},"returnParameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5842,"src":"26955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:24"},"scope":5899,"src":"26901:737:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5878,"nodeType":"Block","src":"27875:184:24","statements":[{"id":5877,"nodeType":"UncheckedBlock","src":"27885:168:24","statements":[{"assignments":[5854],"declarations":[{"constant":false,"id":5854,"mutability":"mutable","name":"result","nameLocation":"27917:6:24","nodeType":"VariableDeclaration","scope":5877,"src":"27909:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5858,"initialValue":{"arguments":[{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"27933:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5855,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5842,5879],"referencedDeclaration":5842,"src":"27926:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5863,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"28002:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":5862,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"27985:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4305_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"28021:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"28036:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5860,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"27969:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"27969:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5852,"id":5876,"nodeType":"Return","src":"27953:89:24"}]}]},"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"27644:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:24","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"value","nameLocation":"27817:5:24","nodeType":"VariableDeclaration","scope":5879,"src":"27809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5844,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5848,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:24","nodeType":"VariableDeclaration","scope":5879,"src":"27824:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":5847,"nodeType":"UserDefinedTypeName","pathNode":{"id":5846,"name":"Rounding","nameLocations":["27824:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"27824:8:24"},"referencedDeclaration":4305,"src":"27824:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:24"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5879,"src":"27866:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:24"},"scope":5899,"src":"27793:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5897,"nodeType":"Block","src":"28257:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5890,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"28280:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5888,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:24","typeDescriptions":{}}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5887,"id":5896,"nodeType":"Return","src":"28267:31:24"}]},"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"28065:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5898,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:24","nodeType":"FunctionDefinition","parameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:24","nodeType":"VariableDeclaration","scope":5898,"src":"28209:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"},"typeName":{"id":5882,"nodeType":"UserDefinedTypeName","pathNode":{"id":5881,"name":"Rounding","nameLocations":["28209:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"28209:8:24"},"referencedDeclaration":4305,"src":"28209:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4305","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:24"},"returnParameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5898,"src":"28251:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5885,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:24"},"scope":5899,"src":"28183:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5900,"src":"281:28026:24","usedErrors":[],"usedEvents":[]}],"src":"103:28205:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7664]},"id":7665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5901,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7664,"linearizedBaseContracts":[7664],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5909,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":5909,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5904,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":5909,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5914,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":5914,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5911,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5921,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":5921,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5916,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5919,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":5921,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5918,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5926,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":5926,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":5953,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5936,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5947,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":5946,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5945,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5948,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5933,"id":5952,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":5954,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5954,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5931,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":7664,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5981,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5964,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5975,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":5974,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5973,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5976,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5961,"id":5980,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":5955,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":5982,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5982,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5959,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":7664,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5992,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6003,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":6002,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5997,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6001,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6004,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5989,"id":6008,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":5983,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":6010,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6010,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5987,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":7664,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6037,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6020,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6031,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":6030,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6025,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6029,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":6034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6032,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6017,"id":6036,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6038,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":6038,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6038,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6015,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":7664,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6065,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6048,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6059,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":6058,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6053,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6057,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6060,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6045,"id":6064,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":6039,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":6066,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6066,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6043,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":7664,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6093,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6076,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6087,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":6086,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6081,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6085,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6088,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6073,"id":6092,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":6067,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6094,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":6094,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6068,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6094,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6071,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":7664,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6121,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6104,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6115,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":6114,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6109,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6113,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6116,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6101,"id":6120,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":6095,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":6122,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6122,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6099,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":7664,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6149,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6132,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6143,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":6142,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6137,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6141,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6144,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6129,"id":6148,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":6123,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":6150,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6150,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6127,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":7664,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6177,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6160,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6159,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6171,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":6170,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6165,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6172,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6157,"id":6176,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":6151,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6178,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":6178,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6178,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6155,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":7664,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6205,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6188,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":6198,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6197,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":6202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6200,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6185,"id":6204,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":6179,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":6206,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6206,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6183,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":7664,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6216,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6227,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":6226,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6221,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6225,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6228,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6213,"id":6232,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":6207,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":6234,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6234,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6211,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":7664,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6261,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6244,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":6254,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6249,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6253,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6256,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6241,"id":6260,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":6262,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6262,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6239,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":7664,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6289,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6272,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":6282,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6281,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6284,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6269,"id":6288,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":6263,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":6290,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6290,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6267,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":7664,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6300,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6311,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":6310,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6305,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6309,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6312,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6297,"id":6316,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":6291,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":6318,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6292,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6318,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6295,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":7664,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6328,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6339,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":6338,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6333,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6337,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6340,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6325,"id":6344,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":6346,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6323,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":7664,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6373,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6356,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6367,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":6366,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6361,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6365,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":6370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6368,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6353,"id":6372,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":6374,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6374,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6351,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":7664,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6401,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6384,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6395,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":6394,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6389,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6393,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6396,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6381,"id":6400,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":6402,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6376,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6402,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6379,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":7664,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6429,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6412,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6423,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":6422,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6417,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6421,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6424,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6409,"id":6428,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":6403,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6430,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":6430,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6404,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6407,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":7664,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6457,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6440,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6451,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":6450,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6445,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6449,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6452,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6437,"id":6456,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6458,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":6458,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6458,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6435,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":7664,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6468,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6479,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":6478,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6473,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6477,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6480,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6465,"id":6484,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":6459,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":6486,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6460,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6486,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6463,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":7664,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6496,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6507,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":6506,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6501,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6505,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6508,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6493,"id":6512,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":6514,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6514,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6491,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":7664,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6524,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6535,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":6534,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6529,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6533,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6536,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6521,"id":6540,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":6542,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6542,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6519,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":7664,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6569,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6552,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6563,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":6562,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6557,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6561,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6564,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6549,"id":6568,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6570,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":6570,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6544,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6570,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6547,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":7664,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6597,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6580,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6579,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6591,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":6590,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6585,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6589,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6592,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6577,"id":6596,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":6571,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6598,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":6598,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6572,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6598,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6575,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":7664,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6625,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6608,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6607,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6619,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":6618,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6613,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6617,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6620,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6605,"id":6624,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":6599,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6626,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":6626,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6600,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6626,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6603,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":7664,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6636,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6647,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":6646,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6641,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6645,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":6650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6648,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6633,"id":6652,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":6627,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":6654,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6654,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6631,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":7664,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6681,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6664,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6663,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6675,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":6674,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6669,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6673,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6676,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6661,"id":6680,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6682,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":6682,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6682,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6659,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":7664,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6709,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6692,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6703,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":6702,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6697,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6701,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6704,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6689,"id":6708,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":6683,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6710,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6685,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":6710,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6684,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6710,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6687,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":7664,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6737,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6720,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6719,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6731,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":6730,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6725,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6729,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6732,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6717,"id":6736,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":6711,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6738,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":6738,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6738,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6715,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":7664,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6765,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6748,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6759,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":6758,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6753,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6757,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6760,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6745,"id":6764,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":6739,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":6766,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6766,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6743,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":7664,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6793,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6776,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6775,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6787,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":6786,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6781,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6785,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6788,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6773,"id":6792,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":6767,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6794,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":6794,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6794,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6771,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":7664,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6810,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":6809,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6805,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6808,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6801,"id":6815,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":6795,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":6817,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6796,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":7664,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6826,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6831,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":6840,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6839,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":6843,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":6843,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6822,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":7664,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6868,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6852,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6857,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6867,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":6866,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6865,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":6869,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6845,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":6869,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6848,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":7664,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6894,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6878,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6883,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6893,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":6892,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6887,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6891,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":6895,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":6895,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6874,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":7664,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6920,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6904,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6909,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6919,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":6918,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6917,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":6896,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":6921,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6897,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":6921,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6900,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":7664,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6946,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6930,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6935,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6945,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":6944,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6943,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":6947,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6923,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":6947,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6926,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":7664,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6972,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6956,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6961,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6971,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":6970,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6965,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6969,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6973,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":6973,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6949,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":6973,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6952,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":7664,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6998,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6982,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6987,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6997,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":6996,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6991,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6995,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":6974,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":6999,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6975,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":6999,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6978,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":7664,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7024,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7008,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7013,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7023,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":7022,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7017,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7021,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":7000,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":7003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7002,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":7025,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7001,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":7025,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7004,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":7664,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7050,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7034,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7039,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7049,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":7048,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7043,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7047,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":7026,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":7051,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7027,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":7051,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7030,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":7664,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7076,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7060,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7065,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7075,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":7074,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7069,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":7052,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7077,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7054,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":7077,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7053,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":7077,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7056,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":7664,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7102,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7086,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7091,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7101,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":7100,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7095,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7099,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":7078,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7103,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":7103,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7079,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":7103,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7082,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":7664,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7128,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7112,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7117,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7127,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":7126,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7121,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7125,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":7129,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7105,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":7129,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7108,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":7664,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7154,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7138,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7143,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7153,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":7152,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7147,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7151,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":7130,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7155,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":7155,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7131,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":7155,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7134,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":7664,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7180,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7164,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7169,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7179,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":7178,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7173,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7177,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":7156,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7181,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":7159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7158,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":7181,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7157,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":7181,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7160,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":7664,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7206,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7190,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7195,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7205,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":7204,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7199,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7203,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":7182,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7184,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":7207,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7183,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":7207,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7186,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":7664,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7232,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7216,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7221,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7231,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":7230,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7225,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7210,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":7233,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7209,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":7233,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7212,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":7664,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7258,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7242,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7247,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7257,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":7256,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7251,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7255,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":7234,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7259,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":7259,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7235,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":7259,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7238,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":7664,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7284,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7268,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7273,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7283,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":7282,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7277,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7281,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":7260,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7285,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":7285,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7261,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":7285,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7264,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":7664,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7310,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7294,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7299,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7309,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":7308,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7303,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7307,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":7286,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":7311,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7287,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":7311,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7290,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":7664,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7336,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7320,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7325,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7335,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":7334,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7329,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":7312,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7337,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":7337,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7313,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":7337,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7316,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":7664,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7362,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7346,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7351,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7361,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":7360,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7355,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7359,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":7338,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7363,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":7363,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7339,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":7363,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7342,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":7664,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7388,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7372,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7377,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7387,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":7386,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7381,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7385,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":7364,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":7389,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7365,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":7389,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7368,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":7664,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7414,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7398,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7403,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7413,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":7412,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7407,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7411,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":7390,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7415,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7392,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":7415,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7391,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":7415,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7394,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":7664,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7440,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7424,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7429,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7439,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":7438,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7433,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7437,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":7416,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7418,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":7441,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7417,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":7441,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7420,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":7664,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7466,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7450,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7455,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7465,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":7464,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7463,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":7442,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":7467,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7443,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":7467,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7446,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":7664,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7492,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7476,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7481,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7491,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":7490,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7485,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7489,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":7468,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":7493,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7469,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":7493,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7472,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":7664,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7518,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7502,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7507,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7517,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":7516,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7515,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":7494,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7496,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":7519,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7495,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":7519,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7498,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":7664,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7544,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7528,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7533,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7543,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":7542,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7541,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":7520,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":7545,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7521,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":7526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7525,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":7545,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7524,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":7664,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7570,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7554,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7559,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7569,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":7568,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7563,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7567,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":7546,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7571,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":7571,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7547,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":7571,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7550,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":7664,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7596,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7580,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7585,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7595,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":7594,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7589,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7593,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":7572,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":7575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7574,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":7597,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7573,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":7578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":7597,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7576,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":7664,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7622,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7606,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7611,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7621,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":7620,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7615,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7619,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":7598,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7623,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":7601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":7623,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7599,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":7604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":7623,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7602,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":7664,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7652,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7635,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7632,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7646,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":7645,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":7642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7641,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7644,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7647,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7630,"id":7651,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":7624,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7653,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7626,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":7653,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7653,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7628,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":7664,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7662,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:25","statements":[{"nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:25"},"nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:25"},"nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7656,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":7659,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":7661,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":7654,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7663,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":7657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7656,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":7663,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7655,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":7660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7659,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":7663,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7658,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":7664,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7665,"src":"769:34173:25","usedErrors":[5909,5914,5921,5926],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7664],"SignedMath":[7808]},"id":7809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7666,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7809,"sourceUnit":7665,"src":"135:40:26","symbolAliases":[{"foreign":{"id":7667,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7808,"linearizedBaseContracts":[7808],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":7698,"nodeType":"Block","src":"746:215:26","statements":[{"id":7697,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7690,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7664_$","typeString":"type(library SafeCast)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7663,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7686,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7680,"id":7696,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":7670,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7699,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":7677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":7699,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7671,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7674,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":7699,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7673,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7676,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":7699,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7675,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":7680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7699,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7678,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":7808,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7717,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7709,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7708,"id":7716,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":7700,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":7718,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":7705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7702,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":7718,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7701,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7704,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":7718,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7703,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":7708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7718,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7706,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":7808,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7736,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7733,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7728,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7727,"id":7735,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":7719,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":7737,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":7737,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7720,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7723,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":7737,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7737,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7725,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":7808,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7780,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[7748],"declarations":[{"constant":false,"id":7748,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":7780,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7747,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7761,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7763,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7746,"id":7779,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":7738,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7781,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":7743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7740,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":7781,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7739,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7742,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":7781,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7741,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":7746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7781,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7744,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":7808,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7806,"nodeType":"Block","src":"1843:767:26","statements":[{"id":7805,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":7805,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7789,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7794,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7797,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7798,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7801,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7788,"id":7804,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":7782,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7807,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":7807,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7783,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7807,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":7808,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7809,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/ArtistPayment.sol":{"ast":{"absolutePath":"contracts/ArtistPayment.sol","exportedSymbols":{"ArtistPayment":[8398],"Context":[2579],"ECDSA":[3956],"EIP712":[4183],"IERC5267":[172],"MessageHashUtils":[4257],"Ownable":[147],"ReentrancyGuard":[2817],"ShortString":[2823],"ShortStrings":[3034]},"id":8399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7810,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:27"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8399,"sourceUnit":148,"src":"60:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8399,"sourceUnit":2818,"src":"114:59:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8399,"sourceUnit":3957,"src":"175:62:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":7814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8399,"sourceUnit":4184,"src":"239:63:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7815,"name":"ReentrancyGuard","nameLocations":["332:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"332:15:27"},"id":7816,"nodeType":"InheritanceSpecifier","src":"332:15:27"},{"baseName":{"id":7817,"name":"Ownable","nameLocations":["349:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"349:7:27"},"id":7818,"nodeType":"InheritanceSpecifier","src":"349:7:27"},{"baseName":{"id":7819,"name":"EIP712","nameLocations":["358:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"358:6:27"},"id":7820,"nodeType":"InheritanceSpecifier","src":"358:6:27"}],"canonicalName":"ArtistPayment","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8398,"linearizedBaseContracts":[8398,4183,172,147,2579,2817],"name":"ArtistPayment","nameLocation":"315:13:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7823,"libraryName":{"id":7821,"name":"ECDSA","nameLocations":["378:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":3956,"src":"378:5:27"},"nodeType":"UsingForDirective","src":"372:24:27","typeName":{"id":7822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"388:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"811ab42a","id":7825,"mutability":"mutable","name":"craftiaxAddress","nameLocation":"419:15:27","nodeType":"VariableDeclaration","scope":8398,"src":"404:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7824,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3b7810f2","id":7827,"mutability":"mutable","name":"craftiaxFeePercentage","nameLocation":"456:21:27","nodeType":"VariableDeclaration","scope":8398,"src":"441:36:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7826,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"558e44d3","id":7830,"mutability":"constant","name":"MAX_FEE_PERCENTAGE","nameLocation":"565:18:27","nodeType":"VariableDeclaration","scope":8398,"src":"541:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7828,"name":"uint256","nodeType":"ElementaryTypeName","src":"541:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":7829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"586:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"eb566e91","id":7833,"mutability":"constant","name":"MIN_PAYMENT","nameLocation":"733:11:27","nodeType":"VariableDeclaration","scope":8398,"src":"709:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7831,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3235303030303030303030303030","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"747:18:27","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_25000000000000_by_1","typeString":"int_const 25000000000000"},"value":"25000000000000"},"visibility":"public"},{"constant":true,"functionSelector":"b1c1008c","id":7836,"mutability":"constant","name":"MAX_PAYMENT","nameLocation":"870:11:27","nodeType":"VariableDeclaration","scope":8398,"src":"846:59:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7834,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030303030303030303030303030","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"884:21:27","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"},"value":"50000000000000000"},"visibility":"public"},{"constant":false,"functionSelector":"5abd7cce","id":7839,"mutability":"mutable","name":"generalMinPayment","nameLocation":"1024:17:27","nodeType":"VariableDeclaration","scope":8398,"src":"1009:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030303030303030303030","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:17:27","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000_by_1","typeString":"int_const 5000000000000"},"value":"5000000000000"},"visibility":"public"},{"constant":false,"functionSelector":"bc979e0c","id":7842,"mutability":"mutable","name":"generalMaxPayment","nameLocation":"1109:17:27","nodeType":"VariableDeclaration","scope":8398,"src":"1094:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030303030303030303030303030","id":7841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:21:27","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"},"value":"50000000000000000"},"visibility":"public"},{"constant":false,"functionSelector":"4e75baaf","id":7845,"mutability":"mutable","name":"verifiedMaxPayment","nameLocation":"1193:18:27","nodeType":"VariableDeclaration","scope":8398,"src":"1178:58:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323530303030303030303030303030303030","id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:22:27","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_250000000000000000_by_1","typeString":"int_const 250000000000000000"},"value":"250000000000000000"},"visibility":"public"},{"constant":false,"functionSelector":"657affbf","id":7849,"mutability":"mutable","name":"isVerifiedArtist","nameLocation":"1329:16:27","nodeType":"VariableDeclaration","scope":8398,"src":"1297:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7848,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7846,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1297:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7847,"name":"bool","nodeType":"ElementaryTypeName","src":"1316:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"dd061644a2478fe067a60a32ca1bce725bc0c45ef99d529be0556b3f22dfb254","id":7859,"name":"PaymentProcessed","nameLocation":"1364:16:27","nodeType":"EventDefinition","parameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7851,"indexed":true,"mutability":"mutable","name":"artist","nameLocation":"1407:6:27","nodeType":"VariableDeclaration","scope":7859,"src":"1391:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7850,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7853,"indexed":false,"mutability":"mutable","name":"artistAmount","nameLocation":"1432:12:27","nodeType":"VariableDeclaration","scope":7859,"src":"1424:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7855,"indexed":false,"mutability":"mutable","name":"craftiaxFee","nameLocation":"1463:11:27","nodeType":"VariableDeclaration","scope":7859,"src":"1455:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7857,"indexed":false,"mutability":"mutable","name":"isVerified","nameLocation":"1490:10:27","nodeType":"VariableDeclaration","scope":7859,"src":"1485:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7856,"name":"bool","nodeType":"ElementaryTypeName","src":"1485:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1380:127:27"},"src":"1358:150:27"},{"anonymous":false,"eventSelector":"8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76","id":7863,"name":"FeeUpdated","nameLocation":"1526:10:27","nodeType":"EventDefinition","parameters":{"id":7862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7861,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1545:6:27","nodeType":"VariableDeclaration","scope":7863,"src":"1537:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1536:16:27"},"src":"1520:33:27"},{"anonymous":false,"eventSelector":"53baf540f6ba4584584ccbd80c43cc27031fb628cd53b60d5b07cb026f044470","id":7867,"name":"CraftiaxAddressUpdated","nameLocation":"1565:22:27","nodeType":"EventDefinition","parameters":{"id":7866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"1596:10:27","nodeType":"VariableDeclaration","scope":7867,"src":"1588:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7864,"name":"address","nodeType":"ElementaryTypeName","src":"1588:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1587:20:27"},"src":"1559:49:27"},{"anonymous":false,"eventSelector":"0e04ae0d5e07c196abfdddf316ed5a149db87e19d926fcc1bdbb97eb3e7e4996","id":7873,"name":"ArtistVerificationStatusUpdated","nameLocation":"1620:31:27","nodeType":"EventDefinition","parameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"indexed":true,"mutability":"mutable","name":"artist","nameLocation":"1668:6:27","nodeType":"VariableDeclaration","scope":7873,"src":"1652:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7868,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7871,"indexed":false,"mutability":"mutable","name":"isVerified","nameLocation":"1681:10:27","nodeType":"VariableDeclaration","scope":7873,"src":"1676:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7870,"name":"bool","nodeType":"ElementaryTypeName","src":"1676:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1651:41:27"},"src":"1614:79:27"},{"anonymous":false,"eventSelector":"a4d4826a6fbc5911d78e36c33efad85b381295bdb2efb011ac33984434a8e5b9","id":7881,"name":"PaymentLimitsUpdated","nameLocation":"1705:20:27","nodeType":"EventDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7875,"indexed":false,"mutability":"mutable","name":"generalMin","nameLocation":"1744:10:27","nodeType":"VariableDeclaration","scope":7881,"src":"1736:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7877,"indexed":false,"mutability":"mutable","name":"generalMax","nameLocation":"1773:10:27","nodeType":"VariableDeclaration","scope":7881,"src":"1765:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1765:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7879,"indexed":false,"mutability":"mutable","name":"verifiedMax","nameLocation":"1802:11:27","nodeType":"VariableDeclaration","scope":7881,"src":"1794:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1725:95:27"},"src":"1699:122:27"},{"anonymous":false,"eventSelector":"0243549a92b2412f7a3caf7a2e56d65b8821b91345363faa5f57195384065fcc","id":7887,"name":"VerifierUpdated","nameLocation":"1833:15:27","nodeType":"EventDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7883,"indexed":true,"mutability":"mutable","name":"oldVerifier","nameLocation":"1865:11:27","nodeType":"VariableDeclaration","scope":7887,"src":"1849:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7882,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7885,"indexed":true,"mutability":"mutable","name":"newVerifier","nameLocation":"1894:11:27","nodeType":"VariableDeclaration","scope":7887,"src":"1878:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7884,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1848:58:27"},"src":"1827:80:27"},{"anonymous":false,"eventSelector":"1800cd2301fbc20790ed94f3d55a28ef2306a9c31cd3c72b5b71b6e4cf5c6241","id":7893,"name":"NonceInvalidated","nameLocation":"1919:16:27","nodeType":"EventDefinition","parameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7889,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1952:4:27","nodeType":"VariableDeclaration","scope":7893,"src":"1936:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7888,"name":"address","nodeType":"ElementaryTypeName","src":"1936:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7891,"indexed":false,"mutability":"mutable","name":"currentNonce","nameLocation":"1966:12:27","nodeType":"VariableDeclaration","scope":7893,"src":"1958:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1935:44:27"},"src":"1913:67:27"},{"constant":true,"id":7898,"mutability":"constant","name":"PAYMENT_TYPEHASH","nameLocation":"2066:16:27","nodeType":"VariableDeclaration","scope":8398,"src":"2041:160:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5061794172746973742861646472657373206172746973742c75696e7432353620616d6f756e742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c75696e7432353620636861696e496429","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:89:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba5f9b5e8fd41dce0e09bc45e89026d6d1648da87378147343d6033f976b4559","typeString":"literal_string \"PayArtist(address artist,uint256 amount,uint256 nonce,uint256 deadline,uint256 chainId)\""},"value":"PayArtist(address artist,uint256 amount,uint256 nonce,uint256 deadline,uint256 chainId)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba5f9b5e8fd41dce0e09bc45e89026d6d1648da87378147343d6033f976b4559","typeString":"literal_string \"PayArtist(address artist,uint256 amount,uint256 nonce,uint256 deadline,uint256 chainId)\""}],"id":7895,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2085:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:116:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7902,"mutability":"mutable","name":"_nonces","nameLocation":"2244:7:27","nodeType":"VariableDeclaration","scope":8398,"src":"2208:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7901,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7899,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2208:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":7904,"mutability":"mutable","name":"_verifier","nameLocation":"2274:9:27","nodeType":"VariableDeclaration","scope":8398,"src":"2258:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7903,"name":"address","nodeType":"ElementaryTypeName","src":"2258:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":7908,"mutability":"mutable","name":"lastPaymentTimestamp","nameLocation":"2354:20:27","nodeType":"VariableDeclaration","scope":8398,"src":"2318:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7907,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7905,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2318:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":true,"id":7911,"mutability":"constant","name":"PAYMENT_COOLDOWN","nameLocation":"2406:16:27","nodeType":"VariableDeclaration","scope":8398,"src":"2381:53:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:9:27","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"visibility":"private"},{"body":{"id":7935,"nodeType":"Block","src":"2554:185:27","statements":[{"expression":{"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7923,"name":"craftiaxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"2565:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307838636530663934373535456231346637414631333043316161326341643236646561326132416364","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2583:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x8ce0f94755Eb14f7AF130C1aa2cAd26dea2a2Acd"},"src":"2565:60:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7926,"nodeType":"ExpressionStatement","src":"2565:60:27"},{"expression":{"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7927,"name":"craftiaxFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"2636:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":7928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2636:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7930,"nodeType":"ExpressionStatement","src":"2636:25:27"},{"expression":{"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7931,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7904,"src":"2672:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7932,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2684:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2672:24:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7934,"nodeType":"ExpressionStatement","src":"2672:24:27"}]},"id":7936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7916,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2495:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7917,"kind":"baseConstructorSpecifier","modifierName":{"id":7915,"name":"Ownable","nameLocations":["2487:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2487:7:27"},"nodeType":"ModifierInvocation","src":"2487:21:27"},{"arguments":[{"hexValue":"4172746973745061796d656e74","id":7919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2526:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b82459fcaed4f9ade144c430963bd08eeb5091fe6864d8be2177ac2d9a9fc515","typeString":"literal_string \"ArtistPayment\""},"value":"ArtistPayment"},{"hexValue":"31","id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2543:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":7921,"kind":"baseConstructorSpecifier","modifierName":{"id":7918,"name":"EIP712","nameLocations":["2519:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"2519:6:27"},"nodeType":"ModifierInvocation","src":"2519:28:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"initialOwner","nameLocation":"2463:12:27","nodeType":"VariableDeclaration","scope":7936,"src":"2455:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7912,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2454:22:27"},"returnParameters":{"id":7922,"nodeType":"ParameterList","parameters":[],"src":"2554:0:27"},"scope":8398,"src":"2443:296:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8103,"nodeType":"Block","src":"2895:1905:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7948,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2942:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2948:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"2942:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7950,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"2961:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2942:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":7952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2971:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":7947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2934:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2934:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7954,"nodeType":"ExpressionStatement","src":"2934:57:27"},{"assignments":[7956],"declarations":[{"constant":false,"id":7956,"mutability":"mutable","name":"structHash","nameLocation":"3049:10:27","nodeType":"VariableDeclaration","scope":8103,"src":"3041:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3041:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7974,"initialValue":{"arguments":[{"arguments":[{"id":7960,"name":"PAYMENT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"3097:16:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7961,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"3128:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3156:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3160:5:27","memberName":"value","nodeType":"MemberAccess","src":"3156:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3180:21:27","subExpression":{"baseExpression":{"id":7964,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"3180:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7967,"indexExpression":{"expression":{"id":7965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3188:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3192:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3188:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3180:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7969,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"3216:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7970,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3239:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3245:7:27","memberName":"chainid","nodeType":"MemberAccess","src":"3239:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7958,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3072:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3076:6:27","memberName":"encode","nodeType":"MemberAccess","src":"3072:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:191:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3062:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:202:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3041:223:27"},{"assignments":[7976],"declarations":[{"constant":false,"id":7976,"mutability":"mutable","name":"hash","nameLocation":"3285:4:27","nodeType":"VariableDeclaration","scope":8103,"src":"3277:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3277:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7980,"initialValue":{"arguments":[{"id":7978,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"3309:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7977,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"3292:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3292:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3277:43:27"},{"assignments":[7982],"declarations":[{"constant":false,"id":7982,"mutability":"mutable","name":"signer","nameLocation":"3339:6:27","nodeType":"VariableDeclaration","scope":8103,"src":"3331:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7981,"name":"address","nodeType":"ElementaryTypeName","src":"3331:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7988,"initialValue":{"arguments":[{"id":7985,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"3362:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7986,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7942,"src":"3368:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7983,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"3348:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3956_$","typeString":"type(library ECDSA)"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3354:7:27","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3712,"src":"3348:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3331:47:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7990,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"3397:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7991,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7904,"src":"3407:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3397:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3418:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3389:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7995,"nodeType":"ExpressionStatement","src":"3389:49:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3459:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3463:5:27","memberName":"value","nodeType":"MemberAccess","src":"3459:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7999,"name":"generalMinPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"3472:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3459:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420616d6f756e742062656c6f77206d696e696d756d","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3491:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244","typeString":"literal_string \"Payment amount below minimum\""},"value":"Payment amount below minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244","typeString":"literal_string \"Payment amount below minimum\""}],"id":7996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3451:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8003,"nodeType":"ExpressionStatement","src":"3451:71:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8005,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"3541:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3566:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3558:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8006,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:27","typeDescriptions":{}}},"id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3541:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206172746973742061646472657373","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3570:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""},"value":"Invalid artist address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""}],"id":8004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3533:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8013,"nodeType":"ExpressionStatement","src":"3533:62:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8015,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"3614:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8016,"name":"craftiaxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"3631:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3614:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172746973742063616e6e6f742062652043726166746961782061646472657373","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3648:35:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5","typeString":"literal_string \"Artist cannot be Craftiax address\""},"value":"Artist cannot be Craftiax address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5","typeString":"literal_string \"Artist cannot be Craftiax address\""}],"id":8014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3606:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3606:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8020,"nodeType":"ExpressionStatement","src":"3606:78:27"},{"condition":{"baseExpression":{"id":8021,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"3757:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8023,"indexExpression":{"id":8022,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"3774:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3757:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8041,"nodeType":"Block","src":"3897:99:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3920:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3924:5:27","memberName":"value","nodeType":"MemberAccess","src":"3920:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8036,"name":"generalMaxPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"3933:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3920:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420657863656564732067656e6572616c206c696d6974","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3952:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152","typeString":"literal_string \"Payment exceeds general limit\""},"value":"Payment exceeds general limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152","typeString":"literal_string \"Payment exceeds general limit\""}],"id":8033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3912:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:72:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8040,"nodeType":"ExpressionStatement","src":"3912:72:27"}]},"id":8042,"nodeType":"IfStatement","src":"3753:243:27","trueBody":{"id":8032,"nodeType":"Block","src":"3790:101:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3813:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3817:5:27","memberName":"value","nodeType":"MemberAccess","src":"3813:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8027,"name":"verifiedMaxPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"3826:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e742065786365656473207665726966696564206c696d6974","id":8029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04","typeString":"literal_string \"Payment exceeds verified limit\""},"value":"Payment exceeds verified limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04","typeString":"literal_string \"Payment exceeds verified limit\""}],"id":8024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3805:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8031,"nodeType":"ExpressionStatement","src":"3805:74:27"}]}},{"assignments":[8044],"declarations":[{"constant":false,"id":8044,"mutability":"mutable","name":"craftiaxFee","nameLocation":"4016:11:27","nodeType":"VariableDeclaration","scope":8103,"src":"4008:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8052,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4031:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4035:5:27","memberName":"value","nodeType":"MemberAccess","src":"4031:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8047,"name":"craftiaxFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"4043:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4031:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4030:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4068:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4030:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4008:63:27"},{"assignments":[8054],"declarations":[{"constant":false,"id":8054,"mutability":"mutable","name":"artistPayment","nameLocation":"4090:13:27","nodeType":"VariableDeclaration","scope":8103,"src":"4082:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4082:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8059,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4106:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4110:5:27","memberName":"value","nodeType":"MemberAccess","src":"4106:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8057,"name":"craftiaxFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"4118:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4106:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4082:47:27"},{"assignments":[8061,null],"declarations":[{"constant":false,"id":8061,"mutability":"mutable","name":"successArtist","nameLocation":"4220:13:27","nodeType":"VariableDeclaration","scope":8103,"src":"4215:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8060,"name":"bool","nodeType":"ElementaryTypeName","src":"4215:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8071,"initialValue":{"arguments":[{"hexValue":"","id":8069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4313:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":8064,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"4247:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4239:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8062,"name":"address","nodeType":"ElementaryTypeName","src":"4239:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4239:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:4:27","memberName":"call","nodeType":"MemberAccess","src":"4239:27:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8067,"name":"artistPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4288:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4239:73:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4239:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4214:102:27"},{"expression":{"arguments":[{"id":8073,"name":"successArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"4335:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64207061796d656e7420746f20617274697374","id":8074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4350:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9","typeString":"literal_string \"Failed to send payment to artist\""},"value":"Failed to send payment to artist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9","typeString":"literal_string \"Failed to send payment to artist\""}],"id":8072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4327:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4327:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8076,"nodeType":"ExpressionStatement","src":"4327:58:27"},{"assignments":[8078,null],"declarations":[{"constant":false,"id":8078,"mutability":"mutable","name":"successCraftiax","nameLocation":"4446:15:27","nodeType":"VariableDeclaration","scope":8103,"src":"4441:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8077,"name":"bool","nodeType":"ElementaryTypeName","src":"4441:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8088,"initialValue":{"arguments":[{"hexValue":"","id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4541:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":8081,"name":"craftiaxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"4475:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4467:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8079,"name":"address","nodeType":"ElementaryTypeName","src":"4467:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4467:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4492:4:27","memberName":"call","nodeType":"MemberAccess","src":"4467:29:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8084,"name":"craftiaxFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"4518:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4467:73:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4467:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4440:104:27"},{"expression":{"arguments":[{"id":8090,"name":"successCraftiax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"4563:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64207061796d656e7420746f204372616674696178","id":8091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4580:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2","typeString":"literal_string \"Failed to send payment to Craftiax\""},"value":"Failed to send payment to Craftiax"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2","typeString":"literal_string \"Failed to send payment to Craftiax\""}],"id":8089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4555:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8093,"nodeType":"ExpressionStatement","src":"4555:62:27"},{"eventCall":{"arguments":[{"id":8095,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"4666:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8096,"name":"artistPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4695:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8097,"name":"craftiaxFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"4724:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8098,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"4750:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8100,"indexExpression":{"id":8099,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"4767:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4750:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8094,"name":"PaymentProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"4635:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4635:157:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8102,"nodeType":"EmitStatement","src":"4630:162:27"}]},"functionSelector":"f8231848","id":8104,"implemented":true,"kind":"function","modifiers":[{"id":7945,"kind":"modifierInvocation","modifierName":{"id":7944,"name":"nonReentrant","nameLocations":["2882:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":2781,"src":"2882:12:27"},"nodeType":"ModifierInvocation","src":"2882:12:27"}],"name":"payArtist","nameLocation":"2756:9:27","nodeType":"FunctionDefinition","parameters":{"id":7943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7938,"mutability":"mutable","name":"artistAddress","nameLocation":"2784:13:27","nodeType":"VariableDeclaration","scope":8104,"src":"2776:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7937,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7940,"mutability":"mutable","name":"deadline","nameLocation":"2816:8:27","nodeType":"VariableDeclaration","scope":8104,"src":"2808:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2808:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7942,"mutability":"mutable","name":"signature","nameLocation":"2848:9:27","nodeType":"VariableDeclaration","scope":8104,"src":"2835:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7941,"name":"bytes","nodeType":"ElementaryTypeName","src":"2835:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2765:99:27"},"returnParameters":{"id":7946,"nodeType":"ParameterList","parameters":[],"src":"2895:0:27"},"scope":8398,"src":"2747:2053:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8136,"nodeType":"Block","src":"4878:234:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8112,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"4897:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4919:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4911:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8113,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:27","typeDescriptions":{}}},"id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4897:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":8111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4889:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8120,"nodeType":"ExpressionStatement","src":"4889:52:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8122,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"4960:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8123,"name":"craftiaxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"4974:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4960:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616d6520616464726573732070726f7669646564","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4991:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84","typeString":"literal_string \"Same address provided\""},"value":"Same address provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84","typeString":"literal_string \"Same address provided\""}],"id":8121,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4952:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8127,"nodeType":"ExpressionStatement","src":"4952:63:27"},{"expression":{"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8128,"name":"craftiaxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"5026:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8129,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"5044:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5026:28:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8131,"nodeType":"ExpressionStatement","src":"5026:28:27"},{"eventCall":{"arguments":[{"id":8133,"name":"newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"5093:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8132,"name":"CraftiaxAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"5070:22:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8135,"nodeType":"EmitStatement","src":"5065:39:27"}]},"functionSelector":"790e8739","id":8137,"implemented":true,"kind":"function","modifiers":[{"id":8109,"kind":"modifierInvocation","modifierName":{"id":8108,"name":"onlyOwner","nameLocations":["4868:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4868:9:27"},"nodeType":"ModifierInvocation","src":"4868:9:27"}],"name":"updateCraftiaxAddress","nameLocation":"4817:21:27","nodeType":"FunctionDefinition","parameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"newAddress","nameLocation":"4847:10:27","nodeType":"VariableDeclaration","scope":8137,"src":"4839:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8105,"name":"address","nodeType":"ElementaryTypeName","src":"4839:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4838:20:27"},"returnParameters":{"id":8110,"nodeType":"ParameterList","parameters":[],"src":"4878:0:27"},"scope":8398,"src":"4808:304:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8159,"nodeType":"Block","src":"5184:162:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8145,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"5203:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8146,"name":"MAX_FEE_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5213:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5203:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652065786365656473206d6178696d756d20616c6c6f776564","id":8148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5233:29:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85","typeString":"literal_string \"Fee exceeds maximum allowed\""},"value":"Fee exceeds maximum allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85","typeString":"literal_string \"Fee exceeds maximum allowed\""}],"id":8144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5195:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8150,"nodeType":"ExpressionStatement","src":"5195:68:27"},{"expression":{"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8151,"name":"craftiaxFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"5274:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8152,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"5298:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5274:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8154,"nodeType":"ExpressionStatement","src":"5274:30:27"},{"eventCall":{"arguments":[{"id":8156,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"5331:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8155,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"5320:10:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8158,"nodeType":"EmitStatement","src":"5315:23:27"}]},"functionSelector":"6cad3fb0","id":8160,"implemented":true,"kind":"function","modifiers":[{"id":8142,"kind":"modifierInvocation","modifierName":{"id":8141,"name":"onlyOwner","nameLocations":["5174:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5174:9:27"},"nodeType":"ModifierInvocation","src":"5174:9:27"}],"name":"updateFeePercentage","nameLocation":"5129:19:27","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"newFee","nameLocation":"5157:6:27","nodeType":"VariableDeclaration","scope":8160,"src":"5149:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:16:27"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[],"src":"5184:0:27"},"scope":8398,"src":"5120:226:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8199,"nodeType":"Block","src":"5512:295:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8170,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"5531:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5548:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8171,"name":"address","nodeType":"ElementaryTypeName","src":"5548:7:27","typeDescriptions":{}}},"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5548:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5531:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206172746973742061646472657373","id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5560:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""},"value":"Invalid artist address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""}],"id":8169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5523:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8178,"nodeType":"ExpressionStatement","src":"5523:62:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8180,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5604:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8182,"indexExpression":{"id":8181,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"5621:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5604:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8183,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"5639:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5604:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746174757320616c726561647920736574","id":8185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5647:20:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a","typeString":"literal_string \"Status already set\""},"value":"Status already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a","typeString":"literal_string \"Status already set\""}],"id":8179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5596:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:72:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8187,"nodeType":"ExpressionStatement","src":"5596:72:27"},{"expression":{"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8188,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5689:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8190,"indexExpression":{"id":8189,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"5706:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5689:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8191,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"5723:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5689:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8193,"nodeType":"ExpressionStatement","src":"5689:40:27"},{"eventCall":{"arguments":[{"id":8195,"name":"artistAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"5777:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8196,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"5792:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8194,"name":"ArtistVerificationStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"5745:31:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5745:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8198,"nodeType":"EmitStatement","src":"5740:59:27"}]},"functionSelector":"fb14a834","id":8200,"implemented":true,"kind":"function","modifiers":[{"id":8167,"kind":"modifierInvocation","modifierName":{"id":8166,"name":"onlyOwner","nameLocations":["5496:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5496:9:27"},"nodeType":"ModifierInvocation","src":"5496:9:27"}],"name":"setVerificationStatus","nameLocation":"5409:21:27","nodeType":"FunctionDefinition","parameters":{"id":8165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8162,"mutability":"mutable","name":"artistAddress","nameLocation":"5439:13:27","nodeType":"VariableDeclaration","scope":8200,"src":"5431:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8161,"name":"address","nodeType":"ElementaryTypeName","src":"5431:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8164,"mutability":"mutable","name":"status","nameLocation":"5459:6:27","nodeType":"VariableDeclaration","scope":8200,"src":"5454:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8163,"name":"bool","nodeType":"ElementaryTypeName","src":"5454:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5430:36:27"},"returnParameters":{"id":8168,"nodeType":"ParameterList","parameters":[],"src":"5512:0:27"},"scope":8398,"src":"5400:407:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8259,"nodeType":"Block","src":"5934:354:27","statements":[{"body":{"id":8257,"nodeType":"Block","src":"5990:291:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8222,"name":"artists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"6013:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8224,"indexExpression":{"id":8223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"6021:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6013:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6035:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6027:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8225,"name":"address","nodeType":"ElementaryTypeName","src":"6027:7:27","typeDescriptions":{}}},"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6027:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6013:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206172746973742061646472657373","id":8230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6039:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""},"value":"Invalid artist address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","typeString":"literal_string \"Invalid artist address\""}],"id":8221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6005:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8232,"nodeType":"ExpressionStatement","src":"6005:59:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8233,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"6083:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8237,"indexExpression":{"baseExpression":{"id":8234,"name":"artists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"6100:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8236,"indexExpression":{"id":8235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"6108:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6083:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8238,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"6115:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6083:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8256,"nodeType":"IfStatement","src":"6079:191:27","trueBody":{"id":8255,"nodeType":"Block","src":"6123:147:27","statements":[{"expression":{"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8240,"name":"isVerifiedArtist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"6142:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8244,"indexExpression":{"baseExpression":{"id":8241,"name":"artists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"6159:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8243,"indexExpression":{"id":8242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"6167:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6159:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6142:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8245,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"6173:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6142:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8247,"nodeType":"ExpressionStatement","src":"6142:37:27"},{"eventCall":{"arguments":[{"baseExpression":{"id":8249,"name":"artists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"6235:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8251,"indexExpression":{"id":8250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"6243:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6235:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8252,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"6247:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8248,"name":"ArtistVerificationStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"6203:31:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8254,"nodeType":"EmitStatement","src":"6198:56:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"5965:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8215,"name":"artists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"5969:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5977:6:27","memberName":"length","nodeType":"MemberAccess","src":"5969:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5965:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8258,"initializationExpression":{"assignments":[8211],"declarations":[{"constant":false,"id":8211,"mutability":"mutable","name":"i","nameLocation":"5958:1:27","nodeType":"VariableDeclaration","scope":8258,"src":"5950:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5950:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8213,"initialValue":{"hexValue":"30","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5962:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5950:13:27"},"loopExpression":{"expression":{"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5985:3:27","subExpression":{"id":8218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"5985:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8220,"nodeType":"ExpressionStatement","src":"5985:3:27"},"nodeType":"ForStatement","src":"5945:336:27"}]},"functionSelector":"511e2fbf","id":8260,"implemented":true,"kind":"function","modifiers":[{"id":8208,"kind":"modifierInvocation","modifierName":{"id":8207,"name":"onlyOwner","nameLocations":["5919:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5919:9:27"},"nodeType":"ModifierInvocation","src":"5919:9:27"}],"name":"setVerificationStatusBatch","nameLocation":"5824:26:27","nodeType":"FunctionDefinition","parameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8203,"mutability":"mutable","name":"artists","nameLocation":"5870:7:27","nodeType":"VariableDeclaration","scope":8260,"src":"5851:26:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8201,"name":"address","nodeType":"ElementaryTypeName","src":"5851:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8202,"nodeType":"ArrayTypeName","src":"5851:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8205,"mutability":"mutable","name":"status","nameLocation":"5884:6:27","nodeType":"VariableDeclaration","scope":8260,"src":"5879:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8204,"name":"bool","nodeType":"ElementaryTypeName","src":"5879:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5850:41:27"},"returnParameters":{"id":8209,"nodeType":"ParameterList","parameters":[],"src":"5934:0:27"},"scope":8398,"src":"5815:473:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8310,"nodeType":"Block","src":"6494:507:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8272,"name":"newGeneralMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"6513:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6529:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6513:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47656e6572616c206d696e206d7573742062652067726561746572207468616e2030","id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6532:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2","typeString":"literal_string \"General min must be greater than 0\""},"value":"General min must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2","typeString":"literal_string \"General min must be greater than 0\""}],"id":8271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6505:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8277,"nodeType":"ExpressionStatement","src":"6505:64:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8279,"name":"newGeneralMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"6588:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8280,"name":"newGeneralMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"6604:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6588:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47656e6572616c206d6178206d7573742062652067726561746572207468616e206d696e","id":8282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6619:38:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f","typeString":"literal_string \"General max must be greater than min\""},"value":"General max must be greater than min"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f","typeString":"literal_string \"General max must be greater than min\""}],"id":8278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6580:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8284,"nodeType":"ExpressionStatement","src":"6580:78:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8286,"name":"newVerifiedMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"6677:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8287,"name":"newGeneralMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"6694:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6677:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5665726966696564206d6178206d7573742062652067726561746572207468616e2067656e6572616c206d6178","id":8289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6709:47:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7","typeString":"literal_string \"Verified max must be greater than general max\""},"value":"Verified max must be greater than general max"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7","typeString":"literal_string \"Verified max must be greater than general max\""}],"id":8285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6669:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:88:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8291,"nodeType":"ExpressionStatement","src":"6669:88:27"},{"expression":{"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8292,"name":"generalMinPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"6778:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8293,"name":"newGeneralMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"6798:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8295,"nodeType":"ExpressionStatement","src":"6778:33:27"},{"expression":{"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8296,"name":"generalMaxPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"6822:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8297,"name":"newGeneralMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"6842:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6822:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8299,"nodeType":"ExpressionStatement","src":"6822:33:27"},{"expression":{"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8300,"name":"verifiedMaxPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"6866:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8301,"name":"newVerifiedMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"6887:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6866:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8303,"nodeType":"ExpressionStatement","src":"6866:35:27"},{"eventCall":{"arguments":[{"id":8305,"name":"newGeneralMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"6948:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8306,"name":"newGeneralMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"6963:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8307,"name":"newVerifiedMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"6978:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8304,"name":"PaymentLimitsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"6927:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8309,"nodeType":"EmitStatement","src":"6922:71:27"}]},"functionSelector":"82948fe1","id":8311,"implemented":true,"kind":"function","modifiers":[{"id":8269,"kind":"modifierInvocation","modifierName":{"id":8268,"name":"onlyOwner","nameLocations":["6484:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6484:9:27"},"nodeType":"ModifierInvocation","src":"6484:9:27"}],"name":"updatePaymentLimits","nameLocation":"6351:19:27","nodeType":"FunctionDefinition","parameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8262,"mutability":"mutable","name":"newGeneralMin","nameLocation":"6389:13:27","nodeType":"VariableDeclaration","scope":8311,"src":"6381:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8261,"name":"uint256","nodeType":"ElementaryTypeName","src":"6381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8264,"mutability":"mutable","name":"newGeneralMax","nameLocation":"6421:13:27","nodeType":"VariableDeclaration","scope":8311,"src":"6413:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8263,"name":"uint256","nodeType":"ElementaryTypeName","src":"6413:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8266,"mutability":"mutable","name":"newVerifiedMax","nameLocation":"6453:14:27","nodeType":"VariableDeclaration","scope":8311,"src":"6445:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6445:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6370:104:27"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[],"src":"6494:0:27"},"scope":8398,"src":"6342:659:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8341,"nodeType":"Block","src":"7126:214:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8319,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"7145:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7160:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8320,"name":"address","nodeType":"ElementaryTypeName","src":"7160:7:27","typeDescriptions":{}}},"id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7145:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642076657269666965722061646472657373","id":8325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7172:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","typeString":"literal_string \"Invalid verifier address\""},"value":"Invalid verifier address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","typeString":"literal_string \"Invalid verifier address\""}],"id":8318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7137:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8327,"nodeType":"ExpressionStatement","src":"7137:62:27"},{"assignments":[8329],"declarations":[{"constant":false,"id":8329,"mutability":"mutable","name":"oldVerifier","nameLocation":"7218:11:27","nodeType":"VariableDeclaration","scope":8341,"src":"7210:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8328,"name":"address","nodeType":"ElementaryTypeName","src":"7210:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8331,"initialValue":{"id":8330,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7904,"src":"7232:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7210:31:27"},{"expression":{"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8332,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7904,"src":"7252:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8333,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"7264:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8335,"nodeType":"ExpressionStatement","src":"7252:23:27"},{"eventCall":{"arguments":[{"id":8337,"name":"oldVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"7307:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8338,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"7320:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8336,"name":"VerifierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"7291:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7291:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8340,"nodeType":"EmitStatement","src":"7286:46:27"}]},"functionSelector":"97fc007c","id":8342,"implemented":true,"kind":"function","modifiers":[{"id":8316,"kind":"modifierInvocation","modifierName":{"id":8315,"name":"onlyOwner","nameLocations":["7116:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7116:9:27"},"nodeType":"ModifierInvocation","src":"7116:9:27"}],"name":"updateVerifier","nameLocation":"7071:14:27","nodeType":"FunctionDefinition","parameters":{"id":8314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8313,"mutability":"mutable","name":"newVerifier","nameLocation":"7094:11:27","nodeType":"VariableDeclaration","scope":8342,"src":"7086:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8312,"name":"address","nodeType":"ElementaryTypeName","src":"7086:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7085:21:27"},"returnParameters":{"id":8317,"nodeType":"ParameterList","parameters":[],"src":"7126:0:27"},"scope":8398,"src":"7062:278:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8353,"nodeType":"Block","src":"7409:40:27","statements":[{"expression":{"baseExpression":{"id":8349,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"7427:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8351,"indexExpression":{"id":8350,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"7435:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7427:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8348,"id":8352,"nodeType":"Return","src":"7420:21:27"}]},"functionSelector":"7ecebe00","id":8354,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"7357:6:27","nodeType":"FunctionDefinition","parameters":{"id":8345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8344,"mutability":"mutable","name":"owner","nameLocation":"7372:5:27","nodeType":"VariableDeclaration","scope":8354,"src":"7364:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8343,"name":"address","nodeType":"ElementaryTypeName","src":"7364:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7363:15:27"},"returnParameters":{"id":8348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8354,"src":"7400:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7400:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7399:9:27"},"scope":8398,"src":"7348:101:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8392,"nodeType":"Block","src":"7515:213:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8362,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"7534:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7542:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8363,"name":"address","nodeType":"ElementaryTypeName","src":"7542:7:27","typeDescriptions":{}}},"id":8366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7542:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7534:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420757365722061646472657373","id":8368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7554:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","typeString":"literal_string \"Invalid user address\""},"value":"Invalid user address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","typeString":"literal_string \"Invalid user address\""}],"id":8361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7526:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7526:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8370,"nodeType":"ExpressionStatement","src":"7526:51:27"},{"assignments":[8372],"declarations":[{"constant":false,"id":8372,"mutability":"mutable","name":"currentNonce","nameLocation":"7596:12:27","nodeType":"VariableDeclaration","scope":8392,"src":"7588:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7588:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8376,"initialValue":{"baseExpression":{"id":8373,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"7611:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8375,"indexExpression":{"id":8374,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"7619:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7611:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7588:36:27"},{"expression":{"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8377,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"7635:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8379,"indexExpression":{"id":8378,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"7643:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7635:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":8382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7656:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8381,"name":"uint256","nodeType":"ElementaryTypeName","src":"7656:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7651:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7651:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7665:3:27","memberName":"max","nodeType":"MemberAccess","src":"7651:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7635:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8386,"nodeType":"ExpressionStatement","src":"7635:33:27"},{"eventCall":{"arguments":[{"id":8388,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"7701:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8389,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"7707:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8387,"name":"NonceInvalidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"7684:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8391,"nodeType":"EmitStatement","src":"7679:41:27"}]},"functionSelector":"53a78064","id":8393,"implemented":true,"kind":"function","modifiers":[{"id":8359,"kind":"modifierInvocation","modifierName":{"id":8358,"name":"onlyOwner","nameLocations":["7505:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7505:9:27"},"nodeType":"ModifierInvocation","src":"7505:9:27"}],"name":"invalidateNonce","nameLocation":"7466:15:27","nodeType":"FunctionDefinition","parameters":{"id":8357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8356,"mutability":"mutable","name":"user","nameLocation":"7490:4:27","nodeType":"VariableDeclaration","scope":8393,"src":"7482:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8355,"name":"address","nodeType":"ElementaryTypeName","src":"7482:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7481:14:27"},"returnParameters":{"id":8360,"nodeType":"ParameterList","parameters":[],"src":"7515:0:27"},"scope":8398,"src":"7457:271:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8396,"nodeType":"Block","src":"7763:2:27","statements":[]},"id":8397,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8394,"nodeType":"ParameterList","parameters":[],"src":"7743:2:27"},"returnParameters":{"id":8395,"nodeType":"ParameterList","parameters":[],"src":"7763:0:27"},"scope":8398,"src":"7736:29:27","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8399,"src":"306:7462:27","usedErrors":[13,18,2762,2831,2833,3619,3624,3629],"usedEvents":[24,152,7859,7863,7867,7873,7881,7887,7893]}],"src":"33:7739:27"},"id":27},"contracts/EventTicketContract.sol":{"ast":{"absolutePath":"contracts/EventTicketContract.sol","exportedSymbols":{"Arrays":[2517],"Context":[2579],"ERC1155":[1226],"ERC1155Utils":[1561],"ERC165":[4281],"EventLib":[8607],"EventStructs":[8644],"EventTicketContract":[8535],"IERC1155":[1349],"IERC1155Errors":[309],"IERC1155MetadataURI":[1407],"IERC165":[4293],"IERC20":[1639],"Ownable":[147],"Pausable":[2748],"ReentrancyGuard":[2817]},"id":8536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8400,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":8401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":1227,"src":"61:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":148,"src":"122:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":2818,"src":"176:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":2749,"src":"237:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":1640,"src":"291:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/EventStructs.sol","file":"./libraries/EventStructs.sol","id":8406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":8645,"src":"349:38:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/EventLib.sol","file":"./libraries/EventLib.sol","id":8407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8536,"sourceUnit":8608,"src":"389:34:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8408,"name":"ERC1155","nameLocations":["459:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"459:7:28"},"id":8409,"nodeType":"InheritanceSpecifier","src":"459:7:28"},{"baseName":{"id":8410,"name":"Ownable","nameLocations":["468:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"468:7:28"},"id":8411,"nodeType":"InheritanceSpecifier","src":"468:7:28"},{"baseName":{"id":8412,"name":"ReentrancyGuard","nameLocations":["477:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"477:15:28"},"id":8413,"nodeType":"InheritanceSpecifier","src":"477:15:28"},{"baseName":{"id":8414,"name":"Pausable","nameLocations":["494:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":2748,"src":"494:8:28"},"id":8415,"nodeType":"InheritanceSpecifier","src":"494:8:28"}],"canonicalName":"EventTicketContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8535,"linearizedBaseContracts":[8535,2748,2817,147,1226,309,1407,1349,4281,4293,2579],"name":"EventTicketContract","nameLocation":"436:19:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8417,"libraryName":{"id":8416,"name":"EventLib","nameLocations":["516:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8607,"src":"516:8:28"},"nodeType":"UsingForDirective","src":"510:21:28"},{"constant":false,"functionSelector":"f897a22b","id":8420,"mutability":"immutable","name":"usdToken","nameLocation":"592:8:28","nodeType":"VariableDeclaration","scope":8535,"src":"568:32:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"},"typeName":{"id":8419,"nodeType":"UserDefinedTypeName","pathNode":{"id":8418,"name":"IERC20","nameLocations":["568:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"568:6:28"},"referencedDeclaration":1639,"src":"568:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"id":8422,"mutability":"immutable","name":"MAX_TIERS","nameLocation":"703:9:28","nodeType":"VariableDeclaration","scope":8535,"src":"677:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8421,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8424,"mutability":"immutable","name":"MIN_PRICE","nameLocation":"745:9:28","nodeType":"VariableDeclaration","scope":8535,"src":"719:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8423,"name":"uint256","nodeType":"ElementaryTypeName","src":"719:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8426,"mutability":"immutable","name":"MAX_PRICE","nameLocation":"787:9:28","nodeType":"VariableDeclaration","scope":8535,"src":"761:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8425,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"7130dfc9","id":8428,"mutability":"mutable","name":"RATE_LIMIT_WINDOW","nameLocation":"853:17:28","nodeType":"VariableDeclaration","scope":8535,"src":"838:32:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8427,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e39eb109","id":8430,"mutability":"mutable","name":"MAX_MINTS_PER_WINDOW","nameLocation":"892:20:28","nodeType":"VariableDeclaration","scope":8535,"src":"877:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8429,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9970ea80","id":8432,"mutability":"mutable","name":"MIN_TIME_BETWEEN_MINTS","nameLocation":"934:22:28","nodeType":"VariableDeclaration","scope":8535,"src":"919:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8431,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":8465,"nodeType":"Block","src":"1097:236:28","statements":[{"expression":{"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"usdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"1108:8:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8446,"name":"_usdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"1126:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8445,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1119:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1639_$","typeString":"type(contract IERC20)"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"}},"src":"1108:28:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"}},"id":8449,"nodeType":"ExpressionStatement","src":"1108:28:28"},{"expression":{"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8450,"name":"MAX_TIERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8422,"src":"1200:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":8451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1212:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1200:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8453,"nodeType":"ExpressionStatement","src":"1200:14:28"},{"expression":{"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8454,"name":"MIN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8424,"src":"1225:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"302e30303031","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1237:12:28","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"},"value":"0.0001"},"src":"1225:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8457,"nodeType":"ExpressionStatement","src":"1225:24:28"},{"expression":{"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8458,"name":"MAX_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"1260:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":8459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:9:28","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"100"},"src":"1260:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8461,"nodeType":"ExpressionStatement","src":"1260:21:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8462,"name":"_initializeRateLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"1302:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8464,"nodeType":"ExpressionStatement","src":"1302:23:28"}]},"id":8466,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":8437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1073:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":8438,"kind":"baseConstructorSpecifier","modifierName":{"id":8436,"name":"ERC1155","nameLocations":["1065:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"1065:7:28"},"nodeType":"ModifierInvocation","src":"1065:11:28"},{"arguments":[{"expression":{"id":8440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1085:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1089:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1085:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8442,"kind":"baseConstructorSpecifier","modifierName":{"id":8439,"name":"Ownable","nameLocations":["1077:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1077:7:28"},"nodeType":"ModifierInvocation","src":"1077:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"_usdToken","nameLocation":"1048:9:28","nodeType":"VariableDeclaration","scope":8466,"src":"1040:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8433,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:35:28"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[],"src":"1097:0:28"},"scope":8535,"src":"1018:315:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8481,"nodeType":"Block","src":"1434:127:28","statements":[{"expression":{"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8469,"name":"RATE_LIMIT_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"1445:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1465:7:28","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"1445:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8472,"nodeType":"ExpressionStatement","src":"1445:27:28"},{"expression":{"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8473,"name":"MAX_MINTS_PER_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"1483:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":8474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1506:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1483:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8476,"nodeType":"ExpressionStatement","src":"1483:25:28"},{"expression":{"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8477,"name":"MIN_TIME_BETWEEN_MINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8432,"src":"1519:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":8478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1544:9:28","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"src":"1519:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8480,"nodeType":"ExpressionStatement","src":"1519:34:28"}]},"id":8482,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeRateLimits","nameLocation":"1402:21:28","nodeType":"FunctionDefinition","parameters":{"id":8467,"nodeType":"ParameterList","parameters":[],"src":"1423:2:28"},"returnParameters":{"id":8468,"nodeType":"ParameterList","parameters":[],"src":"1434:0:28"},"scope":8535,"src":"1393:168:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8533,"nodeType":"Block","src":"1849:370:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8494,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"1864:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8495,"name":"EventStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"1876:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EventStructs_$8644_$","typeString":"type(library EventStructs)"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:15:28","memberName":"PaymentCurrency","nodeType":"MemberAccess","referencedDeclaration":8613,"src":"1876:28:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PaymentCurrency_$8613_$","typeString":"type(enum EventStructs.PaymentCurrency)"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1905:3:28","memberName":"USD","nodeType":"MemberAccess","referencedDeclaration":8611,"src":"1876:32:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"src":"1864:44:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8510,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"2006:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8511,"name":"EventStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"2018:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EventStructs_$8644_$","typeString":"type(library EventStructs)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2031:15:28","memberName":"PaymentCurrency","nodeType":"MemberAccess","referencedDeclaration":8613,"src":"2018:28:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PaymentCurrency_$8613_$","typeString":"type(enum EventStructs.PaymentCurrency)"}},"id":8513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2047:3:28","memberName":"ETH","nodeType":"MemberAccess","referencedDeclaration":8610,"src":"2018:32:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"src":"2006:44:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"},"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8515,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"2075:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8516,"name":"EventStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"2087:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EventStructs_$8644_$","typeString":"type(library EventStructs)"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2100:15:28","memberName":"PaymentCurrency","nodeType":"MemberAccess","referencedDeclaration":8613,"src":"2087:28:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PaymentCurrency_$8613_$","typeString":"type(enum EventStructs.PaymentCurrency)"}},"id":8518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2116:4:28","memberName":"BASE","nodeType":"MemberAccess","referencedDeclaration":8612,"src":"2087:33:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"src":"2075:45:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2006:114:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8527,"nodeType":"IfStatement","src":"2002:173:28","trueBody":{"id":8526,"nodeType":"Block","src":"2122:53:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8521,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2144:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2148:5:28","memberName":"value","nodeType":"MemberAccess","src":"2144:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"2157:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2144:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8493,"id":8525,"nodeType":"Return","src":"2137:26:28"}]}},"id":8528,"nodeType":"IfStatement","src":"1860:315:28","trueBody":{"id":8509,"nodeType":"Block","src":"1910:86:28","statements":[{"expression":{"arguments":[{"id":8501,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"1954:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8504,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1970:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_EventTicketContract_$8535","typeString":"contract EventTicketContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EventTicketContract_$8535","typeString":"contract EventTicketContract"}],"id":8503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1962:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8502,"name":"address","nodeType":"ElementaryTypeName","src":"1962:7:28","typeDescriptions":{}}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"1977:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8499,"name":"usdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"1932:8:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1639","typeString":"contract IERC20"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1941:12:28","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"1932:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8493,"id":8508,"nodeType":"Return","src":"1925:59:28"}]}},{"expression":{"arguments":[{"hexValue":"496e76616c69642063757272656e6379","id":8530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2192:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2718335151cbdb3bfd598f57fb57a5e4c9043beca709187ef6ada7a9c211c55d","typeString":"literal_string \"Invalid currency\""},"value":"Invalid currency"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2718335151cbdb3bfd598f57fb57a5e4c9043beca709187ef6ada7a9c211c55d","typeString":"literal_string \"Invalid currency\""}],"id":8529,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2185:6:28","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8532,"nodeType":"ExpressionStatement","src":"2185:26:28"}]},"id":8534,"implemented":true,"kind":"function","modifiers":[],"name":"_processPayment","nameLocation":"1704:15:28","nodeType":"FunctionDefinition","parameters":{"id":8490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"amount","nameLocation":"1738:6:28","nodeType":"VariableDeclaration","scope":8534,"src":"1730:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8487,"mutability":"mutable","name":"currency","nameLocation":"1784:8:28","nodeType":"VariableDeclaration","scope":8534,"src":"1755:37:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"},"typeName":{"id":8486,"nodeType":"UserDefinedTypeName","pathNode":{"id":8485,"name":"EventStructs.PaymentCurrency","nameLocations":["1755:12:28","1768:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":8613,"src":"1755:28:28"},"referencedDeclaration":8613,"src":"1755:28:28","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"visibility":"internal"},{"constant":false,"id":8489,"mutability":"mutable","name":"sender","nameLocation":"1811:6:28","nodeType":"VariableDeclaration","scope":8534,"src":"1803:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8488,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1719:105:28"},"returnParameters":{"id":8493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8534,"src":"1843:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8491,"name":"bool","nodeType":"ElementaryTypeName","src":"1843:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1842:6:28"},"scope":8535,"src":"1695:524:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8536,"src":"427:1795:28","usedErrors":[13,18,274,279,284,291,296,301,308,2653,2656,2762],"usedEvents":[24,1246,1261,1270,1277,2645,2650]}],"src":"33:2189:28"},"id":28},"contracts/libraries/EventLib.sol":{"ast":{"absolutePath":"contracts/libraries/EventLib.sol","exportedSymbols":{"EventLib":[8607],"EventStructs":[8644]},"id":8608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8537,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:29"},{"absolutePath":"contracts/libraries/EventStructs.sol","file":"./EventStructs.sol","id":8538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8608,"sourceUnit":8645,"src":"61:28:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EventLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8607,"linearizedBaseContracts":[8607],"name":"EventLib","nameLocation":"101:8:29","nodeType":"ContractDefinition","nodes":[{"errorSelector":"00bfc921","id":8540,"name":"InvalidPrice","nameLocation":"123:12:29","nodeType":"ErrorDefinition","parameters":{"id":8539,"nodeType":"ParameterList","parameters":[],"src":"135:2:29"},"src":"117:21:29"},{"errorSelector":"524f409b","id":8542,"name":"InvalidQuantity","nameLocation":"150:15:29","nodeType":"ErrorDefinition","parameters":{"id":8541,"nodeType":"ParameterList","parameters":[],"src":"165:2:29"},"src":"144:24:29"},{"errorSelector":"c2f56935","id":8544,"name":"InvalidTierLength","nameLocation":"180:17:29","nodeType":"ErrorDefinition","parameters":{"id":8543,"nodeType":"ParameterList","parameters":[],"src":"197:2:29"},"src":"174:26:29"},{"errorSelector":"4659b7ce","id":8546,"name":"EventAlreadyExists","nameLocation":"212:18:29","nodeType":"ErrorDefinition","parameters":{"id":8545,"nodeType":"ParameterList","parameters":[],"src":"230:2:29"},"src":"206:27:29"},{"errorSelector":"344fd586","id":8548,"name":"UnauthorizedAccess","nameLocation":"245:18:29","nodeType":"ErrorDefinition","parameters":{"id":8547,"nodeType":"ParameterList","parameters":[],"src":"263:2:29"},"src":"239:27:29"},{"body":{"id":8588,"nodeType":"Block","src":"462:228:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8562,"name":"tierIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"477:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"485:6:29","memberName":"length","nodeType":"MemberAccess","src":"477:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8564,"name":"maxTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"494:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"477:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8569,"nodeType":"IfStatement","src":"473:57:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8566,"name":"InvalidTierLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"511:17:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"511:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8568,"nodeType":"RevertStatement","src":"504:26:29"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8570,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"545:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"552:6:29","memberName":"length","nodeType":"MemberAccess","src":"545:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8572,"name":"maxQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"562:13:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"576:6:29","memberName":"length","nodeType":"MemberAccess","src":"562:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"545:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8578,"nodeType":"IfStatement","src":"541:67:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8575,"name":"InvalidQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"591:15:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"591:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8577,"nodeType":"RevertStatement","src":"584:24:29"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8579,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"623:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"630:6:29","memberName":"length","nodeType":"MemberAccess","src":"623:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8581,"name":"tierIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"640:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"648:6:29","memberName":"length","nodeType":"MemberAccess","src":"640:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"623:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8587,"nodeType":"IfStatement","src":"619:63:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8584,"name":"InvalidTierLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"663:17:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"663:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8586,"nodeType":"RevertStatement","src":"656:26:29"}}]},"id":8589,"implemented":true,"kind":"function","modifiers":[],"name":"validateEventCreation","nameLocation":"283:21:29","nodeType":"FunctionDefinition","parameters":{"id":8560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8551,"mutability":"mutable","name":"tierIds","nameLocation":"331:7:29","nodeType":"VariableDeclaration","scope":8589,"src":"315:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8549,"name":"string","nodeType":"ElementaryTypeName","src":"315:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8550,"nodeType":"ArrayTypeName","src":"315:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8554,"mutability":"mutable","name":"prices","nameLocation":"366:6:29","nodeType":"VariableDeclaration","scope":8589,"src":"349:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8552,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8553,"nodeType":"ArrayTypeName","src":"349:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8557,"mutability":"mutable","name":"maxQuantities","nameLocation":"400:13:29","nodeType":"VariableDeclaration","scope":8589,"src":"383:30:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8555,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8556,"nodeType":"ArrayTypeName","src":"383:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8559,"mutability":"mutable","name":"maxTiers","nameLocation":"432:8:29","nodeType":"VariableDeclaration","scope":8589,"src":"424:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8558,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"304:143:29"},"returnParameters":{"id":8561,"nodeType":"ParameterList","parameters":[],"src":"462:0:29"},"scope":8607,"src":"274:416:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8605,"nodeType":"Block","src":"820:53:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8598,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"839:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8599,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"848:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"839:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"838:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"862:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"838:27:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8597,"id":8604,"nodeType":"Return","src":"831:34:29"}]},"id":8606,"implemented":true,"kind":"function","modifiers":[],"name":"calculateCommission","nameLocation":"707:19:29","nodeType":"FunctionDefinition","parameters":{"id":8594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8591,"mutability":"mutable","name":"amount","nameLocation":"745:6:29","nodeType":"VariableDeclaration","scope":8606,"src":"737:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8590,"name":"uint256","nodeType":"ElementaryTypeName","src":"737:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8593,"mutability":"mutable","name":"percentage","nameLocation":"770:10:29","nodeType":"VariableDeclaration","scope":8606,"src":"762:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8592,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"726:61:29"},"returnParameters":{"id":8597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8606,"src":"811:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8595,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:9:29"},"scope":8607,"src":"698:175:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8608,"src":"93:783:29","usedErrors":[8540,8542,8544,8546,8548],"usedEvents":[]}],"src":"33:844:29"},"id":29},"contracts/libraries/EventStructs.sol":{"ast":{"absolutePath":"contracts/libraries/EventStructs.sol","exportedSymbols":{"EventStructs":[8644]},"id":8645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8609,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"EventStructs","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8644,"linearizedBaseContracts":[8644],"name":"EventStructs","nameLocation":"69:12:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EventStructs.PaymentCurrency","id":8613,"members":[{"id":8610,"name":"ETH","nameLocation":"112:3:30","nodeType":"EnumValue","src":"112:3:30"},{"id":8611,"name":"USD","nameLocation":"117:3:30","nodeType":"EnumValue","src":"117:3:30"},{"id":8612,"name":"BASE","nameLocation":"122:4:30","nodeType":"EnumValue","src":"122:4:30"}],"name":"PaymentCurrency","nameLocation":"94:15:30","nodeType":"EnumDefinition","src":"89:39:30"},{"canonicalName":"EventStructs.EventTierType","id":8617,"members":[{"id":8614,"name":"FREE","nameLocation":"155:4:30","nodeType":"EnumValue","src":"155:4:30"},{"id":8615,"name":"GENERAL","nameLocation":"161:7:30","nodeType":"EnumValue","src":"161:7:30"},{"id":8616,"name":"PREMIUM","nameLocation":"170:7:30","nodeType":"EnumValue","src":"170:7:30"}],"name":"EventTierType","nameLocation":"139:13:30","nodeType":"EnumDefinition","src":"134:45:30"},{"canonicalName":"EventStructs.EventTier","id":8629,"members":[{"constant":false,"id":8619,"mutability":"mutable","name":"price","nameLocation":"223:5:30","nodeType":"VariableDeclaration","scope":8629,"src":"215:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8618,"name":"uint256","nodeType":"ElementaryTypeName","src":"215:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8621,"mutability":"mutable","name":"maxQuantity","nameLocation":"247:11:30","nodeType":"VariableDeclaration","scope":8629,"src":"239:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8620,"name":"uint256","nodeType":"ElementaryTypeName","src":"239:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8623,"mutability":"mutable","name":"soldCount","nameLocation":"277:9:30","nodeType":"VariableDeclaration","scope":8629,"src":"269:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8622,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8625,"mutability":"mutable","name":"isActive","nameLocation":"302:8:30","nodeType":"VariableDeclaration","scope":8629,"src":"297:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8624,"name":"bool","nodeType":"ElementaryTypeName","src":"297:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8628,"mutability":"mutable","name":"currency","nameLocation":"337:8:30","nodeType":"VariableDeclaration","scope":8629,"src":"321:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"},"typeName":{"id":8627,"nodeType":"UserDefinedTypeName","pathNode":{"id":8626,"name":"PaymentCurrency","nameLocations":["321:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":8613,"src":"321:15:30"},"referencedDeclaration":8613,"src":"321:15:30","typeDescriptions":{"typeIdentifier":"t_enum$_PaymentCurrency_$8613","typeString":"enum EventStructs.PaymentCurrency"}},"visibility":"internal"}],"name":"EventTier","nameLocation":"194:9:30","nodeType":"StructDefinition","scope":8644,"src":"187:166:30","visibility":"public"},{"canonicalName":"EventStructs.EventSaleLimits","id":8638,"members":[{"constant":false,"id":8631,"mutability":"mutable","name":"maxBatchSize","nameLocation":"403:12:30","nodeType":"VariableDeclaration","scope":8638,"src":"395:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8630,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8633,"mutability":"mutable","name":"maxPerAddress","nameLocation":"434:13:30","nodeType":"VariableDeclaration","scope":8638,"src":"426:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8632,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8635,"mutability":"mutable","name":"saleStartTime","nameLocation":"466:13:30","nodeType":"VariableDeclaration","scope":8638,"src":"458:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8634,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8637,"mutability":"mutable","name":"saleEndTime","nameLocation":"498:11:30","nodeType":"VariableDeclaration","scope":8638,"src":"490:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8636,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"EventSaleLimits","nameLocation":"368:15:30","nodeType":"StructDefinition","scope":8644,"src":"361:156:30","visibility":"public"},{"canonicalName":"EventStructs.PriceFeeds","id":8643,"members":[{"constant":false,"id":8640,"mutability":"mutable","name":"ethUsd","nameLocation":"562:6:30","nodeType":"VariableDeclaration","scope":8643,"src":"554:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8639,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8642,"mutability":"mutable","name":"baseUsd","nameLocation":"587:7:30","nodeType":"VariableDeclaration","scope":8643,"src":"579:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8641,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PriceFeeds","nameLocation":"532:10:30","nodeType":"StructDefinition","scope":8644,"src":"525:77:30","visibility":"public"}],"scope":8645,"src":"61:544:30","usedErrors":[],"usedEvents":[]}],"src":"33:573:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be9803f120b2cdb2db90dc48a7e62f0955c82f38395d01fe85b46c14a169270764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP9 SUB CALL KECCAK256 0xB2 0xCD 0xB2 0xDB SWAP1 0xDC BASEFEE 0xA7 0xE6 0x2F MULMOD SSTORE 0xC8 0x2F CODESIZE CODECOPY 0x5D ADD INVALID DUP6 0xB4 PUSH13 0x14A169270764736F6C63430008 EQ STOP CALLER ","sourceMap":"521:3181:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be9803f120b2cdb2db90dc48a7e62f0955c82f38395d01fe85b46c14a169270764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP9 SUB CALL KECCAK256 0xB2 0xCD 0xB2 0xDB SWAP1 0xDC BASEFEE 0xA7 0xE6 0x2F MULMOD SSTORE 0xC8 0x2F CODESIZE CODECOPY 0x5D ADD INVALID DUP6 0xB4 PUSH13 0x14A169270764736F6C63430008 EQ STOP CALLER ","sourceMap":"521:3181:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/ArtistPayment.sol":{"ArtistPayment":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"artist","type":"address"},{"indexed":false,"internalType":"bool","name":"isVerified","type":"bool"}],"name":"ArtistVerificationStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"CraftiaxAddressUpdated","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"NonceInvalidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"generalMin","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"generalMax","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"verifiedMax","type":"uint256"}],"name":"PaymentLimitsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"artist","type":"address"},{"indexed":false,"internalType":"uint256","name":"artistAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"craftiaxFee","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isVerified","type":"bool"}],"name":"PaymentProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVerifier","type":"address"},{"indexed":true,"internalType":"address","name":"newVerifier","type":"address"}],"name":"VerifierUpdated","type":"event"},{"inputs":[],"name":"MAX_FEE_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PAYMENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_PAYMENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"craftiaxAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"craftiaxFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"generalMaxPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"generalMinPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"invalidateNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isVerifiedArtist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"artistAddress","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"payArtist","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"artistAddress","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setVerificationStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"artists","type":"address[]"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setVerificationStatusBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"updateCraftiaxAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"updateFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newGeneralMin","type":"uint256"},{"internalType":"uint256","name":"newGeneralMax","type":"uint256"},{"internalType":"uint256","name":"newVerifiedMax","type":"uint256"}],"name":"updatePaymentLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newVerifier","type":"address"}],"name":"updateVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"verifiedMaxPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2770":{"entryPoint":null,"id":2770,"parameterSlots":0,"returnSlots":0},"@_4053":{"entryPoint":null,"id":4053,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7936":{"entryPoint":null,"id":7936,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_4100":{"entryPoint":967,"id":4100,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":681,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_3265":{"entryPoint":1169,"id":3265,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2975":{"entryPoint":879,"id":2975,"parameterSlots":2,"returnSlots":1},"@toShortString_2877":{"entryPoint":1060,"id":2877,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1335,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2256,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2273,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2290,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2526,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2573,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1539,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2562,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2383,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1860,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1216,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2246,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1184,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1675,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1821,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2612,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1695,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2015,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2400,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1560,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1486,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1985,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1685,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1953,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1392,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1735,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2589,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1179,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2444,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1576,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1940,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1793,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1589,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1745,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1236,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1788,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10002:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"759:80:31","statements":[{"nodeType":"YulAssignment","src":"769:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:31"},"nodeType":"YulFunctionCall","src":"778:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:31"},"nodeType":"YulFunctionCall","src":"800:33:31"},"nodeType":"YulExpressionStatement","src":"800:33:31"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:31","type":""}],"src":"696:143:31"},{"body":{"nodeType":"YulBlock","src":"922:274:31","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:31"},"nodeType":"YulFunctionCall","src":"970:79:31"},"nodeType":"YulExpressionStatement","src":"970:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:31"},"nodeType":"YulFunctionCall","src":"939:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:31"},"nodeType":"YulFunctionCall","src":"935:32:31"},"nodeType":"YulIf","src":"932:119:31"},{"nodeType":"YulBlock","src":"1061:128:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:31"},"nodeType":"YulFunctionCall","src":"1147:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:31"},"nodeType":"YulFunctionCall","src":"1115:64:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:31"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:31","type":""}],"src":"845:351:31"},{"body":{"nodeType":"YulBlock","src":"1267:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:31"},"nodeType":"YulFunctionCall","src":"1289:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:31"},"nodeType":"YulFunctionCall","src":"1277:37:31"},"nodeType":"YulExpressionStatement","src":"1277:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:31","type":""}],"src":"1202:118:31"},{"body":{"nodeType":"YulBlock","src":"1424:124:31","statements":[{"nodeType":"YulAssignment","src":"1434:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:31"},"nodeType":"YulFunctionCall","src":"1442:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:31"},"nodeType":"YulFunctionCall","src":"1523:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:31"},"nodeType":"YulFunctionCall","src":"1470:71:31"},"nodeType":"YulExpressionStatement","src":"1470:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:31","type":""}],"src":"1326:222:31"},{"body":{"nodeType":"YulBlock","src":"1613:40:31","statements":[{"nodeType":"YulAssignment","src":"1624:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1640:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1634:5:31"},"nodeType":"YulFunctionCall","src":"1634:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1624:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1596:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1606:6:31","type":""}],"src":"1554:99:31"},{"body":{"nodeType":"YulBlock","src":"1687:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1704:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1707:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1697:6:31"},"nodeType":"YulFunctionCall","src":"1697:88:31"},"nodeType":"YulExpressionStatement","src":"1697:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1804:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1794:6:31"},"nodeType":"YulFunctionCall","src":"1794:15:31"},"nodeType":"YulExpressionStatement","src":"1794:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1825:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1818:6:31"},"nodeType":"YulFunctionCall","src":"1818:15:31"},"nodeType":"YulExpressionStatement","src":"1818:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1659:180:31"},{"body":{"nodeType":"YulBlock","src":"1873:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1890:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1893:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:31"},"nodeType":"YulFunctionCall","src":"1883:88:31"},"nodeType":"YulExpressionStatement","src":"1883:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1987:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1990:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:31"},"nodeType":"YulFunctionCall","src":"1980:15:31"},"nodeType":"YulExpressionStatement","src":"1980:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2011:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2014:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2004:6:31"},"nodeType":"YulFunctionCall","src":"2004:15:31"},"nodeType":"YulExpressionStatement","src":"2004:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1845:180:31"},{"body":{"nodeType":"YulBlock","src":"2082:269:31","statements":[{"nodeType":"YulAssignment","src":"2092:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2106:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2112:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2102:3:31"},"nodeType":"YulFunctionCall","src":"2102:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2092:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"2123:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2153:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2149:3:31"},"nodeType":"YulFunctionCall","src":"2149:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2127:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2200:51:31","statements":[{"nodeType":"YulAssignment","src":"2214:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2228:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2224:3:31"},"nodeType":"YulFunctionCall","src":"2224:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2214:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2180:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2173:6:31"},"nodeType":"YulFunctionCall","src":"2173:26:31"},"nodeType":"YulIf","src":"2170:81:31"},{"body":{"nodeType":"YulBlock","src":"2303:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2317:16:31"},"nodeType":"YulFunctionCall","src":"2317:18:31"},"nodeType":"YulExpressionStatement","src":"2317:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2267:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2290:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2287:2:31"},"nodeType":"YulFunctionCall","src":"2287:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2264:2:31"},"nodeType":"YulFunctionCall","src":"2264:38:31"},"nodeType":"YulIf","src":"2261:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2066:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2075:6:31","type":""}],"src":"2031:320:31"},{"body":{"nodeType":"YulBlock","src":"2411:87:31","statements":[{"nodeType":"YulAssignment","src":"2421:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2429:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2421:4:31"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:31","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2452:3:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2442:6:31"},"nodeType":"YulFunctionCall","src":"2442:14:31"},"nodeType":"YulExpressionStatement","src":"2442:14:31"},{"nodeType":"YulAssignment","src":"2465:26:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2483:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2486:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2473:9:31"},"nodeType":"YulFunctionCall","src":"2473:18:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2465:4:31"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2398:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2406:4:31","type":""}],"src":"2357:141:31"},{"body":{"nodeType":"YulBlock","src":"2548:49:31","statements":[{"nodeType":"YulAssignment","src":"2558:33:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2576:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:31"},"nodeType":"YulFunctionCall","src":"2572:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:31","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2568:3:31"},"nodeType":"YulFunctionCall","src":"2568:23:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2558:6:31"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2531:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2541:6:31","type":""}],"src":"2504:93:31"},{"body":{"nodeType":"YulBlock","src":"2656:54:31","statements":[{"nodeType":"YulAssignment","src":"2666:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2691:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"2697:5:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2687:3:31"},"nodeType":"YulFunctionCall","src":"2687:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2666:8:31"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2631:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"2637:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2647:8:31","type":""}],"src":"2603:107:31"},{"body":{"nodeType":"YulBlock","src":"2792:317:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2802:35:31","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2823:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"2835:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2819:3:31"},"nodeType":"YulFunctionCall","src":"2819:18:31"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2806:9:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2846:109:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2877:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2888:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2858:18:31"},"nodeType":"YulFunctionCall","src":"2858:97:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2850:4:31","type":""}]},{"nodeType":"YulAssignment","src":"2964:51:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2995:9:31"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3006:8:31"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2976:18:31"},"nodeType":"YulFunctionCall","src":"2976:39:31"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2964:8:31"}]},{"nodeType":"YulAssignment","src":"3024:30:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3037:5:31"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3048:4:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3044:3:31"},"nodeType":"YulFunctionCall","src":"3044:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3033:3:31"},"nodeType":"YulFunctionCall","src":"3033:21:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3024:5:31"}]},{"nodeType":"YulAssignment","src":"3063:40:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:31"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3087:8:31"},{"name":"mask","nodeType":"YulIdentifier","src":"3097:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3083:3:31"},"nodeType":"YulFunctionCall","src":"3083:19:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3073:2:31"},"nodeType":"YulFunctionCall","src":"3073:30:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3063:6:31"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2753:5:31","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2760:10:31","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2772:8:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2785:6:31","type":""}],"src":"2716:393:31"},{"body":{"nodeType":"YulBlock","src":"3160:32:31","statements":[{"nodeType":"YulAssignment","src":"3170:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3181:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3170:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3142:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3152:7:31","type":""}],"src":"3115:77:31"},{"body":{"nodeType":"YulBlock","src":"3230:28:31","statements":[{"nodeType":"YulAssignment","src":"3240:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3247:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3240:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3216:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3226:3:31","type":""}],"src":"3198:60:31"},{"body":{"nodeType":"YulBlock","src":"3324:82:31","statements":[{"nodeType":"YulAssignment","src":"3334:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3392:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3374:17:31"},"nodeType":"YulFunctionCall","src":"3374:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3365:8:31"},"nodeType":"YulFunctionCall","src":"3365:34:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3347:17:31"},"nodeType":"YulFunctionCall","src":"3347:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3334:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3304:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3314:9:31","type":""}],"src":"3264:142:31"},{"body":{"nodeType":"YulBlock","src":"3459:28:31","statements":[{"nodeType":"YulAssignment","src":"3469:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3476:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3469:3:31"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3445:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3455:3:31","type":""}],"src":"3412:75:31"},{"body":{"nodeType":"YulBlock","src":"3569:193:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3579:63:31","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3634:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3603:30:31"},"nodeType":"YulFunctionCall","src":"3603:39:31"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3583:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3658:4:31"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3698:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3692:5:31"},"nodeType":"YulFunctionCall","src":"3692:11:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3705:6:31"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3737:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3713:23:31"},"nodeType":"YulFunctionCall","src":"3713:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3664:27:31"},"nodeType":"YulFunctionCall","src":"3664:91:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3651:6:31"},"nodeType":"YulFunctionCall","src":"3651:105:31"},"nodeType":"YulExpressionStatement","src":"3651:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3546:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3552:6:31","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3560:7:31","type":""}],"src":"3493:269:31"},{"body":{"nodeType":"YulBlock","src":"3817:24:31","statements":[{"nodeType":"YulAssignment","src":"3827:8:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3834:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3827:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3813:3:31","type":""}],"src":"3768:73:31"},{"body":{"nodeType":"YulBlock","src":"3900:136:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3910:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3924:30:31"},"nodeType":"YulFunctionCall","src":"3924:32:31"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3914:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4009:4:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4015:6:31"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4023:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3965:43:31"},"nodeType":"YulFunctionCall","src":"3965:65:31"},"nodeType":"YulExpressionStatement","src":"3965:65:31"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3886:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3892:6:31","type":""}],"src":"3847:189:31"},{"body":{"nodeType":"YulBlock","src":"4092:136:31","statements":[{"body":{"nodeType":"YulBlock","src":"4159:63:31","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4203:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4210:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4173:29:31"},"nodeType":"YulFunctionCall","src":"4173:39:31"},"nodeType":"YulExpressionStatement","src":"4173:39:31"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4112:5:31"},{"name":"end","nodeType":"YulIdentifier","src":"4119:3:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4109:2:31"},"nodeType":"YulFunctionCall","src":"4109:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4124:26:31","statements":[{"nodeType":"YulAssignment","src":"4126:22:31","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4139:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4135:3:31"},"nodeType":"YulFunctionCall","src":"4135:13:31"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4126:5:31"}]}]},"pre":{"nodeType":"YulBlock","src":"4106:2:31","statements":[]},"src":"4102:120:31"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4080:5:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4087:3:31","type":""}],"src":"4042:186:31"},{"body":{"nodeType":"YulBlock","src":"4313:464:31","statements":[{"body":{"nodeType":"YulBlock","src":"4339:431:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4353:54:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4401:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4369:31:31"},"nodeType":"YulFunctionCall","src":"4369:38:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4357:8:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4420:63:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4443:8:31"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4471:10:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4453:17:31"},"nodeType":"YulFunctionCall","src":"4453:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:31"},"nodeType":"YulFunctionCall","src":"4439:44:31"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4424:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4640:27:31","statements":[{"nodeType":"YulAssignment","src":"4642:23:31","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4657:8:31"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4642:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4624:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"4636:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4621:2:31"},"nodeType":"YulFunctionCall","src":"4621:18:31"},"nodeType":"YulIf","src":"4618:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4709:11:31"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4726:8:31"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4754:3:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4736:17:31"},"nodeType":"YulFunctionCall","src":"4736:22:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:31"},"nodeType":"YulFunctionCall","src":"4722:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4680:28:31"},"nodeType":"YulFunctionCall","src":"4680:80:31"},"nodeType":"YulExpressionStatement","src":"4680:80:31"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4330:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"4335:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4327:2:31"},"nodeType":"YulFunctionCall","src":"4327:11:31"},"nodeType":"YulIf","src":"4324:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4289:5:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"4296:3:31","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4301:10:31","type":""}],"src":"4234:543:31"},{"body":{"nodeType":"YulBlock","src":"4846:54:31","statements":[{"nodeType":"YulAssignment","src":"4856:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4881:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"4887:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4877:3:31"},"nodeType":"YulFunctionCall","src":"4877:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4856:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4821:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"4827:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4837:8:31","type":""}],"src":"4783:117:31"},{"body":{"nodeType":"YulBlock","src":"4957:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4967:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5016:1:31","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5019:5:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5012:3:31"},"nodeType":"YulFunctionCall","src":"5012:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5031:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5027:3:31"},"nodeType":"YulFunctionCall","src":"5027:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4983:28:31"},"nodeType":"YulFunctionCall","src":"4983:51:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4979:3:31"},"nodeType":"YulFunctionCall","src":"4979:56:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4971:4:31","type":""}]},{"nodeType":"YulAssignment","src":"5044:25:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5058:4:31"},{"name":"mask","nodeType":"YulIdentifier","src":"5064:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5054:3:31"},"nodeType":"YulFunctionCall","src":"5054:15:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5044:6:31"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4934:4:31","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4940:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4950:6:31","type":""}],"src":"4906:169:31"},{"body":{"nodeType":"YulBlock","src":"5161:214:31","statements":[{"nodeType":"YulAssignment","src":"5294:37:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5321:4:31"},{"name":"len","nodeType":"YulIdentifier","src":"5327:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5302:18:31"},"nodeType":"YulFunctionCall","src":"5302:29:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5294:4:31"}]},{"nodeType":"YulAssignment","src":"5340:29:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5351:4:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5361:1:31","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5364:3:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5357:3:31"},"nodeType":"YulFunctionCall","src":"5357:11:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5348:2:31"},"nodeType":"YulFunctionCall","src":"5348:21:31"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5340:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5142:4:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"5148:3:31","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5156:4:31","type":""}],"src":"5080:295:31"},{"body":{"nodeType":"YulBlock","src":"5472:1303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5483:51:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5530:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5497:32:31"},"nodeType":"YulFunctionCall","src":"5497:37:31"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5487:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5619:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5621:16:31"},"nodeType":"YulFunctionCall","src":"5621:18:31"},"nodeType":"YulExpressionStatement","src":"5621:18:31"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5591:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5599:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5588:2:31"},"nodeType":"YulFunctionCall","src":"5588:30:31"},"nodeType":"YulIf","src":"5585:56:31"},{"nodeType":"YulVariableDeclaration","src":"5651:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5697:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5691:5:31"},"nodeType":"YulFunctionCall","src":"5691:11:31"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5665:25:31"},"nodeType":"YulFunctionCall","src":"5665:38:31"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5655:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5796:4:31"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5802:6:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"5810:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5750:45:31"},"nodeType":"YulFunctionCall","src":"5750:67:31"},"nodeType":"YulExpressionStatement","src":"5750:67:31"},{"nodeType":"YulVariableDeclaration","src":"5827:18:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5831:9:31","type":""}]},{"nodeType":"YulAssignment","src":"5855:17:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5868:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5855:9:31"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5919:611:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5933:37:31","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5952:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5964:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5960:3:31"},"nodeType":"YulFunctionCall","src":"5960:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5948:3:31"},"nodeType":"YulFunctionCall","src":"5948:22:31"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5937:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5984:51:31","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6030:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5998:31:31"},"nodeType":"YulFunctionCall","src":"5998:37:31"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5988:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6048:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6057:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6052:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6116:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6141:6:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6159:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6164:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:31"},"nodeType":"YulFunctionCall","src":"6155:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6149:5:31"},"nodeType":"YulFunctionCall","src":"6149:26:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6134:6:31"},"nodeType":"YulFunctionCall","src":"6134:42:31"},"nodeType":"YulExpressionStatement","src":"6134:42:31"},{"nodeType":"YulAssignment","src":"6193:24:31","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6207:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6215:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:31"},"nodeType":"YulFunctionCall","src":"6203:14:31"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6193:6:31"}]},{"nodeType":"YulAssignment","src":"6234:31:31","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6251:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6247:3:31"},"nodeType":"YulFunctionCall","src":"6247:18:31"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6234:9:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6082:1:31"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6085:7:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6079:2:31"},"nodeType":"YulFunctionCall","src":"6079:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6094:21:31","statements":[{"nodeType":"YulAssignment","src":"6096:17:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6105:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"6108:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:31"},"nodeType":"YulFunctionCall","src":"6101:12:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6096:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6075:3:31","statements":[]},"src":"6071:208:31"},{"body":{"nodeType":"YulBlock","src":"6315:156:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6333:43:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6360:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6365:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:31"},"nodeType":"YulFunctionCall","src":"6356:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6350:5:31"},"nodeType":"YulFunctionCall","src":"6350:26:31"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6337:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6400:6:31"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6427:9:31"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6442:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6450:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6438:3:31"},"nodeType":"YulFunctionCall","src":"6438:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6408:18:31"},"nodeType":"YulFunctionCall","src":"6408:48:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6393:6:31"},"nodeType":"YulFunctionCall","src":"6393:64:31"},"nodeType":"YulExpressionStatement","src":"6393:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6298:7:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6307:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6295:2:31"},"nodeType":"YulFunctionCall","src":"6295:19:31"},"nodeType":"YulIf","src":"6292:179:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6491:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6505:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6513:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6501:3:31"},"nodeType":"YulFunctionCall","src":"6501:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"6517:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:31"},"nodeType":"YulFunctionCall","src":"6497:22:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6484:6:31"},"nodeType":"YulFunctionCall","src":"6484:36:31"},"nodeType":"YulExpressionStatement","src":"6484:36:31"}]},"nodeType":"YulCase","src":"5912:618:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5917:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6547:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6561:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6574:1:31","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6565:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6598:67:31","statements":[{"nodeType":"YulAssignment","src":"6616:35:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6635:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6640:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6631:3:31"},"nodeType":"YulFunctionCall","src":"6631:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6625:5:31"},"nodeType":"YulFunctionCall","src":"6625:26:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6616:5:31"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6591:6:31"},"nodeType":"YulIf","src":"6588:77:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6685:4:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6744:5:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6751:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6691:52:31"},"nodeType":"YulFunctionCall","src":"6691:67:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6678:6:31"},"nodeType":"YulFunctionCall","src":"6678:81:31"},"nodeType":"YulExpressionStatement","src":"6678:81:31"}]},"nodeType":"YulCase","src":"6539:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5892:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5900:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5889:2:31"},"nodeType":"YulFunctionCall","src":"5889:14:31"},"nodeType":"YulSwitch","src":"5882:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5461:4:31","type":""},{"name":"src","nodeType":"YulTypedName","src":"5467:3:31","type":""}],"src":"5380:1395:31"},{"body":{"nodeType":"YulBlock","src":"6826:32:31","statements":[{"nodeType":"YulAssignment","src":"6836:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"6847:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6836:7:31"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6808:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6818:7:31","type":""}],"src":"6781:77:31"},{"body":{"nodeType":"YulBlock","src":"6929:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6946:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6969:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6951:17:31"},"nodeType":"YulFunctionCall","src":"6951:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6939:6:31"},"nodeType":"YulFunctionCall","src":"6939:37:31"},"nodeType":"YulExpressionStatement","src":"6939:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6917:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6924:3:31","type":""}],"src":"6864:118:31"},{"body":{"nodeType":"YulBlock","src":"7053:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7070:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7093:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7075:17:31"},"nodeType":"YulFunctionCall","src":"7075:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7063:6:31"},"nodeType":"YulFunctionCall","src":"7063:37:31"},"nodeType":"YulExpressionStatement","src":"7063:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7041:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7048:3:31","type":""}],"src":"6988:118:31"},{"body":{"nodeType":"YulBlock","src":"7322:454:31","statements":[{"nodeType":"YulAssignment","src":"7332:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7344:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7355:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:31"},"nodeType":"YulFunctionCall","src":"7340:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7332:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7413:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7426:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7437:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7422:3:31"},"nodeType":"YulFunctionCall","src":"7422:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7369:43:31"},"nodeType":"YulFunctionCall","src":"7369:71:31"},"nodeType":"YulExpressionStatement","src":"7369:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7494:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7518:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:31"},"nodeType":"YulFunctionCall","src":"7503:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7450:43:31"},"nodeType":"YulFunctionCall","src":"7450:72:31"},"nodeType":"YulExpressionStatement","src":"7450:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7576:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7589:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7600:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7585:3:31"},"nodeType":"YulFunctionCall","src":"7585:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7532:43:31"},"nodeType":"YulFunctionCall","src":"7532:72:31"},"nodeType":"YulExpressionStatement","src":"7532:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7658:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7682:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:31"},"nodeType":"YulFunctionCall","src":"7667:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7614:43:31"},"nodeType":"YulFunctionCall","src":"7614:72:31"},"nodeType":"YulExpressionStatement","src":"7614:72:31"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7740:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7753:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7764:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7749:3:31"},"nodeType":"YulFunctionCall","src":"7749:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7696:43:31"},"nodeType":"YulFunctionCall","src":"7696:73:31"},"nodeType":"YulExpressionStatement","src":"7696:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7262:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7274:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7282:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7290:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7298:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7306:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7317:4:31","type":""}],"src":"7112:664:31"},{"body":{"nodeType":"YulBlock","src":"7878:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7895:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"7900:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7888:6:31"},"nodeType":"YulFunctionCall","src":"7888:19:31"},"nodeType":"YulExpressionStatement","src":"7888:19:31"},{"nodeType":"YulAssignment","src":"7916:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7935:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7931:3:31"},"nodeType":"YulFunctionCall","src":"7931:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7916:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7850:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"7855:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7866:11:31","type":""}],"src":"7782:169:31"},{"body":{"nodeType":"YulBlock","src":"8019:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8029:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8038:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8033:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8098:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8123:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"8128:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8119:3:31"},"nodeType":"YulFunctionCall","src":"8119:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8142:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"8147:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8138:3:31"},"nodeType":"YulFunctionCall","src":"8138:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8132:5:31"},"nodeType":"YulFunctionCall","src":"8132:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8112:6:31"},"nodeType":"YulFunctionCall","src":"8112:39:31"},"nodeType":"YulExpressionStatement","src":"8112:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8059:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"8062:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8056:2:31"},"nodeType":"YulFunctionCall","src":"8056:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8070:19:31","statements":[{"nodeType":"YulAssignment","src":"8072:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8081:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"8084:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:31"},"nodeType":"YulFunctionCall","src":"8077:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8072:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"8052:3:31","statements":[]},"src":"8048:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8181:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8186:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8177:3:31"},"nodeType":"YulFunctionCall","src":"8177:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"8195:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8170:6:31"},"nodeType":"YulFunctionCall","src":"8170:27:31"},"nodeType":"YulExpressionStatement","src":"8170:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8001:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8006:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8011:6:31","type":""}],"src":"7957:246:31"},{"body":{"nodeType":"YulBlock","src":"8257:54:31","statements":[{"nodeType":"YulAssignment","src":"8267:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8285:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8292:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8281:3:31"},"nodeType":"YulFunctionCall","src":"8281:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8301:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8297:3:31"},"nodeType":"YulFunctionCall","src":"8297:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8277:3:31"},"nodeType":"YulFunctionCall","src":"8277:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8267:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8240:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8250:6:31","type":""}],"src":"8209:102:31"},{"body":{"nodeType":"YulBlock","src":"8409:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8419:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8466:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8433:32:31"},"nodeType":"YulFunctionCall","src":"8433:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8423:6:31","type":""}]},{"nodeType":"YulAssignment","src":"8481:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8547:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8552:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8488:58:31"},"nodeType":"YulFunctionCall","src":"8488:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8481:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8607:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8614:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8603:3:31"},"nodeType":"YulFunctionCall","src":"8603:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"8621:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8626:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8568:34:31"},"nodeType":"YulFunctionCall","src":"8568:65:31"},"nodeType":"YulExpressionStatement","src":"8568:65:31"},{"nodeType":"YulAssignment","src":"8642:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8653:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8680:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8658:21:31"},"nodeType":"YulFunctionCall","src":"8658:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:31"},"nodeType":"YulFunctionCall","src":"8649:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8642:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8390:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8397:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8405:3:31","type":""}],"src":"8317:377:31"},{"body":{"nodeType":"YulBlock","src":"8818:195:31","statements":[{"nodeType":"YulAssignment","src":"8828:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8840:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8851:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8836:3:31"},"nodeType":"YulFunctionCall","src":"8836:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8828:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8875:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8886:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8871:3:31"},"nodeType":"YulFunctionCall","src":"8871:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8894:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"8900:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8890:3:31"},"nodeType":"YulFunctionCall","src":"8890:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8864:6:31"},"nodeType":"YulFunctionCall","src":"8864:47:31"},"nodeType":"YulExpressionStatement","src":"8864:47:31"},{"nodeType":"YulAssignment","src":"8920:86:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8992:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"9001:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8928:63:31"},"nodeType":"YulFunctionCall","src":"8928:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8920:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8790:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8802:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8813:4:31","type":""}],"src":"8700:313:31"},{"body":{"nodeType":"YulBlock","src":"9077:40:31","statements":[{"nodeType":"YulAssignment","src":"9088:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9104:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9098:5:31"},"nodeType":"YulFunctionCall","src":"9098:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9088:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9060:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9070:6:31","type":""}],"src":"9019:98:31"},{"body":{"nodeType":"YulBlock","src":"9179:60:31","statements":[{"nodeType":"YulAssignment","src":"9189:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9197:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9189:4:31"}]},{"nodeType":"YulAssignment","src":"9210:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9222:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"9227:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9218:3:31"},"nodeType":"YulFunctionCall","src":"9218:14:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9210:4:31"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9166:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9174:4:31","type":""}],"src":"9123:116:31"},{"body":{"nodeType":"YulBlock","src":"9300:99:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9311:42:31","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9348:3:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9342:5:31"},"nodeType":"YulFunctionCall","src":"9342:10:31"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9324:17:31"},"nodeType":"YulFunctionCall","src":"9324:29:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9315:5:31","type":""}]},{"nodeType":"YulAssignment","src":"9363:29:31","value":{"name":"value","nodeType":"YulIdentifier","src":"9387:5:31"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9363:11:31"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9280:3:31","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"9288:11:31","type":""}],"src":"9245:154:31"},{"body":{"nodeType":"YulBlock","src":"9495:504:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9506:52:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9552:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9520:31:31"},"nodeType":"YulFunctionCall","src":"9520:38:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9510:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9567:21:31","value":{"name":"array","nodeType":"YulIdentifier","src":"9583:5:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"9571:8:31","type":""}]},{"nodeType":"YulAssignment","src":"9598:52:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9644:5:31"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9610:33:31"},"nodeType":"YulFunctionCall","src":"9610:40:31"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9598:8:31"}]},{"nodeType":"YulAssignment","src":"9660:44:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9695:8:31"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"9669:25:31"},"nodeType":"YulFunctionCall","src":"9669:35:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9660:5:31"}]},{"body":{"nodeType":"YulBlock","src":"9732:260:31","statements":[{"nodeType":"YulAssignment","src":"9746:236:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9776:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9843:1:31","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9850:2:31","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"9854:6:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9846:3:31"},"nodeType":"YulFunctionCall","src":"9846:15:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9839:3:31"},"nodeType":"YulFunctionCall","src":"9839:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"9884:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9799:18:31"},"nodeType":"YulFunctionCall","src":"9799:169:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9755:3:31"},"nodeType":"YulFunctionCall","src":"9755:227:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9746:5:31"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9720:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9728:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9717:2:31"},"nodeType":"YulFunctionCall","src":"9717:14:31"},"nodeType":"YulIf","src":"9714:278:31"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"9479:5:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9489:5:31","type":""}],"src":"9405:594:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH6 0x48C27395000 PUSH1 0x6 SSTORE PUSH7 0xB1A2BC2EC50000 PUSH1 0x7 SSTORE PUSH8 0x3782DACE9D90000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3D6B CODESIZE SUB DUP1 PUSH3 0x3D6B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172746973745061796D656E7400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x143 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13A SWAP2 SWAP1 PUSH3 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x154 DUP2 PUSH3 0x2A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x16B PUSH1 0x2 DUP4 PUSH3 0x36F PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x189 PUSH1 0x3 DUP3 PUSH3 0x36F PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1C8 PUSH3 0x3C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH20 0x8CE0F94755EB14F7AF130C1AA2CAD26DEA2A2ACD PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0xAA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x395 JUMPI PUSH3 0x38D DUP4 PUSH3 0x424 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3C1 JUMP JUMPDEST DUP3 PUSH3 0x3A7 DUP4 PUSH3 0x491 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3B8 SWAP2 SWAP1 PUSH3 0x7DF JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x409 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x474 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x46B SWAP2 SWAP1 PUSH3 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x482 SWAP1 PUSH3 0xA34 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CD DUP3 PUSH3 0x4A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4DF DUP2 PUSH3 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4FF DUP2 PUSH3 0x4D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x51E JUMPI PUSH3 0x51D PUSH3 0x49B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x52E DUP5 DUP3 DUP6 ADD PUSH3 0x4EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x542 DUP2 PUSH3 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x55F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5FD JUMPI PUSH3 0x5FC PUSH3 0x59F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x667 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x628 JUMP JUMPDEST PUSH3 0x673 DUP7 DUP4 PUSH3 0x628 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6C0 PUSH3 0x6BA PUSH3 0x6B4 DUP5 PUSH3 0x68B JUMP JUMPDEST PUSH3 0x695 JUMP JUMPDEST PUSH3 0x68B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6DC DUP4 PUSH3 0x69F JUMP JUMPDEST PUSH3 0x6F4 PUSH3 0x6EB DUP3 PUSH3 0x6C7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x635 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x70B PUSH3 0x6FC JUMP JUMPDEST PUSH3 0x718 DUP2 DUP5 DUP5 PUSH3 0x6D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x740 JUMPI PUSH3 0x734 PUSH1 0x0 DUP3 PUSH3 0x701 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x71E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x78F JUMPI PUSH3 0x759 DUP2 PUSH3 0x603 JUMP JUMPDEST PUSH3 0x764 DUP5 PUSH3 0x618 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x774 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x78C PUSH3 0x783 DUP6 PUSH3 0x618 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x71D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B4 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x794 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CF DUP4 DUP4 PUSH3 0x7A1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7EA DUP3 PUSH3 0x565 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x806 JUMPI PUSH3 0x805 PUSH3 0x570 JUMP JUMPDEST JUMPDEST PUSH3 0x812 DUP3 SLOAD PUSH3 0x5CE JUMP JUMPDEST PUSH3 0x81F DUP3 DUP3 DUP6 PUSH3 0x744 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x857 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x842 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x84E DUP6 DUP3 PUSH3 0x7C1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x867 DUP7 PUSH3 0x603 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x891 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x86A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x8B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x8AD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x7A1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8DB DUP2 PUSH3 0x8C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x8EC DUP2 PUSH3 0x68B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x909 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x8D0 JUMP JUMPDEST PUSH3 0x918 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x8D0 JUMP JUMPDEST PUSH3 0x927 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x8D0 JUMP JUMPDEST PUSH3 0x936 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x8E1 JUMP JUMPDEST PUSH3 0x945 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x537 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x980 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x963 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9AA DUP3 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x9B6 DUP2 DUP6 PUSH3 0x94F JUMP JUMPDEST SWAP4 POP PUSH3 0x9C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x960 JUMP JUMPDEST PUSH3 0x9D3 DUP2 PUSH3 0x98C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x9FA DUP2 DUP5 PUSH3 0x99D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA2B DUP3 MLOAD PUSH3 0x8C6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA41 DUP3 PUSH3 0xA02 JUMP JUMPDEST DUP3 PUSH3 0xA4D DUP5 PUSH3 0xA0D JUMP JUMPDEST SWAP1 POP PUSH3 0xA5A DUP2 PUSH3 0xA1D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA9D JUMPI PUSH3 0xA98 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x628 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x326C PUSH3 0xAFF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1896 ADD MSTORE PUSH1 0x0 PUSH2 0x185B ADD MSTORE PUSH1 0x0 PUSH2 0x1D88 ADD MSTORE PUSH1 0x0 PUSH2 0x1D67 ADD MSTORE PUSH1 0x0 PUSH2 0x1A1A ADD MSTORE PUSH1 0x0 PUSH2 0x1A70 ADD MSTORE PUSH1 0x0 PUSH2 0x1A99 ADD MSTORE PUSH2 0x326C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x811AB42A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB1C1008C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB1C1008C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xBC979E0C EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xEB566E91 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xF8231848 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xFB14A834 EQ PUSH2 0x4C5 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x811AB42A EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x82948FE1 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x3D6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x5ABD7CCE GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x5ABD7CCE EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x657AFFBF EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x6CAD3FB0 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x790E8739 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E9 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3B7810F2 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4E75BAAF EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x511E2FBF EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x53A78064 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x558E44D3 EQ PUSH2 0x1ED JUMPI PUSH2 0x140 JUMP JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x53B JUMPI PUSH2 0x53A PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x718 JUMPI DUP2 PUSH1 0x9 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6B5 JUMPI PUSH2 0x6B4 PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE04AE0D5E07C196ABFDDDF316ED5A149DB87E19D926FCC1BDBB97EB3E7E4996 DUP4 PUSH1 0x40 MLOAD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 DUP1 PUSH2 0x723 SWAP1 PUSH2 0x26BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP1 PUSH2 0x274F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1800CD2301FBC20790ED94F3D55A28EF2306A9C31CD3C72B5B71B6E4CF5C6241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 DUP2 PUSH1 0x40 MLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x962 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x96C PUSH1 0x0 PUSH2 0x178C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x976 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP1 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x53BAF540F6BA4584584CCBD80C43CC27031FB628CD53B60D5B07CB026F044470 DUP2 PUSH1 0x40 MLOAD PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE3 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC25 SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xA4D4826A6FBC5911D78E36C33EFAD85B381295BDB2EFB011AC33984434A8E5B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xC97 PUSH2 0x1852 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0x188D JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCEE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5F PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x243549A92B2412F7A3CAF7A2E56D65B8821B91345363FAA5F57195384065FCC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH7 0xB1A2BC2EC50000 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH6 0x16BCC41E9000 DUP2 JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF32 DUP2 PUSH2 0x178C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x18C8 JUMP JUMPDEST DUP2 TIMESTAMP GT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP1 PUSH2 0x2B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xBA5F9B5E8FD41DCE0E09BC45E89026D6D1648DA87378147343D6033F976B4559 DUP5 CALLVALUE PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFF5 SWAP1 PUSH2 0x26BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP7 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1010 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1033 DUP3 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1041 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CA SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x2C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117E SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EF SWAP1 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x2E1B JUMP JUMPDEST PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 CALLVALUE PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2EBD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CA SWAP1 PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x141B SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1498 SWAP1 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD061644A2478FE067A60A32CA1BCE725BC0C45EF99D529BE0556B3F22DFB254 DUP5 DUP7 PUSH1 0x9 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1537 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP PUSH2 0x154E PUSH2 0x1954 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x155B PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1653 SWAP1 PUSH2 0x30B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE04AE0D5E07C196ABFDDDF316ED5A149DB87E19D926FCC1BDBB97EB3E7E4996 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x170D PUSH2 0x195E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172B PUSH2 0xD2D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x178A JUMPI PUSH2 0x174E PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1888 PUSH1 0x2 PUSH32 0x0 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18C3 PUSH1 0x3 PUSH32 0x0 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH2 0x191B PUSH2 0x1A16 JUMP JUMPDEST DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1938 DUP7 DUP7 PUSH2 0x1B0E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1948 DUP3 DUP3 PUSH2 0x1B6A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1983 JUMPI PUSH2 0x197C DUP4 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A10 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x3107 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BB SWAP1 PUSH2 0x3107 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A92 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1ABF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x1AC7 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1B53 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1B45 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1DD8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1BF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C61 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CC9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CDB DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DBD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1EC2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1F13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2F DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F89 JUMPI PUSH2 0x1F88 PUSH2 0x1F64 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH2 0x1FA5 PUSH2 0x1F69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1F6E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDE DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FFB DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2038 JUMPI PUSH2 0x2037 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH2 0x2044 DUP7 DUP3 DUP8 ADD PUSH2 0x1F73 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2057 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208C DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209C DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B9 DUP2 PUSH2 0x2093 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D4 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2110 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x211F DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP2 EQ PUSH2 0x212A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x213C DUP2 PUSH2 0x2116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP5 DUP3 DUP6 ADD PUSH2 0x212D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21D1 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21E2 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2221 DUP2 PUSH2 0x21EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x2293 DUP2 DUP6 PUSH2 0x2232 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x22AC DUP2 PUSH2 0x226D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CA DUP2 PUSH2 0x22B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2305 DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2317 DUP4 DUP4 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233B DUP3 PUSH2 0x22D0 JUMP JUMPDEST PUSH2 0x2345 DUP2 DUP6 PUSH2 0x22DB JUMP JUMPDEST SWAP4 POP PUSH2 0x2350 DUP4 PUSH2 0x22EC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2381 JUMPI DUP2 MLOAD PUSH2 0x2368 DUP9 DUP3 PUSH2 0x230B JUMP JUMPDEST SWAP8 POP PUSH2 0x2373 DUP4 PUSH2 0x2323 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2354 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x23A3 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2218 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 DUP10 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23C9 DUP2 DUP9 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP PUSH2 0x23D8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x23E5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x23F2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x22C1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2404 DUP2 DUP5 PUSH2 0x2330 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x244F DUP3 PUSH2 0x226D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2417 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2481 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH2 0x248D DUP3 DUP3 PUSH2 0x2446 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24AD JUMPI PUSH2 0x24AC PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH2 0x24B6 DUP3 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E5 PUSH2 0x24E0 DUP5 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2501 JUMPI PUSH2 0x2500 PUSH2 0x2412 JUMP JUMPDEST JUMPDEST PUSH2 0x250C DUP5 DUP3 DUP6 PUSH2 0x24C3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x1F64 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2539 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x255B JUMPI PUSH2 0x255A PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2569 DUP7 DUP3 DUP8 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x257A DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x259B JUMPI PUSH2 0x259A PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH2 0x25A7 DUP7 DUP3 DUP8 ADD PUSH2 0x2514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C8 JUMPI PUSH2 0x25C7 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D6 DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420617274697374206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2656 PUSH1 0x16 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2661 DUP3 PUSH2 0x2620 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2685 DUP2 PUSH2 0x2649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26C6 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26F8 JUMPI PUSH2 0x26F7 PUSH2 0x268C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420757365722061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2739 PUSH1 0x14 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2744 DUP3 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2768 DUP2 PUSH2 0x272C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665652065786365656473206D6178696D756D20616C6C6F7765640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A5 PUSH1 0x1B DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B0 DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D4 DUP2 PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2811 PUSH1 0xF DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x281C DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2840 DUP2 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616D6520616464726573732070726F76696465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287D PUSH1 0x15 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2888 DUP3 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28AC DUP2 PUSH2 0x2870 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47656E6572616C206D696E206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290F PUSH1 0x22 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x291A DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293E DUP2 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47656E6572616C206D6178206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D696E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A1 PUSH1 0x24 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x29AC DUP3 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29D0 DUP2 PUSH2 0x2994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5665726966696564206D6178206D757374206265206772656174657220746861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E2067656E6572616C206D617800000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0x2D DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A7E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2A8B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2A98 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420766572696669657220616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD6 PUSH1 0x18 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE1 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B05 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B42 PUSH1 0x11 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4D DUP3 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B71 DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2B8D PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x2B9A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x2BA7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BB4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH1 0x11 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1A DUP3 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C3E DUP2 PUSH2 0x2C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420616D6F756E742062656C6F77206D696E696D756D00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C7B PUSH1 0x1C DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C86 DUP3 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CAA DUP2 PUSH2 0x2C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172746973742063616E6E6F7420626520437261667469617820616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0D PUSH1 0x21 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D18 DUP3 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3C DUP2 PUSH2 0x2D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E742065786365656473207665726966696564206C696D69740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D79 PUSH1 0x1E DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D84 DUP3 PUSH2 0x2D43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA8 DUP2 PUSH2 0x2D6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420657863656564732067656E6572616C206C696D6974000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE5 PUSH1 0x1D DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E14 DUP2 PUSH2 0x2DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E26 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2E31 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2E3F DUP2 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2E56 JUMPI PUSH2 0x2E55 PUSH2 0x268C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E97 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x2E5D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC8 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED3 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EEB JUMPI PUSH2 0x2EEA PUSH2 0x268C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0C PUSH1 0x0 DUP4 PUSH2 0x2EF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F17 DUP3 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2D DUP3 PUSH2 0x2EFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64207061796D656E7420746F20617274697374 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6D PUSH1 0x20 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F78 DUP3 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9C DUP2 PUSH2 0x2F60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64207061796D656E7420746F20437261667469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6178000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFF PUSH1 0x22 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x300A DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x302E DUP2 PUSH2 0x2FF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x304A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x3057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x3064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53746174757320616C7265616479207365740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A2 PUSH1 0x12 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x30AD DUP3 PUSH2 0x306C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D1 DUP2 PUSH2 0x3095 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x311F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3132 JUMPI PUSH2 0x3131 PUSH2 0x30D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x317C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3197 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x31CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31EB DUP2 PUSH2 0x31D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3206 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x3213 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x3220 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x322D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22C1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP3 PUSH20 0xB7F8141B386740E4E48A6313ABADBB3EE07D9A76 0xCC INVALID 0x23 0xE4 DUP11 0xE3 NOT 0xFB 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"306:7462:27:-:0;;;1044:17;1009:52;;1129:21;1094:56;;1214:22;1178:58;;2443:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:12:27;1857:1:14;2061:7;:21;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:20;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;2583:42:27::2;2565:15;;:60;;;;;;;;;;;;;;;;;;2660:1;2636:21:::0;:25:::2;;;;2684:12;2672:9;;:24;;;;;;;;;;;;;;;;;;2443:296:::0;306:7462;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:15:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:15:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:17:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;88:117:31:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;6781:77::-;6818:7;6847:5;6836:16;;6781:77;;;:::o;6864:118::-;6951:24;6969:5;6951:24;:::i;:::-;6946:3;6939:37;6864:118;;:::o;6988:::-;7075:24;7093:5;7075:24;:::i;:::-;7070:3;7063:37;6988:118;;:::o;7112:664::-;7317:4;7355:3;7344:9;7340:19;7332:27;;7369:71;7437:1;7426:9;7422:17;7413:6;7369:71;:::i;:::-;7450:72;7518:2;7507:9;7503:18;7494:6;7450:72;:::i;:::-;7532;7600:2;7589:9;7585:18;7576:6;7532:72;:::i;:::-;7614;7682:2;7671:9;7667:18;7658:6;7614:72;:::i;:::-;7696:73;7764:3;7753:9;7749:19;7740:6;7696:73;:::i;:::-;7112:664;;;;;;;;:::o;7782:169::-;7866:11;7900:6;7895:3;7888:19;7940:4;7935:3;7931:14;7916:29;;7782:169;;;;:::o;7957:246::-;8038:1;8048:113;8062:6;8059:1;8056:13;8048:113;;;8147:1;8142:3;8138:11;8132:18;8128:1;8123:3;8119:11;8112:39;8084:2;8081:1;8077:10;8072:15;;8048:113;;;8195:1;8186:6;8181:3;8177:16;8170:27;8019:184;7957:246;;;:::o;8209:102::-;8250:6;8301:2;8297:7;8292:2;8285:5;8281:14;8277:28;8267:38;;8209:102;;;:::o;8317:377::-;8405:3;8433:39;8466:5;8433:39;:::i;:::-;8488:71;8552:6;8547:3;8488:71;:::i;:::-;8481:78;;8568:65;8626:6;8621:3;8614:4;8607:5;8603:16;8568:65;:::i;:::-;8658:29;8680:6;8658:29;:::i;:::-;8653:3;8649:39;8642:46;;8409:285;8317:377;;;;:::o;8700:313::-;8813:4;8851:2;8840:9;8836:18;8828:26;;8900:9;8894:4;8890:20;8886:1;8875:9;8871:17;8864:47;8928:78;9001:4;8992:6;8928:78;:::i;:::-;8920:86;;8700:313;;;;:::o;9019:98::-;9070:6;9104:5;9098:12;9088:22;;9019:98;;;:::o;9123:116::-;9174:4;9197:3;9189:11;;9227:4;9222:3;9218:14;9210:22;;9123:116;;;:::o;9245:154::-;9288:11;9324:29;9348:3;9342:10;9324:29;:::i;:::-;9387:5;9363:29;;9300:99;9245:154;;;:::o;9405:594::-;9489:5;9520:38;9552:5;9520:38;:::i;:::-;9583:5;9610:40;9644:5;9610:40;:::i;:::-;9598:52;;9669:35;9695:8;9669:35;:::i;:::-;9660:44;;9728:2;9720:6;9717:14;9714:278;;;9799:169;9884:66;9854:6;9850:2;9846:15;9843:1;9839:23;9799:169;:::i;:::-;9776:5;9755:227;9746:236;;9714:278;9495:504;;9405:594;;;:::o;306:7462:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_FEE_PERCENTAGE_7830":{"entryPoint":2210,"id":7830,"parameterSlots":0,"returnSlots":0},"@MAX_PAYMENT_7836":{"entryPoint":3732,"id":7836,"parameterSlots":0,"returnSlots":0},"@MIN_PAYMENT_7833":{"entryPoint":3749,"id":7833,"parameterSlots":0,"returnSlots":0},"@_8397":{"entryPoint":null,"id":8397,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_4170":{"entryPoint":6226,"id":4170,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4182":{"entryPoint":6285,"id":4182,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_4100":{"entryPoint":7490,"id":4100,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":5893,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_4079":{"entryPoint":6678,"id":4079,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4116":{"entryPoint":6414,"id":4116,"parameterSlots":1,"returnSlots":1},"@_msgSender_2561":{"entryPoint":6494,"id":2561,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2805":{"entryPoint":6484,"id":2805,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2797":{"entryPoint":6344,"id":2797,"parameterSlots":0,"returnSlots":0},"@_throwError_3955":{"entryPoint":7018,"id":3955,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6028,"id":146,"parameterSlots":1,"returnSlots":0},"@byteLength_2935":{"entryPoint":7884,"id":2935,"parameterSlots":1,"returnSlots":1},"@craftiaxAddress_7825":{"entryPoint":2873,"id":7825,"parameterSlots":0,"returnSlots":0},"@craftiaxFeePercentage_7827":{"entryPoint":1262,"id":7827,"parameterSlots":0,"returnSlots":0},"@eip712Domain_4158":{"entryPoint":3203,"id":4158,"parameterSlots":0,"returnSlots":7},"@generalMaxPayment_7842":{"entryPoint":3743,"id":7842,"parameterSlots":0,"returnSlots":0},"@generalMinPayment_7839":{"entryPoint":2215,"id":7839,"parameterSlots":0,"returnSlots":0},"@invalidateNonce_8393":{"entryPoint":1841,"id":8393,"parameterSlots":1,"returnSlots":0},"@isVerifiedArtist_7849":{"entryPoint":2221,"id":7849,"parameterSlots":0,"returnSlots":0},"@nonces_8354":{"entryPoint":2800,"id":8354,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3373,"id":67,"parameterSlots":0,"returnSlots":1},"@payArtist_8104":{"entryPoint":3893,"id":8104,"parameterSlots":3,"returnSlots":0},"@recover_3712":{"entryPoint":6440,"id":3712,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2394,"id":98,"parameterSlots":0,"returnSlots":0},"@setVerificationStatusBatch_8260":{"entryPoint":1274,"id":8260,"parameterSlots":3,"returnSlots":0},"@setVerificationStatus_8200":{"entryPoint":5459,"id":8200,"parameterSlots":2,"returnSlots":0},"@toStringWithFallback_3002":{"entryPoint":6502,"id":3002,"parameterSlots":2,"returnSlots":1},"@toString_2903":{"entryPoint":7374,"id":2903,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4256":{"entryPoint":6861,"id":4256,"parameterSlots":2,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3759,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_3682":{"entryPoint":6926,"id":3682,"parameterSlots":2,"returnSlots":3},"@tryRecover_3870":{"entryPoint":7640,"id":3870,"parameterSlots":4,"returnSlots":3},"@updateCraftiaxAddress_8137":{"entryPoint":2414,"id":8137,"parameterSlots":1,"returnSlots":0},"@updateFeePercentage_8160":{"entryPoint":2253,"id":8160,"parameterSlots":1,"returnSlots":0},"@updatePaymentLimits_8311":{"entryPoint":2911,"id":8311,"parameterSlots":3,"returnSlots":0},"@updateVerifier_8342":{"entryPoint":3415,"id":8342,"parameterSlots":1,"returnSlots":0},"@verifiedMaxPayment_7845":{"entryPoint":1268,"id":7845,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9426,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":8051,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9538,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool":{"entryPoint":8193,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":8601,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8428,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":8728,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244_to_t_string_memory_ptr_fromStack":{"entryPoint":11374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack":{"entryPoint":10244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993_to_t_string_memory_ptr_fromStack":{"entryPoint":10028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f_to_t_string_memory_ptr_fromStack":{"entryPoint":10644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack":{"entryPoint":11266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2_to_t_string_memory_ptr_fromStack":{"entryPoint":10498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152_to_t_string_memory_ptr_fromStack":{"entryPoint":11736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85_to_t_string_memory_ptr_fromStack":{"entryPoint":10136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5_to_t_string_memory_ptr_fromStack":{"entryPoint":11520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2_to_t_string_memory_ptr_fromStack":{"entryPoint":12274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack":{"entryPoint":11061,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84_to_t_string_memory_ptr_fromStack":{"entryPoint":10352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a_to_t_string_memory_ptr_fromStack":{"entryPoint":12437,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68_to_t_string_memory_ptr_fromStack":{"entryPoint":10953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9_to_t_string_memory_ptr_fromStack":{"entryPoint":9801,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04_to_t_string_memory_ptr_fromStack":{"entryPoint":11628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7_to_t_string_memory_ptr_fromStack":{"entryPoint":10790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9_to_t_string_memory_ptr_fromStack":{"entryPoint":12128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7974,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":12770,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12066,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9102,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11128,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":12674,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":12785,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11409,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10279,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11301,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10171,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11555,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12309,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12472,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9836,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11663,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10825,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12341,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10857,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":9335,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8016,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9362,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8940,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8912,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8743,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8995,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8923,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12017,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8754,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11916,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11803,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11965,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8321,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8137,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":8684,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8887,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8289,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7964,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12757,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9411,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8771,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12551,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9286,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":9915,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9868,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11869,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12600,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12504,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9713,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":8041,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8036,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8046,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9234,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8031,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8026,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8813,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244":{"entryPoint":11333,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226":{"entryPoint":10203,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993":{"entryPoint":9987,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f":{"entryPoint":10565,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":11225,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2":{"entryPoint":10419,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152":{"entryPoint":11695,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85":{"entryPoint":10095,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5":{"entryPoint":11441,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2":{"entryPoint":12195,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517":{"entryPoint":11020,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84":{"entryPoint":10311,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a":{"entryPoint":12396,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68":{"entryPoint":10912,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9":{"entryPoint":9760,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12028,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04":{"entryPoint":11587,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7":{"entryPoint":10711,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9":{"entryPoint":12087,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8339,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8149,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8470,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37674:31","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:31","statements":[{"nodeType":"YulAssignment","src":"62:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:31","type":""}],"src":"7:77:31"},{"body":{"nodeType":"YulBlock","src":"155:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:31"},"nodeType":"YulFunctionCall","src":"177:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:31"},"nodeType":"YulFunctionCall","src":"165:37:31"},"nodeType":"YulExpressionStatement","src":"165:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:31","type":""}],"src":"90:118:31"},{"body":{"nodeType":"YulBlock","src":"312:124:31","statements":[{"nodeType":"YulAssignment","src":"322:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:31"},"nodeType":"YulFunctionCall","src":"330:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:31"},"nodeType":"YulFunctionCall","src":"411:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:31"},"nodeType":"YulFunctionCall","src":"358:71:31"},"nodeType":"YulExpressionStatement","src":"358:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:31","type":""}],"src":"214:222:31"},{"body":{"nodeType":"YulBlock","src":"482:35:31","statements":[{"nodeType":"YulAssignment","src":"492:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:31"},"nodeType":"YulFunctionCall","src":"502:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:31","type":""}],"src":"442:75:31"},{"body":{"nodeType":"YulBlock","src":"612:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:31"},"nodeType":"YulFunctionCall","src":"622:12:31"},"nodeType":"YulExpressionStatement","src":"622:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:31"},{"body":{"nodeType":"YulBlock","src":"735:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:31"},"nodeType":"YulFunctionCall","src":"745:12:31"},"nodeType":"YulExpressionStatement","src":"745:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:31"},{"body":{"nodeType":"YulBlock","src":"858:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:31"},"nodeType":"YulFunctionCall","src":"868:12:31"},"nodeType":"YulExpressionStatement","src":"868:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:31"},{"body":{"nodeType":"YulBlock","src":"981:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:31"},"nodeType":"YulFunctionCall","src":"991:12:31"},"nodeType":"YulExpressionStatement","src":"991:12:31"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"892:117:31"},{"body":{"nodeType":"YulBlock","src":"1104:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1114:6:31"},"nodeType":"YulFunctionCall","src":"1114:12:31"},"nodeType":"YulExpressionStatement","src":"1114:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1015:117:31"},{"body":{"nodeType":"YulBlock","src":"1245:478:31","statements":[{"body":{"nodeType":"YulBlock","src":"1294:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1296:77:31"},"nodeType":"YulFunctionCall","src":"1296:79:31"},"nodeType":"YulExpressionStatement","src":"1296:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1273:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1281:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:31"},"nodeType":"YulFunctionCall","src":"1269:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"1288:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1265:3:31"},"nodeType":"YulFunctionCall","src":"1265:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1258:6:31"},"nodeType":"YulFunctionCall","src":"1258:35:31"},"nodeType":"YulIf","src":"1255:122:31"},{"nodeType":"YulAssignment","src":"1386:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1409:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1396:12:31"},"nodeType":"YulFunctionCall","src":"1396:20:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1386:6:31"}]},{"body":{"nodeType":"YulBlock","src":"1459:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1461:77:31"},"nodeType":"YulFunctionCall","src":"1461:79:31"},"nodeType":"YulExpressionStatement","src":"1461:79:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1431:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1439:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1428:2:31"},"nodeType":"YulFunctionCall","src":"1428:30:31"},"nodeType":"YulIf","src":"1425:117:31"},{"nodeType":"YulAssignment","src":"1551:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1567:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1575:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:31"},"nodeType":"YulFunctionCall","src":"1563:17:31"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1551:8:31"}]},{"body":{"nodeType":"YulBlock","src":"1634:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1636:77:31"},"nodeType":"YulFunctionCall","src":"1636:79:31"},"nodeType":"YulExpressionStatement","src":"1636:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1599:8:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1613:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1621:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1609:3:31"},"nodeType":"YulFunctionCall","src":"1609:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:31"},"nodeType":"YulFunctionCall","src":"1595:32:31"},{"name":"end","nodeType":"YulIdentifier","src":"1629:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1592:2:31"},"nodeType":"YulFunctionCall","src":"1592:41:31"},"nodeType":"YulIf","src":"1589:128:31"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1212:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1220:3:31","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1228:8:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1238:6:31","type":""}],"src":"1155:568:31"},{"body":{"nodeType":"YulBlock","src":"1771:48:31","statements":[{"nodeType":"YulAssignment","src":"1781:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1806:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1799:6:31"},"nodeType":"YulFunctionCall","src":"1799:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1792:6:31"},"nodeType":"YulFunctionCall","src":"1792:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1781:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1753:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1763:7:31","type":""}],"src":"1729:90:31"},{"body":{"nodeType":"YulBlock","src":"1865:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"1919:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1928:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1931:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1921:6:31"},"nodeType":"YulFunctionCall","src":"1921:12:31"},"nodeType":"YulExpressionStatement","src":"1921:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1888:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1910:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1895:14:31"},"nodeType":"YulFunctionCall","src":"1895:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1885:2:31"},"nodeType":"YulFunctionCall","src":"1885:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1878:6:31"},"nodeType":"YulFunctionCall","src":"1878:40:31"},"nodeType":"YulIf","src":"1875:60:31"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1858:5:31","type":""}],"src":"1825:116:31"},{"body":{"nodeType":"YulBlock","src":"1996:84:31","statements":[{"nodeType":"YulAssignment","src":"2006:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2028:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2015:12:31"},"nodeType":"YulFunctionCall","src":"2015:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2006:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2068:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"2044:23:31"},"nodeType":"YulFunctionCall","src":"2044:30:31"},"nodeType":"YulExpressionStatement","src":"2044:30:31"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1974:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1982:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1990:5:31","type":""}],"src":"1947:133:31"},{"body":{"nodeType":"YulBlock","src":"2201:583:31","statements":[{"body":{"nodeType":"YulBlock","src":"2247:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2249:77:31"},"nodeType":"YulFunctionCall","src":"2249:79:31"},"nodeType":"YulExpressionStatement","src":"2249:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2222:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2231:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2218:3:31"},"nodeType":"YulFunctionCall","src":"2218:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2243:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2214:3:31"},"nodeType":"YulFunctionCall","src":"2214:32:31"},"nodeType":"YulIf","src":"2211:119:31"},{"nodeType":"YulBlock","src":"2340:312:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2355:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2386:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2397:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2382:3:31"},"nodeType":"YulFunctionCall","src":"2382:17:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2369:12:31"},"nodeType":"YulFunctionCall","src":"2369:31:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2359:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2447:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2449:77:31"},"nodeType":"YulFunctionCall","src":"2449:79:31"},"nodeType":"YulExpressionStatement","src":"2449:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2419:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2427:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2416:2:31"},"nodeType":"YulFunctionCall","src":"2416:30:31"},"nodeType":"YulIf","src":"2413:117:31"},{"nodeType":"YulAssignment","src":"2544:98:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2614:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2625:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:31"},"nodeType":"YulFunctionCall","src":"2610:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2634:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"2562:47:31"},"nodeType":"YulFunctionCall","src":"2562:80:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2544:6:31"},{"name":"value1","nodeType":"YulIdentifier","src":"2552:6:31"}]}]},{"nodeType":"YulBlock","src":"2662:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2677:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2691:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2681:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2707:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2739:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2750:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:31"},"nodeType":"YulFunctionCall","src":"2735:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2759:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2717:17:31"},"nodeType":"YulFunctionCall","src":"2717:50:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2707:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2155:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2166:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2178:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2186:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2194:6:31","type":""}],"src":"2086:698:31"},{"body":{"nodeType":"YulBlock","src":"2835:81:31","statements":[{"nodeType":"YulAssignment","src":"2845:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2860:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2867:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2856:3:31"},"nodeType":"YulFunctionCall","src":"2856:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2845:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2817:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2827:7:31","type":""}],"src":"2790:126:31"},{"body":{"nodeType":"YulBlock","src":"2967:51:31","statements":[{"nodeType":"YulAssignment","src":"2977:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3006:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2988:17:31"},"nodeType":"YulFunctionCall","src":"2988:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2977:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2949:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2959:7:31","type":""}],"src":"2922:96:31"},{"body":{"nodeType":"YulBlock","src":"3067:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"3124:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3133:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3136:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3126:6:31"},"nodeType":"YulFunctionCall","src":"3126:12:31"},"nodeType":"YulExpressionStatement","src":"3126:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3090:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3115:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3097:17:31"},"nodeType":"YulFunctionCall","src":"3097:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3087:2:31"},"nodeType":"YulFunctionCall","src":"3087:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3080:6:31"},"nodeType":"YulFunctionCall","src":"3080:43:31"},"nodeType":"YulIf","src":"3077:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3060:5:31","type":""}],"src":"3024:122:31"},{"body":{"nodeType":"YulBlock","src":"3204:87:31","statements":[{"nodeType":"YulAssignment","src":"3214:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3236:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3223:12:31"},"nodeType":"YulFunctionCall","src":"3223:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3214:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3279:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3252:26:31"},"nodeType":"YulFunctionCall","src":"3252:33:31"},"nodeType":"YulExpressionStatement","src":"3252:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3182:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"3190:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3198:5:31","type":""}],"src":"3152:139:31"},{"body":{"nodeType":"YulBlock","src":"3363:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"3409:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3411:77:31"},"nodeType":"YulFunctionCall","src":"3411:79:31"},"nodeType":"YulExpressionStatement","src":"3411:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3380:3:31"},"nodeType":"YulFunctionCall","src":"3380:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3376:3:31"},"nodeType":"YulFunctionCall","src":"3376:32:31"},"nodeType":"YulIf","src":"3373:119:31"},{"nodeType":"YulBlock","src":"3502:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3517:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3531:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3521:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3546:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3581:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3592:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3577:3:31"},"nodeType":"YulFunctionCall","src":"3577:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3601:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3556:20:31"},"nodeType":"YulFunctionCall","src":"3556:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3546:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3333:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3344:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3356:6:31","type":""}],"src":"3297:329:31"},{"body":{"nodeType":"YulBlock","src":"3691:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3708:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3728:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3713:14:31"},"nodeType":"YulFunctionCall","src":"3713:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3701:6:31"},"nodeType":"YulFunctionCall","src":"3701:34:31"},"nodeType":"YulExpressionStatement","src":"3701:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3679:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3686:3:31","type":""}],"src":"3632:109:31"},{"body":{"nodeType":"YulBlock","src":"3839:118:31","statements":[{"nodeType":"YulAssignment","src":"3849:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:31"},"nodeType":"YulFunctionCall","src":"3857:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3849:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3923:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3947:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3932:3:31"},"nodeType":"YulFunctionCall","src":"3932:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3885:37:31"},"nodeType":"YulFunctionCall","src":"3885:65:31"},"nodeType":"YulExpressionStatement","src":"3885:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3811:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3823:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3834:4:31","type":""}],"src":"3747:210:31"},{"body":{"nodeType":"YulBlock","src":"4006:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"4063:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4072:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4075:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4065:6:31"},"nodeType":"YulFunctionCall","src":"4065:12:31"},"nodeType":"YulExpressionStatement","src":"4065:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4029:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4054:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4036:17:31"},"nodeType":"YulFunctionCall","src":"4036:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4026:2:31"},"nodeType":"YulFunctionCall","src":"4026:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4019:6:31"},"nodeType":"YulFunctionCall","src":"4019:43:31"},"nodeType":"YulIf","src":"4016:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3999:5:31","type":""}],"src":"3963:122:31"},{"body":{"nodeType":"YulBlock","src":"4143:87:31","statements":[{"nodeType":"YulAssignment","src":"4153:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4162:12:31"},"nodeType":"YulFunctionCall","src":"4162:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4153:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4218:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4191:26:31"},"nodeType":"YulFunctionCall","src":"4191:33:31"},"nodeType":"YulExpressionStatement","src":"4191:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4121:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4129:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4137:5:31","type":""}],"src":"4091:139:31"},{"body":{"nodeType":"YulBlock","src":"4302:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"4348:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4350:77:31"},"nodeType":"YulFunctionCall","src":"4350:79:31"},"nodeType":"YulExpressionStatement","src":"4350:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4323:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4332:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4319:3:31"},"nodeType":"YulFunctionCall","src":"4319:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4344:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4315:3:31"},"nodeType":"YulFunctionCall","src":"4315:32:31"},"nodeType":"YulIf","src":"4312:119:31"},{"nodeType":"YulBlock","src":"4441:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4456:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4470:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4460:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4485:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4520:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4531:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4516:3:31"},"nodeType":"YulFunctionCall","src":"4516:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4540:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4495:20:31"},"nodeType":"YulFunctionCall","src":"4495:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4485:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4272:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4283:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4295:6:31","type":""}],"src":"4236:329:31"},{"body":{"nodeType":"YulBlock","src":"4636:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4653:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4676:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4658:17:31"},"nodeType":"YulFunctionCall","src":"4658:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4646:6:31"},"nodeType":"YulFunctionCall","src":"4646:37:31"},"nodeType":"YulExpressionStatement","src":"4646:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4624:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4631:3:31","type":""}],"src":"4571:118:31"},{"body":{"nodeType":"YulBlock","src":"4793:124:31","statements":[{"nodeType":"YulAssignment","src":"4803:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4815:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4826:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4811:3:31"},"nodeType":"YulFunctionCall","src":"4811:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4803:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4883:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4896:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4907:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:31"},"nodeType":"YulFunctionCall","src":"4892:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4839:43:31"},"nodeType":"YulFunctionCall","src":"4839:71:31"},"nodeType":"YulExpressionStatement","src":"4839:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4765:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4777:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4788:4:31","type":""}],"src":"4695:222:31"},{"body":{"nodeType":"YulBlock","src":"5023:519:31","statements":[{"body":{"nodeType":"YulBlock","src":"5069:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5071:77:31"},"nodeType":"YulFunctionCall","src":"5071:79:31"},"nodeType":"YulExpressionStatement","src":"5071:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5044:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5053:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5040:3:31"},"nodeType":"YulFunctionCall","src":"5040:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5065:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5036:3:31"},"nodeType":"YulFunctionCall","src":"5036:32:31"},"nodeType":"YulIf","src":"5033:119:31"},{"nodeType":"YulBlock","src":"5162:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5177:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5191:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5181:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5206:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5241:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5252:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5237:3:31"},"nodeType":"YulFunctionCall","src":"5237:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5261:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5216:20:31"},"nodeType":"YulFunctionCall","src":"5216:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5206:6:31"}]}]},{"nodeType":"YulBlock","src":"5289:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5304:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5318:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5308:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5334:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5380:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:31"},"nodeType":"YulFunctionCall","src":"5365:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5389:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5344:20:31"},"nodeType":"YulFunctionCall","src":"5344:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5334:6:31"}]}]},{"nodeType":"YulBlock","src":"5417:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5432:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5446:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5436:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5462:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5497:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5508:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5493:3:31"},"nodeType":"YulFunctionCall","src":"5493:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5517:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5472:20:31"},"nodeType":"YulFunctionCall","src":"5472:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5462:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4977:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4988:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5000:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5008:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5016:6:31","type":""}],"src":"4923:619:31"},{"body":{"nodeType":"YulBlock","src":"5592:105:31","statements":[{"nodeType":"YulAssignment","src":"5602:89:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5617:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"5624:66:31","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5613:3:31"},"nodeType":"YulFunctionCall","src":"5613:78:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5602:7:31"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5574:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5584:7:31","type":""}],"src":"5548:149:31"},{"body":{"nodeType":"YulBlock","src":"5766:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5783:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5805:5:31"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"5788:16:31"},"nodeType":"YulFunctionCall","src":"5788:23:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5776:6:31"},"nodeType":"YulFunctionCall","src":"5776:36:31"},"nodeType":"YulExpressionStatement","src":"5776:36:31"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5754:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5761:3:31","type":""}],"src":"5703:115:31"},{"body":{"nodeType":"YulBlock","src":"5883:40:31","statements":[{"nodeType":"YulAssignment","src":"5894:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5910:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5904:5:31"},"nodeType":"YulFunctionCall","src":"5904:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5894:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5866:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5876:6:31","type":""}],"src":"5824:99:31"},{"body":{"nodeType":"YulBlock","src":"6025:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6042:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"6047:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6035:6:31"},"nodeType":"YulFunctionCall","src":"6035:19:31"},"nodeType":"YulExpressionStatement","src":"6035:19:31"},{"nodeType":"YulAssignment","src":"6063:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6082:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"6087:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:31"},"nodeType":"YulFunctionCall","src":"6078:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6063:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5997:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"6002:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6013:11:31","type":""}],"src":"5929:169:31"},{"body":{"nodeType":"YulBlock","src":"6166:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6176:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6185:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6180:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6245:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6270:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"6275:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6266:3:31"},"nodeType":"YulFunctionCall","src":"6266:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6289:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"6294:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6285:3:31"},"nodeType":"YulFunctionCall","src":"6285:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6279:5:31"},"nodeType":"YulFunctionCall","src":"6279:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6259:6:31"},"nodeType":"YulFunctionCall","src":"6259:39:31"},"nodeType":"YulExpressionStatement","src":"6259:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6206:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"6209:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6203:2:31"},"nodeType":"YulFunctionCall","src":"6203:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6217:19:31","statements":[{"nodeType":"YulAssignment","src":"6219:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6228:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"6231:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6224:3:31"},"nodeType":"YulFunctionCall","src":"6224:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6219:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6199:3:31","statements":[]},"src":"6195:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6328:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"6333:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:31"},"nodeType":"YulFunctionCall","src":"6324:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"6342:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:31"},"nodeType":"YulFunctionCall","src":"6317:27:31"},"nodeType":"YulExpressionStatement","src":"6317:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6148:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6153:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"6158:6:31","type":""}],"src":"6104:246:31"},{"body":{"nodeType":"YulBlock","src":"6404:54:31","statements":[{"nodeType":"YulAssignment","src":"6414:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6432:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6439:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6428:3:31"},"nodeType":"YulFunctionCall","src":"6428:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6448:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6444:3:31"},"nodeType":"YulFunctionCall","src":"6444:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6424:3:31"},"nodeType":"YulFunctionCall","src":"6424:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6414:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6387:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6397:6:31","type":""}],"src":"6356:102:31"},{"body":{"nodeType":"YulBlock","src":"6556:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6566:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6613:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6580:32:31"},"nodeType":"YulFunctionCall","src":"6580:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6570:6:31","type":""}]},{"nodeType":"YulAssignment","src":"6628:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6694:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"6699:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6635:58:31"},"nodeType":"YulFunctionCall","src":"6635:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6628:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6754:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6761:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:31"},"nodeType":"YulFunctionCall","src":"6750:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"6768:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"6773:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6715:34:31"},"nodeType":"YulFunctionCall","src":"6715:65:31"},"nodeType":"YulExpressionStatement","src":"6715:65:31"},{"nodeType":"YulAssignment","src":"6789:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6800:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6827:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6805:21:31"},"nodeType":"YulFunctionCall","src":"6805:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:31"},"nodeType":"YulFunctionCall","src":"6796:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6789:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6537:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6544:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6552:3:31","type":""}],"src":"6464:377:31"},{"body":{"nodeType":"YulBlock","src":"6892:32:31","statements":[{"nodeType":"YulAssignment","src":"6902:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"6913:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6902:7:31"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6874:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6884:7:31","type":""}],"src":"6847:77:31"},{"body":{"nodeType":"YulBlock","src":"6995:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7012:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7035:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7017:17:31"},"nodeType":"YulFunctionCall","src":"7017:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7005:6:31"},"nodeType":"YulFunctionCall","src":"7005:37:31"},"nodeType":"YulExpressionStatement","src":"7005:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6983:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6990:3:31","type":""}],"src":"6930:118:31"},{"body":{"nodeType":"YulBlock","src":"7128:40:31","statements":[{"nodeType":"YulAssignment","src":"7139:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7155:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7149:5:31"},"nodeType":"YulFunctionCall","src":"7149:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7139:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7111:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7121:6:31","type":""}],"src":"7054:114:31"},{"body":{"nodeType":"YulBlock","src":"7285:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7302:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"7307:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7295:6:31"},"nodeType":"YulFunctionCall","src":"7295:19:31"},"nodeType":"YulExpressionStatement","src":"7295:19:31"},{"nodeType":"YulAssignment","src":"7323:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7342:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7347:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7338:3:31"},"nodeType":"YulFunctionCall","src":"7338:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7323:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7257:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"7262:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7273:11:31","type":""}],"src":"7174:184:31"},{"body":{"nodeType":"YulBlock","src":"7436:60:31","statements":[{"nodeType":"YulAssignment","src":"7446:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7454:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7446:4:31"}]},{"nodeType":"YulAssignment","src":"7467:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7479:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7484:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7475:3:31"},"nodeType":"YulFunctionCall","src":"7475:14:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7467:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7423:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7431:4:31","type":""}],"src":"7364:132:31"},{"body":{"nodeType":"YulBlock","src":"7557:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7574:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7597:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7579:17:31"},"nodeType":"YulFunctionCall","src":"7579:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7567:6:31"},"nodeType":"YulFunctionCall","src":"7567:37:31"},"nodeType":"YulExpressionStatement","src":"7567:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7545:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7552:3:31","type":""}],"src":"7502:108:31"},{"body":{"nodeType":"YulBlock","src":"7696:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7740:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"7748:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7706:33:31"},"nodeType":"YulFunctionCall","src":"7706:46:31"},"nodeType":"YulExpressionStatement","src":"7706:46:31"},{"nodeType":"YulAssignment","src":"7761:28:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7779:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7784:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7775:3:31"},"nodeType":"YulFunctionCall","src":"7775:14:31"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7761:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7669:6:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7677:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7685:10:31","type":""}],"src":"7616:179:31"},{"body":{"nodeType":"YulBlock","src":"7876:38:31","statements":[{"nodeType":"YulAssignment","src":"7886:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7898:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7903:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7894:3:31"},"nodeType":"YulFunctionCall","src":"7894:14:31"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7886:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7863:3:31","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7871:4:31","type":""}],"src":"7801:113:31"},{"body":{"nodeType":"YulBlock","src":"8074:608:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8084:68:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8146:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8098:47:31"},"nodeType":"YulFunctionCall","src":"8098:54:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8088:6:31","type":""}]},{"nodeType":"YulAssignment","src":"8161:93:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8242:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8247:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8168:73:31"},"nodeType":"YulFunctionCall","src":"8168:86:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8161:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"8263:71:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8328:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8278:49:31"},"nodeType":"YulFunctionCall","src":"8278:56:31"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8267:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8343:21:31","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8357:7:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8347:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8433:224:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8447:34:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8474:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8468:5:31"},"nodeType":"YulFunctionCall","src":"8468:13:31"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8451:13:31","type":""}]},{"nodeType":"YulAssignment","src":"8494:70:31","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8545:13:31"},{"name":"pos","nodeType":"YulIdentifier","src":"8560:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8501:43:31"},"nodeType":"YulFunctionCall","src":"8501:63:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8494:3:31"}]},{"nodeType":"YulAssignment","src":"8577:70:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8640:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8587:52:31"},"nodeType":"YulFunctionCall","src":"8587:60:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8577:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8395:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"8398:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8392:2:31"},"nodeType":"YulFunctionCall","src":"8392:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8406:18:31","statements":[{"nodeType":"YulAssignment","src":"8408:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8417:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"8420:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8413:3:31"},"nodeType":"YulFunctionCall","src":"8413:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8408:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"8377:14:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8379:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8388:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8383:1:31","type":""}]}]},"src":"8373:284:31"},{"nodeType":"YulAssignment","src":"8666:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"8673:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8666:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8053:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8060:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8069:3:31","type":""}],"src":"7950:732:31"},{"body":{"nodeType":"YulBlock","src":"9042:861:31","statements":[{"nodeType":"YulAssignment","src":"9052:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9064:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9075:3:31","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9060:3:31"},"nodeType":"YulFunctionCall","src":"9060:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9052:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9131:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9144:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9155:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9140:3:31"},"nodeType":"YulFunctionCall","src":"9140:17:31"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"9089:41:31"},"nodeType":"YulFunctionCall","src":"9089:69:31"},"nodeType":"YulExpressionStatement","src":"9089:69:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9179:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9190:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9175:3:31"},"nodeType":"YulFunctionCall","src":"9175:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9199:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9195:3:31"},"nodeType":"YulFunctionCall","src":"9195:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9168:6:31"},"nodeType":"YulFunctionCall","src":"9168:48:31"},"nodeType":"YulExpressionStatement","src":"9168:48:31"},{"nodeType":"YulAssignment","src":"9225:86:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9297:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"9306:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9233:63:31"},"nodeType":"YulFunctionCall","src":"9233:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9225:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9332:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9343:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9328:3:31"},"nodeType":"YulFunctionCall","src":"9328:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9352:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"9358:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9348:3:31"},"nodeType":"YulFunctionCall","src":"9348:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9321:6:31"},"nodeType":"YulFunctionCall","src":"9321:48:31"},"nodeType":"YulExpressionStatement","src":"9321:48:31"},{"nodeType":"YulAssignment","src":"9378:86:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9450:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"9459:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9386:63:31"},"nodeType":"YulFunctionCall","src":"9386:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9378:4:31"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9518:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9531:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9542:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9527:3:31"},"nodeType":"YulFunctionCall","src":"9527:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9474:43:31"},"nodeType":"YulFunctionCall","src":"9474:72:31"},"nodeType":"YulExpressionStatement","src":"9474:72:31"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9600:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9613:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9624:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9609:3:31"},"nodeType":"YulFunctionCall","src":"9609:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9556:43:31"},"nodeType":"YulFunctionCall","src":"9556:73:31"},"nodeType":"YulExpressionStatement","src":"9556:73:31"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9683:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9696:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9707:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9692:3:31"},"nodeType":"YulFunctionCall","src":"9692:19:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9639:43:31"},"nodeType":"YulFunctionCall","src":"9639:73:31"},"nodeType":"YulExpressionStatement","src":"9639:73:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9733:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9744:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9729:3:31"},"nodeType":"YulFunctionCall","src":"9729:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9754:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"9760:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9750:3:31"},"nodeType":"YulFunctionCall","src":"9750:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9722:6:31"},"nodeType":"YulFunctionCall","src":"9722:49:31"},"nodeType":"YulExpressionStatement","src":"9722:49:31"},{"nodeType":"YulAssignment","src":"9780:116:31","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9882:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"9891:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9788:93:31"},"nodeType":"YulFunctionCall","src":"9788:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9780:4:31"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8966:9:31","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8978:6:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8986:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8994:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9002:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9010:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9018:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9026:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9037:4:31","type":""}],"src":"8688:1215:31"},{"body":{"nodeType":"YulBlock","src":"9998:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10015:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10018:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10008:6:31"},"nodeType":"YulFunctionCall","src":"10008:12:31"},"nodeType":"YulExpressionStatement","src":"10008:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"9909:117:31"},{"body":{"nodeType":"YulBlock","src":"10060:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10077:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10080:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10070:6:31"},"nodeType":"YulFunctionCall","src":"10070:88:31"},"nodeType":"YulExpressionStatement","src":"10070:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10174:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10177:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10167:6:31"},"nodeType":"YulFunctionCall","src":"10167:15:31"},"nodeType":"YulExpressionStatement","src":"10167:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10198:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10201:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10191:6:31"},"nodeType":"YulFunctionCall","src":"10191:15:31"},"nodeType":"YulExpressionStatement","src":"10191:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10032:180:31"},{"body":{"nodeType":"YulBlock","src":"10261:238:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10293:6:31"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10323:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10301:21:31"},"nodeType":"YulFunctionCall","src":"10301:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10289:3:31"},"nodeType":"YulFunctionCall","src":"10289:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10275:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"10440:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10442:16:31"},"nodeType":"YulFunctionCall","src":"10442:18:31"},"nodeType":"YulExpressionStatement","src":"10442:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10383:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"10395:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10380:2:31"},"nodeType":"YulFunctionCall","src":"10380:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10419:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10431:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10416:2:31"},"nodeType":"YulFunctionCall","src":"10416:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10377:2:31"},"nodeType":"YulFunctionCall","src":"10377:62:31"},"nodeType":"YulIf","src":"10374:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10478:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10482:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10471:6:31"},"nodeType":"YulFunctionCall","src":"10471:22:31"},"nodeType":"YulExpressionStatement","src":"10471:22:31"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10247:6:31","type":""},{"name":"size","nodeType":"YulTypedName","src":"10255:4:31","type":""}],"src":"10218:281:31"},{"body":{"nodeType":"YulBlock","src":"10546:88:31","statements":[{"nodeType":"YulAssignment","src":"10556:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10566:18:31"},"nodeType":"YulFunctionCall","src":"10566:20:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10556:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10615:6:31"},{"name":"size","nodeType":"YulIdentifier","src":"10623:4:31"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10595:19:31"},"nodeType":"YulFunctionCall","src":"10595:33:31"},"nodeType":"YulExpressionStatement","src":"10595:33:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10530:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10539:6:31","type":""}],"src":"10505:129:31"},{"body":{"nodeType":"YulBlock","src":"10706:241:31","statements":[{"body":{"nodeType":"YulBlock","src":"10811:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10813:16:31"},"nodeType":"YulFunctionCall","src":"10813:18:31"},"nodeType":"YulExpressionStatement","src":"10813:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10783:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10791:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10780:2:31"},"nodeType":"YulFunctionCall","src":"10780:30:31"},"nodeType":"YulIf","src":"10777:56:31"},{"nodeType":"YulAssignment","src":"10843:37:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10873:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10851:21:31"},"nodeType":"YulFunctionCall","src":"10851:29:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10843:4:31"}]},{"nodeType":"YulAssignment","src":"10917:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10929:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"10935:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10925:3:31"},"nodeType":"YulFunctionCall","src":"10925:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10917:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10690:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10701:4:31","type":""}],"src":"10640:307:31"},{"body":{"nodeType":"YulBlock","src":"11017:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11040:3:31"},{"name":"src","nodeType":"YulIdentifier","src":"11045:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11050:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"11027:12:31"},"nodeType":"YulFunctionCall","src":"11027:30:31"},"nodeType":"YulExpressionStatement","src":"11027:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11077:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11082:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11073:3:31"},"nodeType":"YulFunctionCall","src":"11073:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"11091:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11066:6:31"},"nodeType":"YulFunctionCall","src":"11066:27:31"},"nodeType":"YulExpressionStatement","src":"11066:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10999:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11004:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"11009:6:31","type":""}],"src":"10953:146:31"},{"body":{"nodeType":"YulBlock","src":"11188:340:31","statements":[{"nodeType":"YulAssignment","src":"11198:74:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11264:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11223:40:31"},"nodeType":"YulFunctionCall","src":"11223:48:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11207:15:31"},"nodeType":"YulFunctionCall","src":"11207:65:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11198:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11288:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"11295:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11281:6:31"},"nodeType":"YulFunctionCall","src":"11281:21:31"},"nodeType":"YulExpressionStatement","src":"11281:21:31"},{"nodeType":"YulVariableDeclaration","src":"11311:27:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11326:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11333:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:31"},"nodeType":"YulFunctionCall","src":"11322:16:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11315:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11376:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11378:77:31"},"nodeType":"YulFunctionCall","src":"11378:79:31"},"nodeType":"YulExpressionStatement","src":"11378:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11357:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11362:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11353:3:31"},"nodeType":"YulFunctionCall","src":"11353:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"11371:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11350:2:31"},"nodeType":"YulFunctionCall","src":"11350:25:31"},"nodeType":"YulIf","src":"11347:112:31"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11505:3:31"},{"name":"dst","nodeType":"YulIdentifier","src":"11510:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11515:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11468:36:31"},"nodeType":"YulFunctionCall","src":"11468:54:31"},"nodeType":"YulExpressionStatement","src":"11468:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11161:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"11166:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11174:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11182:5:31","type":""}],"src":"11105:423:31"},{"body":{"nodeType":"YulBlock","src":"11608:277:31","statements":[{"body":{"nodeType":"YulBlock","src":"11657:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11659:77:31"},"nodeType":"YulFunctionCall","src":"11659:79:31"},"nodeType":"YulExpressionStatement","src":"11659:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11636:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11644:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11632:3:31"},"nodeType":"YulFunctionCall","src":"11632:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"11651:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11628:3:31"},"nodeType":"YulFunctionCall","src":"11628:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11621:6:31"},"nodeType":"YulFunctionCall","src":"11621:35:31"},"nodeType":"YulIf","src":"11618:122:31"},{"nodeType":"YulVariableDeclaration","src":"11749:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11776:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11763:12:31"},"nodeType":"YulFunctionCall","src":"11763:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11753:6:31","type":""}]},{"nodeType":"YulAssignment","src":"11792:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11852:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11860:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:31"},"nodeType":"YulFunctionCall","src":"11848:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"11867:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"11875:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11801:46:31"},"nodeType":"YulFunctionCall","src":"11801:78:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11792:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11586:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11594:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11602:5:31","type":""}],"src":"11547:338:31"},{"body":{"nodeType":"YulBlock","src":"12000:688:31","statements":[{"body":{"nodeType":"YulBlock","src":"12046:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12048:77:31"},"nodeType":"YulFunctionCall","src":"12048:79:31"},"nodeType":"YulExpressionStatement","src":"12048:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12021:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12030:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12017:3:31"},"nodeType":"YulFunctionCall","src":"12017:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12042:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12013:3:31"},"nodeType":"YulFunctionCall","src":"12013:32:31"},"nodeType":"YulIf","src":"12010:119:31"},{"nodeType":"YulBlock","src":"12139:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12154:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12168:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12158:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12183:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12218:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12229:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12214:3:31"},"nodeType":"YulFunctionCall","src":"12214:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12238:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12193:20:31"},"nodeType":"YulFunctionCall","src":"12193:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12183:6:31"}]}]},{"nodeType":"YulBlock","src":"12266:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12281:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12295:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12285:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12311:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12346:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12357:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12342:3:31"},"nodeType":"YulFunctionCall","src":"12342:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12366:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12321:20:31"},"nodeType":"YulFunctionCall","src":"12321:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12311:6:31"}]}]},{"nodeType":"YulBlock","src":"12394:287:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12409:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12440:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12451:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12436:3:31"},"nodeType":"YulFunctionCall","src":"12436:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12423:12:31"},"nodeType":"YulFunctionCall","src":"12423:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12413:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"12502:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12504:77:31"},"nodeType":"YulFunctionCall","src":"12504:79:31"},"nodeType":"YulExpressionStatement","src":"12504:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12474:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12482:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12471:2:31"},"nodeType":"YulFunctionCall","src":"12471:30:31"},"nodeType":"YulIf","src":"12468:117:31"},{"nodeType":"YulAssignment","src":"12599:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12654:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:31"},"nodeType":"YulFunctionCall","src":"12639:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12663:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12609:29:31"},"nodeType":"YulFunctionCall","src":"12609:62:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12599:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11954:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11965:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11977:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11985:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11993:6:31","type":""}],"src":"11891:797:31"},{"body":{"nodeType":"YulBlock","src":"12774:388:31","statements":[{"body":{"nodeType":"YulBlock","src":"12820:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12822:77:31"},"nodeType":"YulFunctionCall","src":"12822:79:31"},"nodeType":"YulExpressionStatement","src":"12822:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12795:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12804:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12791:3:31"},"nodeType":"YulFunctionCall","src":"12791:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12816:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12787:3:31"},"nodeType":"YulFunctionCall","src":"12787:32:31"},"nodeType":"YulIf","src":"12784:119:31"},{"nodeType":"YulBlock","src":"12913:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12928:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12942:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12932:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12957:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12992:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"13003:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12988:3:31"},"nodeType":"YulFunctionCall","src":"12988:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13012:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12967:20:31"},"nodeType":"YulFunctionCall","src":"12967:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12957:6:31"}]}]},{"nodeType":"YulBlock","src":"13040:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"13055:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"13069:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13059:6:31","type":""}]},{"nodeType":"YulAssignment","src":"13085:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13117:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"13128:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13113:3:31"},"nodeType":"YulFunctionCall","src":"13113:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13137:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"13095:17:31"},"nodeType":"YulFunctionCall","src":"13095:50:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13085:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12736:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12747:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12759:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12767:6:31","type":""}],"src":"12694:468:31"},{"body":{"nodeType":"YulBlock","src":"13196:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13213:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13216:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13206:6:31"},"nodeType":"YulFunctionCall","src":"13206:88:31"},"nodeType":"YulExpressionStatement","src":"13206:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13310:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13313:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13303:6:31"},"nodeType":"YulFunctionCall","src":"13303:15:31"},"nodeType":"YulExpressionStatement","src":"13303:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13334:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13337:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13327:6:31"},"nodeType":"YulFunctionCall","src":"13327:15:31"},"nodeType":"YulExpressionStatement","src":"13327:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13168:180:31"},{"body":{"nodeType":"YulBlock","src":"13460:66:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13482:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"13490:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13478:3:31"},"nodeType":"YulFunctionCall","src":"13478:14:31"},{"hexValue":"496e76616c6964206172746973742061646472657373","kind":"string","nodeType":"YulLiteral","src":"13494:24:31","type":"","value":"Invalid artist address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13471:6:31"},"nodeType":"YulFunctionCall","src":"13471:48:31"},"nodeType":"YulExpressionStatement","src":"13471:48:31"}]},"name":"store_literal_in_memory_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13452:6:31","type":""}],"src":"13354:172:31"},{"body":{"nodeType":"YulBlock","src":"13678:220:31","statements":[{"nodeType":"YulAssignment","src":"13688:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13754:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13759:2:31","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13695:58:31"},"nodeType":"YulFunctionCall","src":"13695:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13688:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13860:3:31"}],"functionName":{"name":"store_literal_in_memory_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9","nodeType":"YulIdentifier","src":"13771:88:31"},"nodeType":"YulFunctionCall","src":"13771:93:31"},"nodeType":"YulExpressionStatement","src":"13771:93:31"},{"nodeType":"YulAssignment","src":"13873:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13884:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13889:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13880:3:31"},"nodeType":"YulFunctionCall","src":"13880:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13873:3:31"}]}]},"name":"abi_encode_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13666:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13674:3:31","type":""}],"src":"13532:366:31"},{"body":{"nodeType":"YulBlock","src":"14075:248:31","statements":[{"nodeType":"YulAssignment","src":"14085:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14097:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14108:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14093:3:31"},"nodeType":"YulFunctionCall","src":"14093:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14085:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14132:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14143:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14128:3:31"},"nodeType":"YulFunctionCall","src":"14128:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14151:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14157:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14147:3:31"},"nodeType":"YulFunctionCall","src":"14147:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14121:6:31"},"nodeType":"YulFunctionCall","src":"14121:47:31"},"nodeType":"YulExpressionStatement","src":"14121:47:31"},{"nodeType":"YulAssignment","src":"14177:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14311:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14185:124:31"},"nodeType":"YulFunctionCall","src":"14185:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14177:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14055:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14070:4:31","type":""}],"src":"13904:419:31"},{"body":{"nodeType":"YulBlock","src":"14357:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14374:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14377:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14367:6:31"},"nodeType":"YulFunctionCall","src":"14367:88:31"},"nodeType":"YulExpressionStatement","src":"14367:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14471:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14474:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14464:6:31"},"nodeType":"YulFunctionCall","src":"14464:15:31"},"nodeType":"YulExpressionStatement","src":"14464:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14495:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14498:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14488:6:31"},"nodeType":"YulFunctionCall","src":"14488:15:31"},"nodeType":"YulExpressionStatement","src":"14488:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14329:180:31"},{"body":{"nodeType":"YulBlock","src":"14558:190:31","statements":[{"nodeType":"YulAssignment","src":"14568:33:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14595:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14577:17:31"},"nodeType":"YulFunctionCall","src":"14577:24:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14568:5:31"}]},{"body":{"nodeType":"YulBlock","src":"14691:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14693:16:31"},"nodeType":"YulFunctionCall","src":"14693:18:31"},"nodeType":"YulExpressionStatement","src":"14693:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14616:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"14623:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14613:2:31"},"nodeType":"YulFunctionCall","src":"14613:77:31"},"nodeType":"YulIf","src":"14610:103:31"},{"nodeType":"YulAssignment","src":"14722:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14733:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"14740:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14729:3:31"},"nodeType":"YulFunctionCall","src":"14729:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14722:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14544:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14554:3:31","type":""}],"src":"14515:233:31"},{"body":{"nodeType":"YulBlock","src":"14860:64:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14882:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"14890:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14878:3:31"},"nodeType":"YulFunctionCall","src":"14878:14:31"},{"hexValue":"496e76616c696420757365722061646472657373","kind":"string","nodeType":"YulLiteral","src":"14894:22:31","type":"","value":"Invalid user address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14871:6:31"},"nodeType":"YulFunctionCall","src":"14871:46:31"},"nodeType":"YulExpressionStatement","src":"14871:46:31"}]},"name":"store_literal_in_memory_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14852:6:31","type":""}],"src":"14754:170:31"},{"body":{"nodeType":"YulBlock","src":"15076:220:31","statements":[{"nodeType":"YulAssignment","src":"15086:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15152:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"15157:2:31","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15093:58:31"},"nodeType":"YulFunctionCall","src":"15093:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15086:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15258:3:31"}],"functionName":{"name":"store_literal_in_memory_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","nodeType":"YulIdentifier","src":"15169:88:31"},"nodeType":"YulFunctionCall","src":"15169:93:31"},"nodeType":"YulExpressionStatement","src":"15169:93:31"},{"nodeType":"YulAssignment","src":"15271:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15282:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"15287:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15278:3:31"},"nodeType":"YulFunctionCall","src":"15278:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15271:3:31"}]}]},"name":"abi_encode_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15064:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15072:3:31","type":""}],"src":"14930:366:31"},{"body":{"nodeType":"YulBlock","src":"15473:248:31","statements":[{"nodeType":"YulAssignment","src":"15483:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15495:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15506:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15491:3:31"},"nodeType":"YulFunctionCall","src":"15491:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15483:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15530:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15541:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15526:3:31"},"nodeType":"YulFunctionCall","src":"15526:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15549:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"15555:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15545:3:31"},"nodeType":"YulFunctionCall","src":"15545:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15519:6:31"},"nodeType":"YulFunctionCall","src":"15519:47:31"},"nodeType":"YulExpressionStatement","src":"15519:47:31"},{"nodeType":"YulAssignment","src":"15575:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15709:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15583:124:31"},"nodeType":"YulFunctionCall","src":"15583:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15575:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15453:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15468:4:31","type":""}],"src":"15302:419:31"},{"body":{"nodeType":"YulBlock","src":"15833:71:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15855:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"15863:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15851:3:31"},"nodeType":"YulFunctionCall","src":"15851:14:31"},{"hexValue":"4665652065786365656473206d6178696d756d20616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"15867:29:31","type":"","value":"Fee exceeds maximum allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15844:6:31"},"nodeType":"YulFunctionCall","src":"15844:53:31"},"nodeType":"YulExpressionStatement","src":"15844:53:31"}]},"name":"store_literal_in_memory_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15825:6:31","type":""}],"src":"15727:177:31"},{"body":{"nodeType":"YulBlock","src":"16056:220:31","statements":[{"nodeType":"YulAssignment","src":"16066:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16132:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"16137:2:31","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16073:58:31"},"nodeType":"YulFunctionCall","src":"16073:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16066:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16238:3:31"}],"functionName":{"name":"store_literal_in_memory_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85","nodeType":"YulIdentifier","src":"16149:88:31"},"nodeType":"YulFunctionCall","src":"16149:93:31"},"nodeType":"YulExpressionStatement","src":"16149:93:31"},{"nodeType":"YulAssignment","src":"16251:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16262:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"16267:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16258:3:31"},"nodeType":"YulFunctionCall","src":"16258:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16251:3:31"}]}]},"name":"abi_encode_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16044:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16052:3:31","type":""}],"src":"15910:366:31"},{"body":{"nodeType":"YulBlock","src":"16453:248:31","statements":[{"nodeType":"YulAssignment","src":"16463:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16475:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16486:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16471:3:31"},"nodeType":"YulFunctionCall","src":"16471:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16463:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16510:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16521:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16506:3:31"},"nodeType":"YulFunctionCall","src":"16506:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16529:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"16535:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16525:3:31"},"nodeType":"YulFunctionCall","src":"16525:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16499:6:31"},"nodeType":"YulFunctionCall","src":"16499:47:31"},"nodeType":"YulExpressionStatement","src":"16499:47:31"},{"nodeType":"YulAssignment","src":"16555:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16689:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16563:124:31"},"nodeType":"YulFunctionCall","src":"16563:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16555:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16433:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16448:4:31","type":""}],"src":"16282:419:31"},{"body":{"nodeType":"YulBlock","src":"16813:59:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16835:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"16843:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16831:3:31"},"nodeType":"YulFunctionCall","src":"16831:14:31"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"16847:17:31","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16824:6:31"},"nodeType":"YulFunctionCall","src":"16824:41:31"},"nodeType":"YulExpressionStatement","src":"16824:41:31"}]},"name":"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16805:6:31","type":""}],"src":"16707:165:31"},{"body":{"nodeType":"YulBlock","src":"17024:220:31","statements":[{"nodeType":"YulAssignment","src":"17034:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17100:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"17105:2:31","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17041:58:31"},"nodeType":"YulFunctionCall","src":"17041:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17034:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17206:3:31"}],"functionName":{"name":"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","nodeType":"YulIdentifier","src":"17117:88:31"},"nodeType":"YulFunctionCall","src":"17117:93:31"},"nodeType":"YulExpressionStatement","src":"17117:93:31"},{"nodeType":"YulAssignment","src":"17219:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17230:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"17235:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17226:3:31"},"nodeType":"YulFunctionCall","src":"17226:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17219:3:31"}]}]},"name":"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17012:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17020:3:31","type":""}],"src":"16878:366:31"},{"body":{"nodeType":"YulBlock","src":"17421:248:31","statements":[{"nodeType":"YulAssignment","src":"17431:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17443:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17454:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17439:3:31"},"nodeType":"YulFunctionCall","src":"17439:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17431:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17478:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17489:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17474:3:31"},"nodeType":"YulFunctionCall","src":"17474:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17497:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17503:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17493:3:31"},"nodeType":"YulFunctionCall","src":"17493:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17467:6:31"},"nodeType":"YulFunctionCall","src":"17467:47:31"},"nodeType":"YulExpressionStatement","src":"17467:47:31"},{"nodeType":"YulAssignment","src":"17523:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17657:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17531:124:31"},"nodeType":"YulFunctionCall","src":"17531:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17523:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17401:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17416:4:31","type":""}],"src":"17250:419:31"},{"body":{"nodeType":"YulBlock","src":"17781:65:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17803:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"17811:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17799:3:31"},"nodeType":"YulFunctionCall","src":"17799:14:31"},{"hexValue":"53616d6520616464726573732070726f7669646564","kind":"string","nodeType":"YulLiteral","src":"17815:23:31","type":"","value":"Same address provided"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17792:6:31"},"nodeType":"YulFunctionCall","src":"17792:47:31"},"nodeType":"YulExpressionStatement","src":"17792:47:31"}]},"name":"store_literal_in_memory_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17773:6:31","type":""}],"src":"17675:171:31"},{"body":{"nodeType":"YulBlock","src":"17998:220:31","statements":[{"nodeType":"YulAssignment","src":"18008:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18074:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"18079:2:31","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18015:58:31"},"nodeType":"YulFunctionCall","src":"18015:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18008:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18180:3:31"}],"functionName":{"name":"store_literal_in_memory_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84","nodeType":"YulIdentifier","src":"18091:88:31"},"nodeType":"YulFunctionCall","src":"18091:93:31"},"nodeType":"YulExpressionStatement","src":"18091:93:31"},{"nodeType":"YulAssignment","src":"18193:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18204:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"18209:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18200:3:31"},"nodeType":"YulFunctionCall","src":"18200:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18193:3:31"}]}]},"name":"abi_encode_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17986:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17994:3:31","type":""}],"src":"17852:366:31"},{"body":{"nodeType":"YulBlock","src":"18395:248:31","statements":[{"nodeType":"YulAssignment","src":"18405:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18417:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18428:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18413:3:31"},"nodeType":"YulFunctionCall","src":"18413:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18405:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18452:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18463:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18448:3:31"},"nodeType":"YulFunctionCall","src":"18448:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18471:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"18477:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18467:3:31"},"nodeType":"YulFunctionCall","src":"18467:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18441:6:31"},"nodeType":"YulFunctionCall","src":"18441:47:31"},"nodeType":"YulExpressionStatement","src":"18441:47:31"},{"nodeType":"YulAssignment","src":"18497:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18631:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18505:124:31"},"nodeType":"YulFunctionCall","src":"18505:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18497:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18375:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18390:4:31","type":""}],"src":"18224:419:31"},{"body":{"nodeType":"YulBlock","src":"18755:115:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18777:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18785:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18773:3:31"},"nodeType":"YulFunctionCall","src":"18773:14:31"},{"hexValue":"47656e6572616c206d696e206d7573742062652067726561746572207468616e","kind":"string","nodeType":"YulLiteral","src":"18789:34:31","type":"","value":"General min must be greater than"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18766:6:31"},"nodeType":"YulFunctionCall","src":"18766:58:31"},"nodeType":"YulExpressionStatement","src":"18766:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18845:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18853:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18841:3:31"},"nodeType":"YulFunctionCall","src":"18841:15:31"},{"hexValue":"2030","kind":"string","nodeType":"YulLiteral","src":"18858:4:31","type":"","value":" 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18834:6:31"},"nodeType":"YulFunctionCall","src":"18834:29:31"},"nodeType":"YulExpressionStatement","src":"18834:29:31"}]},"name":"store_literal_in_memory_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18747:6:31","type":""}],"src":"18649:221:31"},{"body":{"nodeType":"YulBlock","src":"19022:220:31","statements":[{"nodeType":"YulAssignment","src":"19032:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19098:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"19103:2:31","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19039:58:31"},"nodeType":"YulFunctionCall","src":"19039:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19032:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19204:3:31"}],"functionName":{"name":"store_literal_in_memory_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2","nodeType":"YulIdentifier","src":"19115:88:31"},"nodeType":"YulFunctionCall","src":"19115:93:31"},"nodeType":"YulExpressionStatement","src":"19115:93:31"},{"nodeType":"YulAssignment","src":"19217:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19228:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"19233:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19224:3:31"},"nodeType":"YulFunctionCall","src":"19224:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19217:3:31"}]}]},"name":"abi_encode_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19010:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19018:3:31","type":""}],"src":"18876:366:31"},{"body":{"nodeType":"YulBlock","src":"19419:248:31","statements":[{"nodeType":"YulAssignment","src":"19429:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19441:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19452:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19437:3:31"},"nodeType":"YulFunctionCall","src":"19437:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19429:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19476:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19487:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19472:3:31"},"nodeType":"YulFunctionCall","src":"19472:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19495:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"19501:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19491:3:31"},"nodeType":"YulFunctionCall","src":"19491:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19465:6:31"},"nodeType":"YulFunctionCall","src":"19465:47:31"},"nodeType":"YulExpressionStatement","src":"19465:47:31"},{"nodeType":"YulAssignment","src":"19521:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19655:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19529:124:31"},"nodeType":"YulFunctionCall","src":"19529:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19521:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19399:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19414:4:31","type":""}],"src":"19248:419:31"},{"body":{"nodeType":"YulBlock","src":"19779:117:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19801:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"19809:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19797:3:31"},"nodeType":"YulFunctionCall","src":"19797:14:31"},{"hexValue":"47656e6572616c206d6178206d7573742062652067726561746572207468616e","kind":"string","nodeType":"YulLiteral","src":"19813:34:31","type":"","value":"General max must be greater than"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19790:6:31"},"nodeType":"YulFunctionCall","src":"19790:58:31"},"nodeType":"YulExpressionStatement","src":"19790:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19869:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"19877:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19865:3:31"},"nodeType":"YulFunctionCall","src":"19865:15:31"},{"hexValue":"206d696e","kind":"string","nodeType":"YulLiteral","src":"19882:6:31","type":"","value":" min"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19858:6:31"},"nodeType":"YulFunctionCall","src":"19858:31:31"},"nodeType":"YulExpressionStatement","src":"19858:31:31"}]},"name":"store_literal_in_memory_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19771:6:31","type":""}],"src":"19673:223:31"},{"body":{"nodeType":"YulBlock","src":"20048:220:31","statements":[{"nodeType":"YulAssignment","src":"20058:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20124:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"20129:2:31","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20065:58:31"},"nodeType":"YulFunctionCall","src":"20065:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20058:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20230:3:31"}],"functionName":{"name":"store_literal_in_memory_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f","nodeType":"YulIdentifier","src":"20141:88:31"},"nodeType":"YulFunctionCall","src":"20141:93:31"},"nodeType":"YulExpressionStatement","src":"20141:93:31"},{"nodeType":"YulAssignment","src":"20243:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20254:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"20259:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20250:3:31"},"nodeType":"YulFunctionCall","src":"20250:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20243:3:31"}]}]},"name":"abi_encode_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20036:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20044:3:31","type":""}],"src":"19902:366:31"},{"body":{"nodeType":"YulBlock","src":"20445:248:31","statements":[{"nodeType":"YulAssignment","src":"20455:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20467:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20478:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20463:3:31"},"nodeType":"YulFunctionCall","src":"20463:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20455:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20502:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20513:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20498:3:31"},"nodeType":"YulFunctionCall","src":"20498:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20521:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"20527:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20517:3:31"},"nodeType":"YulFunctionCall","src":"20517:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20491:6:31"},"nodeType":"YulFunctionCall","src":"20491:47:31"},"nodeType":"YulExpressionStatement","src":"20491:47:31"},{"nodeType":"YulAssignment","src":"20547:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20681:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20555:124:31"},"nodeType":"YulFunctionCall","src":"20555:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20547:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20425:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20440:4:31","type":""}],"src":"20274:419:31"},{"body":{"nodeType":"YulBlock","src":"20805:126:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20827:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"20835:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20823:3:31"},"nodeType":"YulFunctionCall","src":"20823:14:31"},{"hexValue":"5665726966696564206d6178206d757374206265206772656174657220746861","kind":"string","nodeType":"YulLiteral","src":"20839:34:31","type":"","value":"Verified max must be greater tha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20816:6:31"},"nodeType":"YulFunctionCall","src":"20816:58:31"},"nodeType":"YulExpressionStatement","src":"20816:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20895:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"20903:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20891:3:31"},"nodeType":"YulFunctionCall","src":"20891:15:31"},{"hexValue":"6e2067656e6572616c206d6178","kind":"string","nodeType":"YulLiteral","src":"20908:15:31","type":"","value":"n general max"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20884:6:31"},"nodeType":"YulFunctionCall","src":"20884:40:31"},"nodeType":"YulExpressionStatement","src":"20884:40:31"}]},"name":"store_literal_in_memory_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20797:6:31","type":""}],"src":"20699:232:31"},{"body":{"nodeType":"YulBlock","src":"21083:220:31","statements":[{"nodeType":"YulAssignment","src":"21093:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21159:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"21164:2:31","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21100:58:31"},"nodeType":"YulFunctionCall","src":"21100:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21093:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21265:3:31"}],"functionName":{"name":"store_literal_in_memory_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7","nodeType":"YulIdentifier","src":"21176:88:31"},"nodeType":"YulFunctionCall","src":"21176:93:31"},"nodeType":"YulExpressionStatement","src":"21176:93:31"},{"nodeType":"YulAssignment","src":"21278:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21289:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"21294:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21285:3:31"},"nodeType":"YulFunctionCall","src":"21285:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21278:3:31"}]}]},"name":"abi_encode_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21071:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21079:3:31","type":""}],"src":"20937:366:31"},{"body":{"nodeType":"YulBlock","src":"21480:248:31","statements":[{"nodeType":"YulAssignment","src":"21490:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21502:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21513:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21498:3:31"},"nodeType":"YulFunctionCall","src":"21498:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21490:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21537:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21548:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21533:3:31"},"nodeType":"YulFunctionCall","src":"21533:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21556:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"21562:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21552:3:31"},"nodeType":"YulFunctionCall","src":"21552:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21526:6:31"},"nodeType":"YulFunctionCall","src":"21526:47:31"},"nodeType":"YulExpressionStatement","src":"21526:47:31"},{"nodeType":"YulAssignment","src":"21582:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21716:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21590:124:31"},"nodeType":"YulFunctionCall","src":"21590:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21582:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21460:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21475:4:31","type":""}],"src":"21309:419:31"},{"body":{"nodeType":"YulBlock","src":"21888:288:31","statements":[{"nodeType":"YulAssignment","src":"21898:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21910:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21921:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21906:3:31"},"nodeType":"YulFunctionCall","src":"21906:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21898:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21978:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21991:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22002:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21987:3:31"},"nodeType":"YulFunctionCall","src":"21987:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21934:43:31"},"nodeType":"YulFunctionCall","src":"21934:71:31"},"nodeType":"YulExpressionStatement","src":"21934:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22059:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22072:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22083:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22068:3:31"},"nodeType":"YulFunctionCall","src":"22068:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22015:43:31"},"nodeType":"YulFunctionCall","src":"22015:72:31"},"nodeType":"YulExpressionStatement","src":"22015:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22141:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22154:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22165:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22150:3:31"},"nodeType":"YulFunctionCall","src":"22150:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22097:43:31"},"nodeType":"YulFunctionCall","src":"22097:72:31"},"nodeType":"YulExpressionStatement","src":"22097:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21844:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21856:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21864:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21872:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21883:4:31","type":""}],"src":"21734:442:31"},{"body":{"nodeType":"YulBlock","src":"22288:68:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22310:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"22318:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22306:3:31"},"nodeType":"YulFunctionCall","src":"22306:14:31"},{"hexValue":"496e76616c69642076657269666965722061646472657373","kind":"string","nodeType":"YulLiteral","src":"22322:26:31","type":"","value":"Invalid verifier address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22299:6:31"},"nodeType":"YulFunctionCall","src":"22299:50:31"},"nodeType":"YulExpressionStatement","src":"22299:50:31"}]},"name":"store_literal_in_memory_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22280:6:31","type":""}],"src":"22182:174:31"},{"body":{"nodeType":"YulBlock","src":"22508:220:31","statements":[{"nodeType":"YulAssignment","src":"22518:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22584:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"22589:2:31","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22525:58:31"},"nodeType":"YulFunctionCall","src":"22525:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22518:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22690:3:31"}],"functionName":{"name":"store_literal_in_memory_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","nodeType":"YulIdentifier","src":"22601:88:31"},"nodeType":"YulFunctionCall","src":"22601:93:31"},"nodeType":"YulExpressionStatement","src":"22601:93:31"},{"nodeType":"YulAssignment","src":"22703:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22714:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"22719:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22710:3:31"},"nodeType":"YulFunctionCall","src":"22710:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22703:3:31"}]}]},"name":"abi_encode_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22496:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22504:3:31","type":""}],"src":"22362:366:31"},{"body":{"nodeType":"YulBlock","src":"22905:248:31","statements":[{"nodeType":"YulAssignment","src":"22915:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22927:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22938:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22923:3:31"},"nodeType":"YulFunctionCall","src":"22923:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22915:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22962:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22973:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22958:3:31"},"nodeType":"YulFunctionCall","src":"22958:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22981:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"22987:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22977:3:31"},"nodeType":"YulFunctionCall","src":"22977:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22951:6:31"},"nodeType":"YulFunctionCall","src":"22951:47:31"},"nodeType":"YulExpressionStatement","src":"22951:47:31"},{"nodeType":"YulAssignment","src":"23007:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23141:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23015:124:31"},"nodeType":"YulFunctionCall","src":"23015:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23007:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22885:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22900:4:31","type":""}],"src":"22734:419:31"},{"body":{"nodeType":"YulBlock","src":"23265:61:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23287:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"23295:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23283:3:31"},"nodeType":"YulFunctionCall","src":"23283:14:31"},{"hexValue":"5369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"23299:19:31","type":"","value":"Signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23276:6:31"},"nodeType":"YulFunctionCall","src":"23276:43:31"},"nodeType":"YulExpressionStatement","src":"23276:43:31"}]},"name":"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23257:6:31","type":""}],"src":"23159:167:31"},{"body":{"nodeType":"YulBlock","src":"23478:220:31","statements":[{"nodeType":"YulAssignment","src":"23488:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23554:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"23559:2:31","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23495:58:31"},"nodeType":"YulFunctionCall","src":"23495:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23488:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23660:3:31"}],"functionName":{"name":"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","nodeType":"YulIdentifier","src":"23571:88:31"},"nodeType":"YulFunctionCall","src":"23571:93:31"},"nodeType":"YulExpressionStatement","src":"23571:93:31"},{"nodeType":"YulAssignment","src":"23673:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23684:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"23689:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23680:3:31"},"nodeType":"YulFunctionCall","src":"23680:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23673:3:31"}]}]},"name":"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23466:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23474:3:31","type":""}],"src":"23332:366:31"},{"body":{"nodeType":"YulBlock","src":"23875:248:31","statements":[{"nodeType":"YulAssignment","src":"23885:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23897:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23908:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23893:3:31"},"nodeType":"YulFunctionCall","src":"23893:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23885:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23932:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23943:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23928:3:31"},"nodeType":"YulFunctionCall","src":"23928:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23951:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"23957:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23947:3:31"},"nodeType":"YulFunctionCall","src":"23947:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23921:6:31"},"nodeType":"YulFunctionCall","src":"23921:47:31"},"nodeType":"YulExpressionStatement","src":"23921:47:31"},{"nodeType":"YulAssignment","src":"23977:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24111:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23985:124:31"},"nodeType":"YulFunctionCall","src":"23985:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23977:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23855:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23870:4:31","type":""}],"src":"23704:419:31"},{"body":{"nodeType":"YulBlock","src":"24367:537:31","statements":[{"nodeType":"YulAssignment","src":"24377:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24389:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24400:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24385:3:31"},"nodeType":"YulFunctionCall","src":"24385:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24377:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24458:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24471:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24482:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24467:3:31"},"nodeType":"YulFunctionCall","src":"24467:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24414:43:31"},"nodeType":"YulFunctionCall","src":"24414:71:31"},"nodeType":"YulExpressionStatement","src":"24414:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24539:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24552:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24563:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24548:3:31"},"nodeType":"YulFunctionCall","src":"24548:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24495:43:31"},"nodeType":"YulFunctionCall","src":"24495:72:31"},"nodeType":"YulExpressionStatement","src":"24495:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24621:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24634:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24645:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24630:3:31"},"nodeType":"YulFunctionCall","src":"24630:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24577:43:31"},"nodeType":"YulFunctionCall","src":"24577:72:31"},"nodeType":"YulExpressionStatement","src":"24577:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24703:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24716:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24727:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:31"},"nodeType":"YulFunctionCall","src":"24712:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24659:43:31"},"nodeType":"YulFunctionCall","src":"24659:72:31"},"nodeType":"YulExpressionStatement","src":"24659:72:31"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24785:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24798:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24809:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24794:3:31"},"nodeType":"YulFunctionCall","src":"24794:19:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24741:43:31"},"nodeType":"YulFunctionCall","src":"24741:73:31"},"nodeType":"YulExpressionStatement","src":"24741:73:31"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24868:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24881:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24892:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24877:3:31"},"nodeType":"YulFunctionCall","src":"24877:19:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24824:43:31"},"nodeType":"YulFunctionCall","src":"24824:73:31"},"nodeType":"YulExpressionStatement","src":"24824:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24299:9:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24311:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24319:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24327:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24335:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24343:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24351:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24362:4:31","type":""}],"src":"24129:775:31"},{"body":{"nodeType":"YulBlock","src":"25016:61:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25038:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"25046:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25034:3:31"},"nodeType":"YulFunctionCall","src":"25034:14:31"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"25050:19:31","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25027:6:31"},"nodeType":"YulFunctionCall","src":"25027:43:31"},"nodeType":"YulExpressionStatement","src":"25027:43:31"}]},"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25008:6:31","type":""}],"src":"24910:167:31"},{"body":{"nodeType":"YulBlock","src":"25229:220:31","statements":[{"nodeType":"YulAssignment","src":"25239:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25305:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"25310:2:31","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25246:58:31"},"nodeType":"YulFunctionCall","src":"25246:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25239:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25411:3:31"}],"functionName":{"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nodeType":"YulIdentifier","src":"25322:88:31"},"nodeType":"YulFunctionCall","src":"25322:93:31"},"nodeType":"YulExpressionStatement","src":"25322:93:31"},{"nodeType":"YulAssignment","src":"25424:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25435:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"25440:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25431:3:31"},"nodeType":"YulFunctionCall","src":"25431:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25424:3:31"}]}]},"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25217:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25225:3:31","type":""}],"src":"25083:366:31"},{"body":{"nodeType":"YulBlock","src":"25626:248:31","statements":[{"nodeType":"YulAssignment","src":"25636:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25648:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"25659:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25644:3:31"},"nodeType":"YulFunctionCall","src":"25644:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25636:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25683:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"25694:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25679:3:31"},"nodeType":"YulFunctionCall","src":"25679:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25702:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"25708:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25698:3:31"},"nodeType":"YulFunctionCall","src":"25698:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25672:6:31"},"nodeType":"YulFunctionCall","src":"25672:47:31"},"nodeType":"YulExpressionStatement","src":"25672:47:31"},{"nodeType":"YulAssignment","src":"25728:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25862:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25736:124:31"},"nodeType":"YulFunctionCall","src":"25736:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25728:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25606:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25621:4:31","type":""}],"src":"25455:419:31"},{"body":{"nodeType":"YulBlock","src":"25986:72:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26008:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"26016:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26004:3:31"},"nodeType":"YulFunctionCall","src":"26004:14:31"},{"hexValue":"5061796d656e7420616d6f756e742062656c6f77206d696e696d756d","kind":"string","nodeType":"YulLiteral","src":"26020:30:31","type":"","value":"Payment amount below minimum"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25997:6:31"},"nodeType":"YulFunctionCall","src":"25997:54:31"},"nodeType":"YulExpressionStatement","src":"25997:54:31"}]},"name":"store_literal_in_memory_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25978:6:31","type":""}],"src":"25880:178:31"},{"body":{"nodeType":"YulBlock","src":"26210:220:31","statements":[{"nodeType":"YulAssignment","src":"26220:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26286:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"26291:2:31","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26227:58:31"},"nodeType":"YulFunctionCall","src":"26227:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26220:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26392:3:31"}],"functionName":{"name":"store_literal_in_memory_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244","nodeType":"YulIdentifier","src":"26303:88:31"},"nodeType":"YulFunctionCall","src":"26303:93:31"},"nodeType":"YulExpressionStatement","src":"26303:93:31"},{"nodeType":"YulAssignment","src":"26405:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26416:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"26421:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26412:3:31"},"nodeType":"YulFunctionCall","src":"26412:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26405:3:31"}]}]},"name":"abi_encode_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26198:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26206:3:31","type":""}],"src":"26064:366:31"},{"body":{"nodeType":"YulBlock","src":"26607:248:31","statements":[{"nodeType":"YulAssignment","src":"26617:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26629:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26640:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26625:3:31"},"nodeType":"YulFunctionCall","src":"26625:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26617:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26664:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26675:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26660:3:31"},"nodeType":"YulFunctionCall","src":"26660:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26683:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"26689:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26679:3:31"},"nodeType":"YulFunctionCall","src":"26679:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26653:6:31"},"nodeType":"YulFunctionCall","src":"26653:47:31"},"nodeType":"YulExpressionStatement","src":"26653:47:31"},{"nodeType":"YulAssignment","src":"26709:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26843:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26717:124:31"},"nodeType":"YulFunctionCall","src":"26717:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26709:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26587:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26602:4:31","type":""}],"src":"26436:419:31"},{"body":{"nodeType":"YulBlock","src":"26967:114:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26989:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"26997:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26985:3:31"},"nodeType":"YulFunctionCall","src":"26985:14:31"},{"hexValue":"4172746973742063616e6e6f7420626520437261667469617820616464726573","kind":"string","nodeType":"YulLiteral","src":"27001:34:31","type":"","value":"Artist cannot be Craftiax addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26978:6:31"},"nodeType":"YulFunctionCall","src":"26978:58:31"},"nodeType":"YulExpressionStatement","src":"26978:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27057:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"27065:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27053:3:31"},"nodeType":"YulFunctionCall","src":"27053:15:31"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"27070:3:31","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27046:6:31"},"nodeType":"YulFunctionCall","src":"27046:28:31"},"nodeType":"YulExpressionStatement","src":"27046:28:31"}]},"name":"store_literal_in_memory_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26959:6:31","type":""}],"src":"26861:220:31"},{"body":{"nodeType":"YulBlock","src":"27233:220:31","statements":[{"nodeType":"YulAssignment","src":"27243:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27309:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"27314:2:31","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27250:58:31"},"nodeType":"YulFunctionCall","src":"27250:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27243:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27415:3:31"}],"functionName":{"name":"store_literal_in_memory_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5","nodeType":"YulIdentifier","src":"27326:88:31"},"nodeType":"YulFunctionCall","src":"27326:93:31"},"nodeType":"YulExpressionStatement","src":"27326:93:31"},{"nodeType":"YulAssignment","src":"27428:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27439:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"27444:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27435:3:31"},"nodeType":"YulFunctionCall","src":"27435:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27428:3:31"}]}]},"name":"abi_encode_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27221:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27229:3:31","type":""}],"src":"27087:366:31"},{"body":{"nodeType":"YulBlock","src":"27630:248:31","statements":[{"nodeType":"YulAssignment","src":"27640:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27652:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27663:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27648:3:31"},"nodeType":"YulFunctionCall","src":"27648:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27640:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27687:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27698:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27683:3:31"},"nodeType":"YulFunctionCall","src":"27683:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27706:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"27712:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27702:3:31"},"nodeType":"YulFunctionCall","src":"27702:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27676:6:31"},"nodeType":"YulFunctionCall","src":"27676:47:31"},"nodeType":"YulExpressionStatement","src":"27676:47:31"},{"nodeType":"YulAssignment","src":"27732:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27866:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27740:124:31"},"nodeType":"YulFunctionCall","src":"27740:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27732:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27610:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27625:4:31","type":""}],"src":"27459:419:31"},{"body":{"nodeType":"YulBlock","src":"27990:74:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28012:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"28020:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28008:3:31"},"nodeType":"YulFunctionCall","src":"28008:14:31"},{"hexValue":"5061796d656e742065786365656473207665726966696564206c696d6974","kind":"string","nodeType":"YulLiteral","src":"28024:32:31","type":"","value":"Payment exceeds verified limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28001:6:31"},"nodeType":"YulFunctionCall","src":"28001:56:31"},"nodeType":"YulExpressionStatement","src":"28001:56:31"}]},"name":"store_literal_in_memory_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27982:6:31","type":""}],"src":"27884:180:31"},{"body":{"nodeType":"YulBlock","src":"28216:220:31","statements":[{"nodeType":"YulAssignment","src":"28226:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28292:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"28297:2:31","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28233:58:31"},"nodeType":"YulFunctionCall","src":"28233:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28226:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28398:3:31"}],"functionName":{"name":"store_literal_in_memory_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04","nodeType":"YulIdentifier","src":"28309:88:31"},"nodeType":"YulFunctionCall","src":"28309:93:31"},"nodeType":"YulExpressionStatement","src":"28309:93:31"},{"nodeType":"YulAssignment","src":"28411:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28422:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"28427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28418:3:31"},"nodeType":"YulFunctionCall","src":"28418:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28411:3:31"}]}]},"name":"abi_encode_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28204:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28212:3:31","type":""}],"src":"28070:366:31"},{"body":{"nodeType":"YulBlock","src":"28613:248:31","statements":[{"nodeType":"YulAssignment","src":"28623:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28635:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"28646:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28631:3:31"},"nodeType":"YulFunctionCall","src":"28631:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28623:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28670:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"28681:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28666:3:31"},"nodeType":"YulFunctionCall","src":"28666:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28689:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"28695:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28685:3:31"},"nodeType":"YulFunctionCall","src":"28685:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28659:6:31"},"nodeType":"YulFunctionCall","src":"28659:47:31"},"nodeType":"YulExpressionStatement","src":"28659:47:31"},{"nodeType":"YulAssignment","src":"28715:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28849:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28723:124:31"},"nodeType":"YulFunctionCall","src":"28723:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28715:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28593:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28608:4:31","type":""}],"src":"28442:419:31"},{"body":{"nodeType":"YulBlock","src":"28973:73:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28995:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"29003:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28991:3:31"},"nodeType":"YulFunctionCall","src":"28991:14:31"},{"hexValue":"5061796d656e7420657863656564732067656e6572616c206c696d6974","kind":"string","nodeType":"YulLiteral","src":"29007:31:31","type":"","value":"Payment exceeds general limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28984:6:31"},"nodeType":"YulFunctionCall","src":"28984:55:31"},"nodeType":"YulExpressionStatement","src":"28984:55:31"}]},"name":"store_literal_in_memory_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28965:6:31","type":""}],"src":"28867:179:31"},{"body":{"nodeType":"YulBlock","src":"29198:220:31","statements":[{"nodeType":"YulAssignment","src":"29208:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29274:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"29279:2:31","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29215:58:31"},"nodeType":"YulFunctionCall","src":"29215:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29208:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29380:3:31"}],"functionName":{"name":"store_literal_in_memory_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152","nodeType":"YulIdentifier","src":"29291:88:31"},"nodeType":"YulFunctionCall","src":"29291:93:31"},"nodeType":"YulExpressionStatement","src":"29291:93:31"},{"nodeType":"YulAssignment","src":"29393:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29404:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"29409:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29400:3:31"},"nodeType":"YulFunctionCall","src":"29400:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29393:3:31"}]}]},"name":"abi_encode_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29186:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29194:3:31","type":""}],"src":"29052:366:31"},{"body":{"nodeType":"YulBlock","src":"29595:248:31","statements":[{"nodeType":"YulAssignment","src":"29605:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29617:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"29628:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29613:3:31"},"nodeType":"YulFunctionCall","src":"29613:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29605:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29652:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"29663:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29648:3:31"},"nodeType":"YulFunctionCall","src":"29648:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29671:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"29677:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29667:3:31"},"nodeType":"YulFunctionCall","src":"29667:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29641:6:31"},"nodeType":"YulFunctionCall","src":"29641:47:31"},"nodeType":"YulExpressionStatement","src":"29641:47:31"},{"nodeType":"YulAssignment","src":"29697:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29831:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29705:124:31"},"nodeType":"YulFunctionCall","src":"29705:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29697:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29575:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29590:4:31","type":""}],"src":"29424:419:31"},{"body":{"nodeType":"YulBlock","src":"29897:362:31","statements":[{"nodeType":"YulAssignment","src":"29907:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29930:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29912:17:31"},"nodeType":"YulFunctionCall","src":"29912:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29907:1:31"}]},{"nodeType":"YulAssignment","src":"29941:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29964:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29946:17:31"},"nodeType":"YulFunctionCall","src":"29946:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29941:1:31"}]},{"nodeType":"YulVariableDeclaration","src":"29975:28:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29998:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"30001:1:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29994:3:31"},"nodeType":"YulFunctionCall","src":"29994:9:31"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"29979:11:31","type":""}]},{"nodeType":"YulAssignment","src":"30012:41:31","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"30041:11:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30023:17:31"},"nodeType":"YulFunctionCall","src":"30023:30:31"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"30012:7:31"}]},{"body":{"nodeType":"YulBlock","src":"30230:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30232:16:31"},"nodeType":"YulFunctionCall","src":"30232:18:31"},"nodeType":"YulExpressionStatement","src":"30232:18:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30163:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30156:6:31"},"nodeType":"YulFunctionCall","src":"30156:9:31"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30186:1:31"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"30193:7:31"},{"name":"x","nodeType":"YulIdentifier","src":"30202:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30189:3:31"},"nodeType":"YulFunctionCall","src":"30189:15:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30183:2:31"},"nodeType":"YulFunctionCall","src":"30183:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30136:2:31"},"nodeType":"YulFunctionCall","src":"30136:83:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30116:6:31"},"nodeType":"YulFunctionCall","src":"30116:113:31"},"nodeType":"YulIf","src":"30113:139:31"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29880:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"29883:1:31","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"29889:7:31","type":""}],"src":"29849:410:31"},{"body":{"nodeType":"YulBlock","src":"30293:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30310:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30313:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30303:6:31"},"nodeType":"YulFunctionCall","src":"30303:88:31"},"nodeType":"YulExpressionStatement","src":"30303:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30407:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30410:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30400:6:31"},"nodeType":"YulFunctionCall","src":"30400:15:31"},"nodeType":"YulExpressionStatement","src":"30400:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30431:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30434:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30424:6:31"},"nodeType":"YulFunctionCall","src":"30424:15:31"},"nodeType":"YulExpressionStatement","src":"30424:15:31"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"30265:180:31"},{"body":{"nodeType":"YulBlock","src":"30493:143:31","statements":[{"nodeType":"YulAssignment","src":"30503:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30526:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30508:17:31"},"nodeType":"YulFunctionCall","src":"30508:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30503:1:31"}]},{"nodeType":"YulAssignment","src":"30537:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30560:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30542:17:31"},"nodeType":"YulFunctionCall","src":"30542:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30537:1:31"}]},{"body":{"nodeType":"YulBlock","src":"30584:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"30586:16:31"},"nodeType":"YulFunctionCall","src":"30586:18:31"},"nodeType":"YulExpressionStatement","src":"30586:18:31"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30581:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30574:6:31"},"nodeType":"YulFunctionCall","src":"30574:9:31"},"nodeType":"YulIf","src":"30571:35:31"},{"nodeType":"YulAssignment","src":"30616:14:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30625:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"30628:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30621:3:31"},"nodeType":"YulFunctionCall","src":"30621:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"30616:1:31"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30482:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"30485:1:31","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"30491:1:31","type":""}],"src":"30451:185:31"},{"body":{"nodeType":"YulBlock","src":"30687:149:31","statements":[{"nodeType":"YulAssignment","src":"30697:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30720:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30702:17:31"},"nodeType":"YulFunctionCall","src":"30702:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30697:1:31"}]},{"nodeType":"YulAssignment","src":"30731:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30754:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30736:17:31"},"nodeType":"YulFunctionCall","src":"30736:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30731:1:31"}]},{"nodeType":"YulAssignment","src":"30765:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30777:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"30780:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30773:3:31"},"nodeType":"YulFunctionCall","src":"30773:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30765:4:31"}]},{"body":{"nodeType":"YulBlock","src":"30807:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30809:16:31"},"nodeType":"YulFunctionCall","src":"30809:18:31"},"nodeType":"YulExpressionStatement","src":"30809:18:31"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"30798:4:31"},{"name":"x","nodeType":"YulIdentifier","src":"30804:1:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30795:2:31"},"nodeType":"YulFunctionCall","src":"30795:11:31"},"nodeType":"YulIf","src":"30792:37:31"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30673:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"30676:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30682:4:31","type":""}],"src":"30642:194:31"},{"body":{"nodeType":"YulBlock","src":"30955:34:31","statements":[{"nodeType":"YulAssignment","src":"30965:18:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"30980:3:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30965:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30927:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"30932:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30943:11:31","type":""}],"src":"30842:147:31"},{"body":{"nodeType":"YulBlock","src":"31101:8:31","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31093:6:31","type":""}],"src":"30995:114:31"},{"body":{"nodeType":"YulBlock","src":"31278:235:31","statements":[{"nodeType":"YulAssignment","src":"31288:90:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31371:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"31376:1:31","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31295:75:31"},"nodeType":"YulFunctionCall","src":"31295:83:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31288:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31476:3:31"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"31387:88:31"},"nodeType":"YulFunctionCall","src":"31387:93:31"},"nodeType":"YulExpressionStatement","src":"31387:93:31"},{"nodeType":"YulAssignment","src":"31489:18:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31500:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"31505:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31496:3:31"},"nodeType":"YulFunctionCall","src":"31496:11:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31489:3:31"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31266:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31274:3:31","type":""}],"src":"31115:398:31"},{"body":{"nodeType":"YulBlock","src":"31707:191:31","statements":[{"nodeType":"YulAssignment","src":"31718:154:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31868:3:31"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31725:141:31"},"nodeType":"YulFunctionCall","src":"31725:147:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31718:3:31"}]},{"nodeType":"YulAssignment","src":"31882:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"31889:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31882:3:31"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31694:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31703:3:31","type":""}],"src":"31519:379:31"},{"body":{"nodeType":"YulBlock","src":"32010:76:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32032:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"32040:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32028:3:31"},"nodeType":"YulFunctionCall","src":"32028:14:31"},{"hexValue":"4661696c656420746f2073656e64207061796d656e7420746f20617274697374","kind":"string","nodeType":"YulLiteral","src":"32044:34:31","type":"","value":"Failed to send payment to artist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32021:6:31"},"nodeType":"YulFunctionCall","src":"32021:58:31"},"nodeType":"YulExpressionStatement","src":"32021:58:31"}]},"name":"store_literal_in_memory_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32002:6:31","type":""}],"src":"31904:182:31"},{"body":{"nodeType":"YulBlock","src":"32238:220:31","statements":[{"nodeType":"YulAssignment","src":"32248:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32314:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"32319:2:31","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32255:58:31"},"nodeType":"YulFunctionCall","src":"32255:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32248:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32420:3:31"}],"functionName":{"name":"store_literal_in_memory_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9","nodeType":"YulIdentifier","src":"32331:88:31"},"nodeType":"YulFunctionCall","src":"32331:93:31"},"nodeType":"YulExpressionStatement","src":"32331:93:31"},{"nodeType":"YulAssignment","src":"32433:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32444:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"32449:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32440:3:31"},"nodeType":"YulFunctionCall","src":"32440:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32433:3:31"}]}]},"name":"abi_encode_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32226:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32234:3:31","type":""}],"src":"32092:366:31"},{"body":{"nodeType":"YulBlock","src":"32635:248:31","statements":[{"nodeType":"YulAssignment","src":"32645:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32657:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32668:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32653:3:31"},"nodeType":"YulFunctionCall","src":"32653:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32645:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32692:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32703:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32688:3:31"},"nodeType":"YulFunctionCall","src":"32688:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32711:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"32717:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32707:3:31"},"nodeType":"YulFunctionCall","src":"32707:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32681:6:31"},"nodeType":"YulFunctionCall","src":"32681:47:31"},"nodeType":"YulExpressionStatement","src":"32681:47:31"},{"nodeType":"YulAssignment","src":"32737:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32871:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32745:124:31"},"nodeType":"YulFunctionCall","src":"32745:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32737:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32615:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32630:4:31","type":""}],"src":"32464:419:31"},{"body":{"nodeType":"YulBlock","src":"32995:115:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33017:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"33025:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33013:3:31"},"nodeType":"YulFunctionCall","src":"33013:14:31"},{"hexValue":"4661696c656420746f2073656e64207061796d656e7420746f20437261667469","kind":"string","nodeType":"YulLiteral","src":"33029:34:31","type":"","value":"Failed to send payment to Crafti"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33006:6:31"},"nodeType":"YulFunctionCall","src":"33006:58:31"},"nodeType":"YulExpressionStatement","src":"33006:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33085:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"33093:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33081:3:31"},"nodeType":"YulFunctionCall","src":"33081:15:31"},{"hexValue":"6178","kind":"string","nodeType":"YulLiteral","src":"33098:4:31","type":"","value":"ax"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33074:6:31"},"nodeType":"YulFunctionCall","src":"33074:29:31"},"nodeType":"YulExpressionStatement","src":"33074:29:31"}]},"name":"store_literal_in_memory_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32987:6:31","type":""}],"src":"32889:221:31"},{"body":{"nodeType":"YulBlock","src":"33262:220:31","statements":[{"nodeType":"YulAssignment","src":"33272:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33338:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"33343:2:31","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33279:58:31"},"nodeType":"YulFunctionCall","src":"33279:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33272:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33444:3:31"}],"functionName":{"name":"store_literal_in_memory_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2","nodeType":"YulIdentifier","src":"33355:88:31"},"nodeType":"YulFunctionCall","src":"33355:93:31"},"nodeType":"YulExpressionStatement","src":"33355:93:31"},{"nodeType":"YulAssignment","src":"33457:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33468:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"33473:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33464:3:31"},"nodeType":"YulFunctionCall","src":"33464:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33457:3:31"}]}]},"name":"abi_encode_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33250:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33258:3:31","type":""}],"src":"33116:366:31"},{"body":{"nodeType":"YulBlock","src":"33659:248:31","statements":[{"nodeType":"YulAssignment","src":"33669:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33681:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33692:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33677:3:31"},"nodeType":"YulFunctionCall","src":"33677:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33669:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33716:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33727:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33712:3:31"},"nodeType":"YulFunctionCall","src":"33712:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33735:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"33741:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33731:3:31"},"nodeType":"YulFunctionCall","src":"33731:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33705:6:31"},"nodeType":"YulFunctionCall","src":"33705:47:31"},"nodeType":"YulExpressionStatement","src":"33705:47:31"},{"nodeType":"YulAssignment","src":"33761:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33895:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33769:124:31"},"nodeType":"YulFunctionCall","src":"33769:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33761:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33639:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33654:4:31","type":""}],"src":"33488:419:31"},{"body":{"nodeType":"YulBlock","src":"34061:282:31","statements":[{"nodeType":"YulAssignment","src":"34071:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34083:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34094:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34079:3:31"},"nodeType":"YulFunctionCall","src":"34079:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34071:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34151:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34164:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34175:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34160:3:31"},"nodeType":"YulFunctionCall","src":"34160:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34107:43:31"},"nodeType":"YulFunctionCall","src":"34107:71:31"},"nodeType":"YulExpressionStatement","src":"34107:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34232:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34245:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34256:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34241:3:31"},"nodeType":"YulFunctionCall","src":"34241:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34188:43:31"},"nodeType":"YulFunctionCall","src":"34188:72:31"},"nodeType":"YulExpressionStatement","src":"34188:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34308:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34321:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34332:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34317:3:31"},"nodeType":"YulFunctionCall","src":"34317:18:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"34270:37:31"},"nodeType":"YulFunctionCall","src":"34270:66:31"},"nodeType":"YulExpressionStatement","src":"34270:66:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34017:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34029:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34037:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34045:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34056:4:31","type":""}],"src":"33913:430:31"},{"body":{"nodeType":"YulBlock","src":"34455:62:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34477:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"34485:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34473:3:31"},"nodeType":"YulFunctionCall","src":"34473:14:31"},{"hexValue":"53746174757320616c726561647920736574","kind":"string","nodeType":"YulLiteral","src":"34489:20:31","type":"","value":"Status already set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34466:6:31"},"nodeType":"YulFunctionCall","src":"34466:44:31"},"nodeType":"YulExpressionStatement","src":"34466:44:31"}]},"name":"store_literal_in_memory_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34447:6:31","type":""}],"src":"34349:168:31"},{"body":{"nodeType":"YulBlock","src":"34669:220:31","statements":[{"nodeType":"YulAssignment","src":"34679:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34745:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"34750:2:31","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34686:58:31"},"nodeType":"YulFunctionCall","src":"34686:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34679:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34851:3:31"}],"functionName":{"name":"store_literal_in_memory_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a","nodeType":"YulIdentifier","src":"34762:88:31"},"nodeType":"YulFunctionCall","src":"34762:93:31"},"nodeType":"YulExpressionStatement","src":"34762:93:31"},{"nodeType":"YulAssignment","src":"34864:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34875:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"34880:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34871:3:31"},"nodeType":"YulFunctionCall","src":"34871:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34864:3:31"}]}]},"name":"abi_encode_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34657:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34665:3:31","type":""}],"src":"34523:366:31"},{"body":{"nodeType":"YulBlock","src":"35066:248:31","statements":[{"nodeType":"YulAssignment","src":"35076:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35088:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35099:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35084:3:31"},"nodeType":"YulFunctionCall","src":"35084:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35076:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35123:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35134:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35119:3:31"},"nodeType":"YulFunctionCall","src":"35119:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35142:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"35148:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35138:3:31"},"nodeType":"YulFunctionCall","src":"35138:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35112:6:31"},"nodeType":"YulFunctionCall","src":"35112:47:31"},"nodeType":"YulExpressionStatement","src":"35112:47:31"},{"nodeType":"YulAssignment","src":"35168:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35302:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35176:124:31"},"nodeType":"YulFunctionCall","src":"35176:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35168:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35046:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35061:4:31","type":""}],"src":"34895:419:31"},{"body":{"nodeType":"YulBlock","src":"35348:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35365:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35368:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35358:6:31"},"nodeType":"YulFunctionCall","src":"35358:88:31"},"nodeType":"YulExpressionStatement","src":"35358:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35462:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35465:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35455:6:31"},"nodeType":"YulFunctionCall","src":"35455:15:31"},"nodeType":"YulExpressionStatement","src":"35455:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35486:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35489:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35479:6:31"},"nodeType":"YulFunctionCall","src":"35479:15:31"},"nodeType":"YulExpressionStatement","src":"35479:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"35320:180:31"},{"body":{"nodeType":"YulBlock","src":"35557:269:31","statements":[{"nodeType":"YulAssignment","src":"35567:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35581:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"35587:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35577:3:31"},"nodeType":"YulFunctionCall","src":"35577:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35567:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"35598:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35628:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"35634:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35624:3:31"},"nodeType":"YulFunctionCall","src":"35624:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"35602:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"35675:51:31","statements":[{"nodeType":"YulAssignment","src":"35689:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35703:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"35711:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35699:3:31"},"nodeType":"YulFunctionCall","src":"35699:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35689:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"35655:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35648:6:31"},"nodeType":"YulFunctionCall","src":"35648:26:31"},"nodeType":"YulIf","src":"35645:81:31"},{"body":{"nodeType":"YulBlock","src":"35778:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"35792:16:31"},"nodeType":"YulFunctionCall","src":"35792:18:31"},"nodeType":"YulExpressionStatement","src":"35792:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"35742:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35765:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"35773:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35762:2:31"},"nodeType":"YulFunctionCall","src":"35762:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"35739:2:31"},"nodeType":"YulFunctionCall","src":"35739:38:31"},"nodeType":"YulIf","src":"35736:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35541:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"35550:6:31","type":""}],"src":"35506:320:31"},{"body":{"nodeType":"YulBlock","src":"35860:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35877:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35880:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35870:6:31"},"nodeType":"YulFunctionCall","src":"35870:88:31"},"nodeType":"YulExpressionStatement","src":"35870:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35974:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35977:4:31","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35967:6:31"},"nodeType":"YulFunctionCall","src":"35967:15:31"},"nodeType":"YulExpressionStatement","src":"35967:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35998:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36001:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35991:6:31"},"nodeType":"YulFunctionCall","src":"35991:15:31"},"nodeType":"YulExpressionStatement","src":"35991:15:31"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"35832:180:31"},{"body":{"nodeType":"YulBlock","src":"36116:124:31","statements":[{"nodeType":"YulAssignment","src":"36126:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36138:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36149:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36134:3:31"},"nodeType":"YulFunctionCall","src":"36134:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36126:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36206:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36219:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36230:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36215:3:31"},"nodeType":"YulFunctionCall","src":"36215:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36162:43:31"},"nodeType":"YulFunctionCall","src":"36162:71:31"},"nodeType":"YulExpressionStatement","src":"36162:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36088:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36100:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36111:4:31","type":""}],"src":"36018:222:31"},{"body":{"nodeType":"YulBlock","src":"36456:454:31","statements":[{"nodeType":"YulAssignment","src":"36466:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36478:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36489:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36474:3:31"},"nodeType":"YulFunctionCall","src":"36474:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36466:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36547:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36560:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36571:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36556:3:31"},"nodeType":"YulFunctionCall","src":"36556:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36503:43:31"},"nodeType":"YulFunctionCall","src":"36503:71:31"},"nodeType":"YulExpressionStatement","src":"36503:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36628:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36641:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36652:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36637:3:31"},"nodeType":"YulFunctionCall","src":"36637:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36584:43:31"},"nodeType":"YulFunctionCall","src":"36584:72:31"},"nodeType":"YulExpressionStatement","src":"36584:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36710:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36723:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36734:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36719:3:31"},"nodeType":"YulFunctionCall","src":"36719:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36666:43:31"},"nodeType":"YulFunctionCall","src":"36666:72:31"},"nodeType":"YulExpressionStatement","src":"36666:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36792:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36805:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36816:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36801:3:31"},"nodeType":"YulFunctionCall","src":"36801:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36748:43:31"},"nodeType":"YulFunctionCall","src":"36748:72:31"},"nodeType":"YulExpressionStatement","src":"36748:72:31"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36874:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36887:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36898:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36883:3:31"},"nodeType":"YulFunctionCall","src":"36883:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36830:43:31"},"nodeType":"YulFunctionCall","src":"36830:73:31"},"nodeType":"YulExpressionStatement","src":"36830:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36396:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36408:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36416:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36424:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36432:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36440:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36451:4:31","type":""}],"src":"36246:664:31"},{"body":{"nodeType":"YulBlock","src":"36959:43:31","statements":[{"nodeType":"YulAssignment","src":"36969:27:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36984:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"36991:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36980:3:31"},"nodeType":"YulFunctionCall","src":"36980:16:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36969:7:31"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36941:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36951:7:31","type":""}],"src":"36916:86:31"},{"body":{"nodeType":"YulBlock","src":"37069:51:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37086:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37107:5:31"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"37091:15:31"},"nodeType":"YulFunctionCall","src":"37091:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37079:6:31"},"nodeType":"YulFunctionCall","src":"37079:35:31"},"nodeType":"YulExpressionStatement","src":"37079:35:31"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37057:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37064:3:31","type":""}],"src":"37008:112:31"},{"body":{"nodeType":"YulBlock","src":"37304:367:31","statements":[{"nodeType":"YulAssignment","src":"37314:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37326:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37337:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37322:3:31"},"nodeType":"YulFunctionCall","src":"37322:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37314:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37395:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37408:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37419:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37404:3:31"},"nodeType":"YulFunctionCall","src":"37404:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37351:43:31"},"nodeType":"YulFunctionCall","src":"37351:71:31"},"nodeType":"YulExpressionStatement","src":"37351:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37472:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37485:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37496:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37481:3:31"},"nodeType":"YulFunctionCall","src":"37481:18:31"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"37432:39:31"},"nodeType":"YulFunctionCall","src":"37432:68:31"},"nodeType":"YulExpressionStatement","src":"37432:68:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37554:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37567:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37578:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37563:3:31"},"nodeType":"YulFunctionCall","src":"37563:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37510:43:31"},"nodeType":"YulFunctionCall","src":"37510:72:31"},"nodeType":"YulExpressionStatement","src":"37510:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37636:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37649:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37660:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37645:3:31"},"nodeType":"YulFunctionCall","src":"37645:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37592:43:31"},"nodeType":"YulFunctionCall","src":"37592:72:31"},"nodeType":"YulExpressionStatement","src":"37592:72:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37252:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37264:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37272:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37280:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37288:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37299:4:31","type":""}],"src":"37126:545:31"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid artist address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5c45ec071f8cfd686b1537a311c00c17c7469280000f6af9d6ae03e5b0b3ac9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid user address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee exceeds maximum allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e7a390dd85065d3a503916c509ab8ae8250db51b9702145c670a95e38677f85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84(memPtr) {\n\n        mstore(add(memPtr, 0), \"Same address provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9efb8b6d1f32747c553b253af312b913575845d9063106c951c353f89279ba84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"General min must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_527ae773f14492830f9efdfefcbd99f1b8ea24f13d75a747b07ace15578c07a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f(memPtr) {\n\n        mstore(add(memPtr, 0), \"General max must be greater than\")\n\n        mstore(add(memPtr, 32), \" min\")\n\n    }\n\n    function abi_encode_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_403967289aa5daae6cfad512f62b6bb1997666a8455a7d463d31c20bc71cf28f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Verified max must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n general max\")\n\n    }\n\n    function abi_encode_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f64ca8815846567fa69db898c29ea3c4243674f5aef2fc551b9c368241cd06d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid verifier address\")\n\n    }\n\n    function abi_encode_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517(memPtr) {\n\n        mstore(add(memPtr, 0), \"Signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment amount below minimum\")\n\n    }\n\n    function abi_encode_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_053d3b85bf084e97b9c02068d13a3d99483e05358dab3d75fb71e85a37ef8244_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Artist cannot be Craftiax addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8da893c00f95b7b6f7fb320599b783e4726d4befba51c89deaa528e05ca70ab5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment exceeds verified limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c60cf218e1680a529190db2bdc01d583eb0711d4f7018e294a17be3e501aad04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment exceeds general limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70cb2e3760937f0e410f03cab244a1c059d0ac8d32edd9d2db9f48d48b111152_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send payment to artist\")\n\n    }\n\n    function abi_encode_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f97b6b2d8d5a5aec3ac84f6b05bbb273685f6e1db36dc662632ae42c436527b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send payment to Crafti\")\n\n        mstore(add(memPtr, 32), \"ax\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ed0586916a42fd93c9a5ddb15b3f32ece08a6056cdd91d145cf1f7227d97ec2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Status already set\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab61bd020722e7adf8b9b6bfffe53c9136451a9f29ef1f9da3a0a42d97d6528a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3977":[{"length":32,"start":6809}],"3979":[{"length":32,"start":6768}],"3981":[{"length":32,"start":6682}],"3983":[{"length":32,"start":7527}],"3985":[{"length":32,"start":7560}],"3988":[{"length":32,"start":6235}],"3991":[{"length":32,"start":6294}]},"linkReferences":{},"object":"6080604052600436106101395760003560e01c8063811ab42a116100ab578063b1c1008c1161006f578063b1c1008c146103ff578063bc979e0c1461042a578063eb566e9114610455578063f2fde38b14610480578063f8231848146104a9578063fb14a834146104c557610140565b8063811ab42a1461032657806382948fe11461035157806384b0196e1461037a5780638da5cb5b146103ab57806397fc007c146103d657610140565b80635abd7cce116100fd5780635abd7cce14610218578063657affbf146102435780636cad3fb014610280578063715018a6146102a9578063790e8739146102c05780637ecebe00146102e957610140565b80633b7810f2146101455780634e75baaf14610170578063511e2fbf1461019b57806353a78064146101c4578063558e44d3146101ed57610140565b3661014057005b600080fd5b34801561015157600080fd5b5061015a6104ee565b6040516101679190611f35565b60405180910390f35b34801561017c57600080fd5b506101856104f4565b6040516101929190611f35565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190612001565b6104fa565b005b3480156101d057600080fd5b506101eb60048036038101906101e691906120bf565b610731565b005b3480156101f957600080fd5b506102026108a2565b60405161020f9190611f35565b60405180910390f35b34801561022457600080fd5b5061022d6108a7565b60405161023a9190611f35565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906120bf565b6108ad565b60405161027791906120fb565b60405180910390f35b34801561028c57600080fd5b506102a760048036038101906102a29190612142565b6108cd565b005b3480156102b557600080fd5b506102be61095a565b005b3480156102cc57600080fd5b506102e760048036038101906102e291906120bf565b61096e565b005b3480156102f557600080fd5b50610310600480360381019061030b91906120bf565b610af0565b60405161031d9190611f35565b60405180910390f35b34801561033257600080fd5b5061033b610b39565b604051610348919061217e565b60405180910390f35b34801561035d57600080fd5b5061037860048036038101906103739190612199565b610b5f565b005b34801561038657600080fd5b5061038f610c83565b6040516103a2979695949392919061238e565b60405180910390f35b3480156103b757600080fd5b506103c0610d2d565b6040516103cd919061217e565b60405180910390f35b3480156103e257600080fd5b506103fd60048036038101906103f891906120bf565b610d57565b005b34801561040b57600080fd5b50610414610e94565b6040516104219190611f35565b60405180910390f35b34801561043657600080fd5b5061043f610e9f565b60405161044c9190611f35565b60405180910390f35b34801561046157600080fd5b5061046a610ea5565b6040516104779190611f35565b60405180910390f35b34801561048c57600080fd5b506104a760048036038101906104a291906120bf565b610eaf565b005b6104c360048036038101906104be9190612542565b610f35565b005b3480156104d157600080fd5b506104ec60048036038101906104e791906125b1565b611553565b005b60055481565b60085481565b610502611705565b60005b8383905081101561072b57600073ffffffffffffffffffffffffffffffffffffffff1684848381811061053b5761053a6125f1565b5b905060200201602081019061055091906120bf565b73ffffffffffffffffffffffffffffffffffffffff16036105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d9061266c565b60405180910390fd5b811515600960008686858181106105c0576105bf6125f1565b5b90506020020160208101906105d591906120bf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461071857816009600086868581811061063c5761063b6125f1565b5b905060200201602081019061065191906120bf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508383828181106106b5576106b46125f1565b5b90506020020160208101906106ca91906120bf565b73ffffffffffffffffffffffffffffffffffffffff167f0e04ae0d5e07c196abfdddf316ed5a149db87e19d926fcc1bdbb97eb3e7e49968360405161070f91906120fb565b60405180910390a25b8080610723906126bb565b915050610505565b50505050565b610739611705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f9061274f565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f1800cd2301fbc20790ed94f3d55a28ef2306a9c31cd3c72b5b71b6e4cf5c6241826040516108969190611f35565b60405180910390a25050565b601481565b60065481565b60096020528060005260406000206000915054906101000a900460ff1681565b6108d5611705565b6014811115610919576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610910906127bb565b60405180910390fd5b806005819055507f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c768160405161094f9190611f35565b60405180910390a150565b610962611705565b61096c600061178c565b565b610976611705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc90612827565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90612893565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f53baf540f6ba4584584ccbd80c43cc27031fb628cd53b60d5b07cb026f04447081604051610ae5919061217e565b60405180910390a150565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b67611705565b60008311610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba190612925565b60405180910390fd5b828211610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be3906129b7565b60405180910390fd5b818111610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590612a49565b60405180910390fd5b8260068190555081600781905550806008819055507fa4d4826a6fbc5911d78e36c33efad85b381295bdb2efb011ac33984434a8e5b9838383604051610c7693929190612a69565b60405180910390a1505050565b600060608060008060006060610c97611852565b610c9f61188d565b46306000801b600067ffffffffffffffff811115610cc057610cbf612417565b5b604051908082528060200260200182016040528015610cee5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d5f611705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc590612aec565b60405180910390fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f0243549a92b2412f7a3caf7a2e56d65b8821b91345363faa5f57195384065fcc60405160405180910390a35050565b66b1a2bc2ec5000081565b60075481565b6516bcc41e900081565b610eb7611705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f295760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f20919061217e565b60405180910390fd5b610f328161178c565b50565b610f3d6118c8565b81421115610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790612b58565b60405180910390fd5b60007fba5f9b5e8fd41dce0e09bc45e89026d6d1648da87378147343d6033f976b45598434600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610ff5906126bb565b91905055864660405160200161101096959493929190612b78565b60405160208183030381529060405280519060200120905060006110338261190e565b905060006110418285611928565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ca90612c25565b60405180910390fd5b600654341015611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f90612c91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117e9061266c565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e90612d23565b60405180910390fd5b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112b3576008543411156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590612d8f565b60405180910390fd5b6112f9565b6007543411156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef90612dfb565b60405180910390fd5b5b600060646005543461130b9190612e1b565b6113159190612e8c565b9050600081346113259190612ebd565b905060008873ffffffffffffffffffffffffffffffffffffffff168260405161134d90612f22565b60006040518083038185875af1925050503d806000811461138a576040519150601f19603f3d011682016040523d82523d6000602084013e61138f565b606091505b50509050806113d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca90612f83565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168460405161141b90612f22565b60006040518083038185875af1925050503d8060008114611458576040519150601f19603f3d011682016040523d82523d6000602084013e61145d565b606091505b50509050806114a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149890613015565b60405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff167fdd061644a2478fe067a60a32ca1bce725bc0c45ef99d529be0556b3f22dfb2548486600960008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660405161153793929190613035565b60405180910390a25050505050505061154e611954565b505050565b61155b611705565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c19061266c565b60405180910390fd5b801515600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615150361165c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611653906130b8565b60405180910390fd5b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0e04ae0d5e07c196abfdddf316ed5a149db87e19d926fcc1bdbb97eb3e7e4996826040516116f991906120fb565b60405180910390a25050565b61170d61195e565b73ffffffffffffffffffffffffffffffffffffffff1661172b610d2d565b73ffffffffffffffffffffffffffffffffffffffff161461178a5761174e61195e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611781919061217e565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606061188860027f000000000000000000000000000000000000000000000000000000000000000061196690919063ffffffff16565b905090565b60606118c360037f000000000000000000000000000000000000000000000000000000000000000061196690919063ffffffff16565b905090565b600260005403611904576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b600061192161191b611a16565b83611acd565b9050919050565b6000806000806119388686611b0e565b9250925092506119488282611b6a565b82935050505092915050565b6001600081905550565b600033905090565b606060ff60001b83146119835761197c83611cce565b9050611a10565b81805461198f90613107565b80601f01602080910402602001604051908101604052809291908181526020018280546119bb90613107565b8015611a085780601f106119dd57610100808354040283529160200191611a08565b820191906000526020600020905b8154815290600101906020018083116119eb57829003601f168201915b505050505090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015611a9257507f000000000000000000000000000000000000000000000000000000000000000046145b15611abf577f00000000000000000000000000000000000000000000000000000000000000009050611aca565b611ac7611d42565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060006041845103611b535760008060006020870151925060408701519150606087015160001a9050611b4588828585611dd8565b955095509550505050611b63565b60006002855160001b9250925092505b9250925092565b60006003811115611b7e57611b7d613138565b5b826003811115611b9157611b90613138565b5b0315611cca5760016003811115611bab57611baa613138565b5b826003811115611bbe57611bbd613138565b5b03611bf5576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611c0957611c08613138565b5b826003811115611c1c57611c1b613138565b5b03611c61578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611c589190611f35565b60405180910390fd5b600380811115611c7457611c73613138565b5b826003811115611c8757611c86613138565b5b03611cc957806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611cc09190613167565b60405180910390fd5b5b5050565b60606000611cdb83611ecc565b90506000602067ffffffffffffffff811115611cfa57611cf9612417565b5b6040519080825280601f01601f191660200182016040528015611d2c5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611dbd959493929190613182565b60405160208183030381529060405280519060200120905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611e18576000600385925092509250611ec2565b600060018888888860405160008152602001604052604051611e3d94939291906131f1565b6020604051602081039080840390855afa158015611e5f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611eb357600060016000801b93509350935050611ec2565b8060008060001b935093509350505b9450945094915050565b60008060ff8360001c169050601f811115611f13576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000819050919050565b611f2f81611f1c565b82525050565b6000602082019050611f4a6000830184611f26565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112611f8957611f88611f64565b5b8235905067ffffffffffffffff811115611fa657611fa5611f69565b5b602083019150836020820283011115611fc257611fc1611f6e565b5b9250929050565b60008115159050919050565b611fde81611fc9565b8114611fe957600080fd5b50565b600081359050611ffb81611fd5565b92915050565b60008060006040848603121561201a57612019611f5a565b5b600084013567ffffffffffffffff81111561203857612037611f5f565b5b61204486828701611f73565b9350935050602061205786828701611fec565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061208c82612061565b9050919050565b61209c81612081565b81146120a757600080fd5b50565b6000813590506120b981612093565b92915050565b6000602082840312156120d5576120d4611f5a565b5b60006120e3848285016120aa565b91505092915050565b6120f581611fc9565b82525050565b600060208201905061211060008301846120ec565b92915050565b61211f81611f1c565b811461212a57600080fd5b50565b60008135905061213c81612116565b92915050565b60006020828403121561215857612157611f5a565b5b60006121668482850161212d565b91505092915050565b61217881612081565b82525050565b6000602082019050612193600083018461216f565b92915050565b6000806000606084860312156121b2576121b1611f5a565b5b60006121c08682870161212d565b93505060206121d18682870161212d565b92505060406121e28682870161212d565b9150509250925092565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612221816121ec565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612261578082015181840152602081019050612246565b60008484015250505050565b6000601f19601f8301169050919050565b600061228982612227565b6122938185612232565b93506122a3818560208601612243565b6122ac8161226d565b840191505092915050565b6000819050919050565b6122ca816122b7565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61230581611f1c565b82525050565b600061231783836122fc565b60208301905092915050565b6000602082019050919050565b600061233b826122d0565b61234581856122db565b9350612350836122ec565b8060005b83811015612381578151612368888261230b565b975061237383612323565b925050600181019050612354565b5085935050505092915050565b600060e0820190506123a3600083018a612218565b81810360208301526123b5818961227e565b905081810360408301526123c9818861227e565b90506123d86060830187611f26565b6123e5608083018661216f565b6123f260a08301856122c1565b81810360c08301526124048184612330565b905098975050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61244f8261226d565b810181811067ffffffffffffffff8211171561246e5761246d612417565b5b80604052505050565b6000612481611f50565b905061248d8282612446565b919050565b600067ffffffffffffffff8211156124ad576124ac612417565b5b6124b68261226d565b9050602081019050919050565b82818337600083830152505050565b60006124e56124e084612492565b612477565b90508281526020810184848401111561250157612500612412565b5b61250c8482856124c3565b509392505050565b600082601f83011261252957612528611f64565b5b81356125398482602086016124d2565b91505092915050565b60008060006060848603121561255b5761255a611f5a565b5b6000612569868287016120aa565b935050602061257a8682870161212d565b925050604084013567ffffffffffffffff81111561259b5761259a611f5f565b5b6125a786828701612514565b9150509250925092565b600080604083850312156125c8576125c7611f5a565b5b60006125d6858286016120aa565b92505060206125e785828601611fec565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420617274697374206164647265737300000000000000000000600082015250565b6000612656601683612232565b915061266182612620565b602082019050919050565b6000602082019050818103600083015261268581612649565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126c682611f1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126f8576126f761268c565b5b600182019050919050565b7f496e76616c696420757365722061646472657373000000000000000000000000600082015250565b6000612739601483612232565b915061274482612703565b602082019050919050565b600060208201905081810360008301526127688161272c565b9050919050565b7f4665652065786365656473206d6178696d756d20616c6c6f7765640000000000600082015250565b60006127a5601b83612232565b91506127b08261276f565b602082019050919050565b600060208201905081810360008301526127d481612798565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000612811600f83612232565b915061281c826127db565b602082019050919050565b6000602082019050818103600083015261284081612804565b9050919050565b7f53616d6520616464726573732070726f76696465640000000000000000000000600082015250565b600061287d601583612232565b915061288882612847565b602082019050919050565b600060208201905081810360008301526128ac81612870565b9050919050565b7f47656e6572616c206d696e206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b600061290f602283612232565b915061291a826128b3565b604082019050919050565b6000602082019050818103600083015261293e81612902565b9050919050565b7f47656e6572616c206d6178206d7573742062652067726561746572207468616e60008201527f206d696e00000000000000000000000000000000000000000000000000000000602082015250565b60006129a1602483612232565b91506129ac82612945565b604082019050919050565b600060208201905081810360008301526129d081612994565b9050919050565b7f5665726966696564206d6178206d75737420626520677265617465722074686160008201527f6e2067656e6572616c206d617800000000000000000000000000000000000000602082015250565b6000612a33602d83612232565b9150612a3e826129d7565b604082019050919050565b60006020820190508181036000830152612a6281612a26565b9050919050565b6000606082019050612a7e6000830186611f26565b612a8b6020830185611f26565b612a986040830184611f26565b949350505050565b7f496e76616c696420766572696669657220616464726573730000000000000000600082015250565b6000612ad6601883612232565b9150612ae182612aa0565b602082019050919050565b60006020820190508181036000830152612b0581612ac9565b9050919050565b7f5369676e61747572652065787069726564000000000000000000000000000000600082015250565b6000612b42601183612232565b9150612b4d82612b0c565b602082019050919050565b60006020820190508181036000830152612b7181612b35565b9050919050565b600060c082019050612b8d60008301896122c1565b612b9a602083018861216f565b612ba76040830187611f26565b612bb46060830186611f26565b612bc16080830185611f26565b612bce60a0830184611f26565b979650505050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000612c0f601183612232565b9150612c1a82612bd9565b602082019050919050565b60006020820190508181036000830152612c3e81612c02565b9050919050565b7f5061796d656e7420616d6f756e742062656c6f77206d696e696d756d00000000600082015250565b6000612c7b601c83612232565b9150612c8682612c45565b602082019050919050565b60006020820190508181036000830152612caa81612c6e565b9050919050565b7f4172746973742063616e6e6f742062652043726166746961782061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d0d602183612232565b9150612d1882612cb1565b604082019050919050565b60006020820190508181036000830152612d3c81612d00565b9050919050565b7f5061796d656e742065786365656473207665726966696564206c696d69740000600082015250565b6000612d79601e83612232565b9150612d8482612d43565b602082019050919050565b60006020820190508181036000830152612da881612d6c565b9050919050565b7f5061796d656e7420657863656564732067656e6572616c206c696d6974000000600082015250565b6000612de5601d83612232565b9150612df082612daf565b602082019050919050565b60006020820190508181036000830152612e1481612dd8565b9050919050565b6000612e2682611f1c565b9150612e3183611f1c565b9250828202612e3f81611f1c565b91508282048414831517612e5657612e5561268c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e9782611f1c565b9150612ea283611f1c565b925082612eb257612eb1612e5d565b5b828204905092915050565b6000612ec882611f1c565b9150612ed383611f1c565b9250828203905081811115612eeb57612eea61268c565b5b92915050565b600081905092915050565b50565b6000612f0c600083612ef1565b9150612f1782612efc565b600082019050919050565b6000612f2d82612eff565b9150819050919050565b7f4661696c656420746f2073656e64207061796d656e7420746f20617274697374600082015250565b6000612f6d602083612232565b9150612f7882612f37565b602082019050919050565b60006020820190508181036000830152612f9c81612f60565b9050919050565b7f4661696c656420746f2073656e64207061796d656e7420746f2043726166746960008201527f6178000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fff602283612232565b915061300a82612fa3565b604082019050919050565b6000602082019050818103600083015261302e81612ff2565b9050919050565b600060608201905061304a6000830186611f26565b6130576020830185611f26565b61306460408301846120ec565b949350505050565b7f53746174757320616c7265616479207365740000000000000000000000000000600082015250565b60006130a2601283612232565b91506130ad8261306c565b602082019050919050565b600060208201905081810360008301526130d181613095565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061311f57607f821691505b602082108103613132576131316130d8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208201905061317c60008301846122c1565b92915050565b600060a08201905061319760008301886122c1565b6131a460208301876122c1565b6131b160408301866122c1565b6131be6060830185611f26565b6131cb608083018461216f565b9695505050505050565b600060ff82169050919050565b6131eb816131d5565b82525050565b600060808201905061320660008301876122c1565b61321360208301866131e2565b61322060408301856122c1565b61322d60608301846122c1565b9594505050505056fea2646970667358221220598273b7f8141b386740e4e48a6313abadbb3ee07d9a76ccfe23e48ae319fbc064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x811AB42A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB1C1008C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB1C1008C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xBC979E0C EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xEB566E91 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xF8231848 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xFB14A834 EQ PUSH2 0x4C5 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x811AB42A EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x82948FE1 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x3D6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x5ABD7CCE GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x5ABD7CCE EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x657AFFBF EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x6CAD3FB0 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x790E8739 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E9 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3B7810F2 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4E75BAAF EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x511E2FBF EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x53A78064 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x558E44D3 EQ PUSH2 0x1ED JUMPI PUSH2 0x140 JUMP JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x53B JUMPI PUSH2 0x53A PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x718 JUMPI DUP2 PUSH1 0x9 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6B5 JUMPI PUSH2 0x6B4 PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE04AE0D5E07C196ABFDDDF316ED5A149DB87E19D926FCC1BDBB97EB3E7E4996 DUP4 PUSH1 0x40 MLOAD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 DUP1 PUSH2 0x723 SWAP1 PUSH2 0x26BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP1 PUSH2 0x274F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1800CD2301FBC20790ED94F3D55A28EF2306A9C31CD3C72B5B71B6E4CF5C6241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 DUP2 PUSH1 0x40 MLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x962 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x96C PUSH1 0x0 PUSH2 0x178C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x976 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP1 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x53BAF540F6BA4584584CCBD80C43CC27031FB628CD53B60D5B07CB026F044470 DUP2 PUSH1 0x40 MLOAD PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE3 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC25 SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xA4D4826A6FBC5911D78E36C33EFAD85B381295BDB2EFB011AC33984434A8E5B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xC97 PUSH2 0x1852 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0x188D JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCEE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5F PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x243549A92B2412F7A3CAF7A2E56D65B8821B91345363FAA5F57195384065FCC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH7 0xB1A2BC2EC50000 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH6 0x16BCC41E9000 DUP2 JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF32 DUP2 PUSH2 0x178C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x18C8 JUMP JUMPDEST DUP2 TIMESTAMP GT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP1 PUSH2 0x2B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xBA5F9B5E8FD41DCE0E09BC45E89026D6D1648DA87378147343D6033F976B4559 DUP5 CALLVALUE PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFF5 SWAP1 PUSH2 0x26BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP7 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1010 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1033 DUP3 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1041 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CA SWAP1 PUSH2 0x2C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x2C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117E SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x8 SLOAD CALLVALUE GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EF SWAP1 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x2E1B JUMP JUMPDEST PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 CALLVALUE PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2EBD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CA SWAP1 PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x141B SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1498 SWAP1 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD061644A2478FE067A60A32CA1BCE725BC0C45EF99D529BE0556B3F22DFB254 DUP5 DUP7 PUSH1 0x9 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1537 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP PUSH2 0x154E PUSH2 0x1954 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x155B PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1653 SWAP1 PUSH2 0x30B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE04AE0D5E07C196ABFDDDF316ED5A149DB87E19D926FCC1BDBB97EB3E7E4996 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x170D PUSH2 0x195E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172B PUSH2 0xD2D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x178A JUMPI PUSH2 0x174E PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1888 PUSH1 0x2 PUSH32 0x0 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18C3 PUSH1 0x3 PUSH32 0x0 PUSH2 0x1966 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH2 0x191B PUSH2 0x1A16 JUMP JUMPDEST DUP4 PUSH2 0x1ACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1938 DUP7 DUP7 PUSH2 0x1B0E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1948 DUP3 DUP3 PUSH2 0x1B6A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1983 JUMPI PUSH2 0x197C DUP4 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A10 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x3107 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BB SWAP1 PUSH2 0x3107 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A92 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1ABF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x1AC7 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1B53 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1B45 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1DD8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1BF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C61 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x3138 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CC9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CDB DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DBD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1EC2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1F13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2F DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F89 JUMPI PUSH2 0x1F88 PUSH2 0x1F64 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH2 0x1FA5 PUSH2 0x1F69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1F6E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDE DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FFB DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2038 JUMPI PUSH2 0x2037 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH2 0x2044 DUP7 DUP3 DUP8 ADD PUSH2 0x1F73 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2057 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208C DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209C DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B9 DUP2 PUSH2 0x2093 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D4 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2110 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x211F DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP2 EQ PUSH2 0x212A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x213C DUP2 PUSH2 0x2116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP5 DUP3 DUP6 ADD PUSH2 0x212D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21D1 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21E2 DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2221 DUP2 PUSH2 0x21EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x2293 DUP2 DUP6 PUSH2 0x2232 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x22AC DUP2 PUSH2 0x226D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CA DUP2 PUSH2 0x22B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2305 DUP2 PUSH2 0x1F1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2317 DUP4 DUP4 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233B DUP3 PUSH2 0x22D0 JUMP JUMPDEST PUSH2 0x2345 DUP2 DUP6 PUSH2 0x22DB JUMP JUMPDEST SWAP4 POP PUSH2 0x2350 DUP4 PUSH2 0x22EC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2381 JUMPI DUP2 MLOAD PUSH2 0x2368 DUP9 DUP3 PUSH2 0x230B JUMP JUMPDEST SWAP8 POP PUSH2 0x2373 DUP4 PUSH2 0x2323 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2354 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x23A3 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2218 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 DUP10 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23C9 DUP2 DUP9 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP PUSH2 0x23D8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x23E5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x23F2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x22C1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2404 DUP2 DUP5 PUSH2 0x2330 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x244F DUP3 PUSH2 0x226D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2417 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2481 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH2 0x248D DUP3 DUP3 PUSH2 0x2446 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24AD JUMPI PUSH2 0x24AC PUSH2 0x2417 JUMP JUMPDEST JUMPDEST PUSH2 0x24B6 DUP3 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E5 PUSH2 0x24E0 DUP5 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2501 JUMPI PUSH2 0x2500 PUSH2 0x2412 JUMP JUMPDEST JUMPDEST PUSH2 0x250C DUP5 DUP3 DUP6 PUSH2 0x24C3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x1F64 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2539 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x255B JUMPI PUSH2 0x255A PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2569 DUP7 DUP3 DUP8 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x257A DUP7 DUP3 DUP8 ADD PUSH2 0x212D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x259B JUMPI PUSH2 0x259A PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH2 0x25A7 DUP7 DUP3 DUP8 ADD PUSH2 0x2514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C8 JUMPI PUSH2 0x25C7 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D6 DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420617274697374206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2656 PUSH1 0x16 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2661 DUP3 PUSH2 0x2620 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2685 DUP2 PUSH2 0x2649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26C6 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26F8 JUMPI PUSH2 0x26F7 PUSH2 0x268C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420757365722061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2739 PUSH1 0x14 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2744 DUP3 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2768 DUP2 PUSH2 0x272C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665652065786365656473206D6178696D756D20616C6C6F7765640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A5 PUSH1 0x1B DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B0 DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D4 DUP2 PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2811 PUSH1 0xF DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x281C DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2840 DUP2 PUSH2 0x2804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616D6520616464726573732070726F76696465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287D PUSH1 0x15 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2888 DUP3 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28AC DUP2 PUSH2 0x2870 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47656E6572616C206D696E206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290F PUSH1 0x22 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x291A DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293E DUP2 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47656E6572616C206D6178206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D696E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A1 PUSH1 0x24 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x29AC DUP3 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29D0 DUP2 PUSH2 0x2994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5665726966696564206D6178206D757374206265206772656174657220746861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E2067656E6572616C206D617800000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0x2D DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A7E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2A8B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2A98 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420766572696669657220616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD6 PUSH1 0x18 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE1 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B05 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B42 PUSH1 0x11 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4D DUP3 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B71 DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2B8D PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x2B9A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x2BA7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BB4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH1 0x11 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1A DUP3 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C3E DUP2 PUSH2 0x2C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420616D6F756E742062656C6F77206D696E696D756D00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C7B PUSH1 0x1C DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C86 DUP3 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CAA DUP2 PUSH2 0x2C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172746973742063616E6E6F7420626520437261667469617820616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0D PUSH1 0x21 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D18 DUP3 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3C DUP2 PUSH2 0x2D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E742065786365656473207665726966696564206C696D69740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D79 PUSH1 0x1E DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D84 DUP3 PUSH2 0x2D43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA8 DUP2 PUSH2 0x2D6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420657863656564732067656E6572616C206C696D6974000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE5 PUSH1 0x1D DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E14 DUP2 PUSH2 0x2DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E26 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2E31 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2E3F DUP2 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2E56 JUMPI PUSH2 0x2E55 PUSH2 0x268C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E97 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x2E5D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC8 DUP3 PUSH2 0x1F1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED3 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EEB JUMPI PUSH2 0x2EEA PUSH2 0x268C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0C PUSH1 0x0 DUP4 PUSH2 0x2EF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F17 DUP3 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2D DUP3 PUSH2 0x2EFF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64207061796D656E7420746F20617274697374 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6D PUSH1 0x20 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F78 DUP3 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9C DUP2 PUSH2 0x2F60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64207061796D656E7420746F20437261667469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6178000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFF PUSH1 0x22 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x300A DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x302E DUP2 PUSH2 0x2FF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x304A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x3057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x3064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53746174757320616C7265616479207365740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A2 PUSH1 0x12 DUP4 PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP PUSH2 0x30AD DUP3 PUSH2 0x306C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D1 DUP2 PUSH2 0x3095 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x311F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3132 JUMPI PUSH2 0x3131 PUSH2 0x30D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x317C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3197 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x31BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x31CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31EB DUP2 PUSH2 0x31D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3206 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x3213 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x3220 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x322D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22C1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP3 PUSH20 0xB7F8141B386740E4E48A6313ABADBB3EE07D9A76 0xCC INVALID 0x23 0xE4 DUP11 0xE3 NOT 0xFB 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"306:7462:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5815:473;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7457:271;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;541:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1297:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5120:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;4808:304:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7348:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;404:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6342:659;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5144:557:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7062:278:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;846:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;709;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2747:2053:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5400:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;441:36;;;;:::o;1178:58::-;;;;:::o;5815:473::-;1531:13:0;:11;:13::i;:::-;5950:9:27::1;5945:336;5969:7;;:14;;5965:1;:18;5945:336;;;6035:1;6013:24;;:7;;6021:1;6013:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:24;;::::0;6005:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6115:6;6083:38;;:16;:28;6100:7;;6108:1;6100:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6083:28;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;6079:191;;6173:6;6142:16;:28;6159:7;;6167:1;6159:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6142:28;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6235:7;;6243:1;6235:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6203:51;;;6247:6;6203:51;;;;;;:::i;:::-;;;;;;;;6079:191;5985:3;;;;;:::i;:::-;;;;5945:336;;;;5815:473:::0;;;:::o;7457:271::-;1531:13:0;:11;:13::i;:::-;7550:1:27::1;7534:18;;:4;:18;;::::0;7526:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7588:20;7611:7;:13;7619:4;7611:13;;;;;;;;;;;;;;;;7588:36;;7651:17;7635:7;:13;7643:4;7635:13;;;;;;;;;;;;;;;:33;;;;7701:4;7684:36;;;7707:12;7684:36;;;;;;:::i;:::-;;;;;;;;7515:213;7457:271:::0;:::o;541:47::-;586:2;541:47;:::o;1009:52::-;;;;:::o;1297:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;5120:226::-;1531:13:0;:11;:13::i;:::-;586:2:27::1;5203:6;:28;;5195:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5298:6;5274:21;:30;;;;5320:18;5331:6;5320:18;;;;;;:::i;:::-;;;;;;;;5120:226:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4808:304:27:-;1531:13:0;:11;:13::i;:::-;4919:1:27::1;4897:24;;:10;:24;;::::0;4889:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4974:15;;;;;;;;;;;4960:29;;:10;:29;;::::0;4952:63:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5044:10;5026:15;;:28;;;;;;;;;;;;;;;;;;5070:34;5093:10;5070:34;;;;;;:::i;:::-;;;;;;;;4808:304:::0;:::o;7348:101::-;7400:7;7427;:14;7435:5;7427:14;;;;;;;;;;;;;;;;7420:21;;7348:101;;;:::o;404:30::-;;;;;;;;;;;;;:::o;6342:659::-;1531:13:0;:11;:13::i;:::-;6529:1:27::1;6513:13;:17;6505:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6604:13;6588;:29;6580:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;6694:13;6677:14;:30;6669:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;6798:13;6778:17;:33;;;;6842:13;6822:17;:33;;;;6887:14;6866:18;:35;;;;6927:66;6948:13;6963;6978:14;6927:66;;;;;;;;:::i;:::-;;;;;;;;6342:659:::0;;;:::o;5144:557:20:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;7062:278:27:-;1531:13:0;:11;:13::i;:::-;7168:1:27::1;7145:25;;:11;:25;;::::0;7137:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7210:19;7232:9;;;;;;;;;;;7210:31;;7264:11;7252:9;;:23;;;;;;;;;;;;;;;;;;7320:11;7291:41;;7307:11;7291:41;;;;;;;;;;;;7126:214;7062:278:::0;:::o;846:59::-;884:21;846:59;:::o;1094:56::-;;;;:::o;709:::-;747:18;709:56;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2747:2053:27:-;2500:21:14;:19;:21::i;:::-;2961:8:27::1;2942:15;:27;;2934:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3041:18;2085:116;3128:13;3156:9;3180:7;:19;3188:10;3180:19;;;;;;;;;;;;;;;;:21;;;;;;;;;:::i;:::-;;;;;3216:8;3239:13;3072:191;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3062:202;;;;;;3041:223;;3277:12;3292:28;3309:10;3292:16;:28::i;:::-;3277:43;;3331:14;3348:30;3362:4;3368:9;3348:13;:30::i;:::-;3331:47;;3407:9;;;;;;;;;;;3397:19;;:6;:19;;;3389:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3472:17;;3459:9;:30;;3451:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3566:1;3541:27;;:13;:27;;::::0;3533:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3631:15;;;;;;;;;;;3614:32;;:13;:32;;::::0;3606:78:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3757:16;:31;3774:13;3757:31;;;;;;;;;;;;;;;;;;;;;;;;;3753:243;;;3826:18;;3813:9;:31;;3805:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3753:243;;;3933:17;;3920:9;:30;;3912:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3753:243;4008:19;4068:3;4043:21;;4031:9;:33;;;;:::i;:::-;4030:41;;;;:::i;:::-;4008:63;;4082:21;4118:11;4106:9;:23;;;;:::i;:::-;4082:47;;4215:18;4247:13;4239:27;;4288:13;4239:77;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:102;;;4335:13;4327:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4441:20;4475:15;;;;;;;;;;;4467:29;;4518:11;4467:77;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4440:104;;;4563:15;4555:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4666:13;4635:157;;;4695:13;4724:11;4750:16;:31;4767:13;4750:31;;;;;;;;;;;;;;;;;;;;;;;;;4635:157;;;;;;;;:::i;:::-;;;;;;;;2895:1905;;;;;;;2542:20:14::0;:18;:20::i;:::-;2747:2053:27;;;:::o;5400:407::-;1531:13:0;:11;:13::i;:::-;5556:1:27::1;5531:27;;:13;:27;;::::0;5523:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5639:6;5604:41;;:16;:31;5621:13;5604:31;;;;;;;;;;;;;;;;;;;;;;;;;:41;;::::0;5596:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5723:6;5689:16;:31;5706:13;5689:31;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;5777:13;5745:54;;;5792:6;5745:54;;;;;;:::i;:::-;;;;;;;;5400:407:::0;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6021:126:20:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;2575:307:14:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;4917:176:20:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;3714:255:19:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;2888:208:14:-;1857:1;3068:7;:21;;;;2888:208::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;3358:267:15:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3845:262:20:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;3326:374:21:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;2129:778:19:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:15:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;5203:1551:19:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;2528:245:15:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:77:31:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1155:568;1228:8;1238:6;1288:3;1281:4;1273:6;1269:17;1265:27;1255:122;;1296:79;;:::i;:::-;1255:122;1409:6;1396:20;1386:30;;1439:18;1431:6;1428:30;1425:117;;;1461:79;;:::i;:::-;1425:117;1575:4;1567:6;1563:17;1551:29;;1629:3;1621:4;1613:6;1609:17;1599:8;1595:32;1592:41;1589:128;;;1636:79;;:::i;:::-;1589:128;1155:568;;;;;:::o;1729:90::-;1763:7;1806:5;1799:13;1792:21;1781:32;;1729:90;;;:::o;1825:116::-;1895:21;1910:5;1895:21;:::i;:::-;1888:5;1885:32;1875:60;;1931:1;1928;1921:12;1875:60;1825:116;:::o;1947:133::-;1990:5;2028:6;2015:20;2006:29;;2044:30;2068:5;2044:30;:::i;:::-;1947:133;;;;:::o;2086:698::-;2178:6;2186;2194;2243:2;2231:9;2222:7;2218:23;2214:32;2211:119;;;2249:79;;:::i;:::-;2211:119;2397:1;2386:9;2382:17;2369:31;2427:18;2419:6;2416:30;2413:117;;;2449:79;;:::i;:::-;2413:117;2562:80;2634:7;2625:6;2614:9;2610:22;2562:80;:::i;:::-;2544:98;;;;2340:312;2691:2;2717:50;2759:7;2750:6;2739:9;2735:22;2717:50;:::i;:::-;2707:60;;2662:115;2086:698;;;;;:::o;2790:126::-;2827:7;2867:42;2860:5;2856:54;2845:65;;2790:126;;;:::o;2922:96::-;2959:7;2988:24;3006:5;2988:24;:::i;:::-;2977:35;;2922:96;;;:::o;3024:122::-;3097:24;3115:5;3097:24;:::i;:::-;3090:5;3087:35;3077:63;;3136:1;3133;3126:12;3077:63;3024:122;:::o;3152:139::-;3198:5;3236:6;3223:20;3214:29;;3252:33;3279:5;3252:33;:::i;:::-;3152:139;;;;:::o;3297:329::-;3356:6;3405:2;3393:9;3384:7;3380:23;3376:32;3373:119;;;3411:79;;:::i;:::-;3373:119;3531:1;3556:53;3601:7;3592:6;3581:9;3577:22;3556:53;:::i;:::-;3546:63;;3502:117;3297:329;;;;:::o;3632:109::-;3713:21;3728:5;3713:21;:::i;:::-;3708:3;3701:34;3632:109;;:::o;3747:210::-;3834:4;3872:2;3861:9;3857:18;3849:26;;3885:65;3947:1;3936:9;3932:17;3923:6;3885:65;:::i;:::-;3747:210;;;;:::o;3963:122::-;4036:24;4054:5;4036:24;:::i;:::-;4029:5;4026:35;4016:63;;4075:1;4072;4065:12;4016:63;3963:122;:::o;4091:139::-;4137:5;4175:6;4162:20;4153:29;;4191:33;4218:5;4191:33;:::i;:::-;4091:139;;;;:::o;4236:329::-;4295:6;4344:2;4332:9;4323:7;4319:23;4315:32;4312:119;;;4350:79;;:::i;:::-;4312:119;4470:1;4495:53;4540:7;4531:6;4520:9;4516:22;4495:53;:::i;:::-;4485:63;;4441:117;4236:329;;;;:::o;4571:118::-;4658:24;4676:5;4658:24;:::i;:::-;4653:3;4646:37;4571:118;;:::o;4695:222::-;4788:4;4826:2;4815:9;4811:18;4803:26;;4839:71;4907:1;4896:9;4892:17;4883:6;4839:71;:::i;:::-;4695:222;;;;:::o;4923:619::-;5000:6;5008;5016;5065:2;5053:9;5044:7;5040:23;5036:32;5033:119;;;5071:79;;:::i;:::-;5033:119;5191:1;5216:53;5261:7;5252:6;5241:9;5237:22;5216:53;:::i;:::-;5206:63;;5162:117;5318:2;5344:53;5389:7;5380:6;5369:9;5365:22;5344:53;:::i;:::-;5334:63;;5289:118;5446:2;5472:53;5517:7;5508:6;5497:9;5493:22;5472:53;:::i;:::-;5462:63;;5417:118;4923:619;;;;;:::o;5548:149::-;5584:7;5624:66;5617:5;5613:78;5602:89;;5548:149;;;:::o;5703:115::-;5788:23;5805:5;5788:23;:::i;:::-;5783:3;5776:36;5703:115;;:::o;5824:99::-;5876:6;5910:5;5904:12;5894:22;;5824:99;;;:::o;5929:169::-;6013:11;6047:6;6042:3;6035:19;6087:4;6082:3;6078:14;6063:29;;5929:169;;;;:::o;6104:246::-;6185:1;6195:113;6209:6;6206:1;6203:13;6195:113;;;6294:1;6289:3;6285:11;6279:18;6275:1;6270:3;6266:11;6259:39;6231:2;6228:1;6224:10;6219:15;;6195:113;;;6342:1;6333:6;6328:3;6324:16;6317:27;6166:184;6104:246;;;:::o;6356:102::-;6397:6;6448:2;6444:7;6439:2;6432:5;6428:14;6424:28;6414:38;;6356:102;;;:::o;6464:377::-;6552:3;6580:39;6613:5;6580:39;:::i;:::-;6635:71;6699:6;6694:3;6635:71;:::i;:::-;6628:78;;6715:65;6773:6;6768:3;6761:4;6754:5;6750:16;6715:65;:::i;:::-;6805:29;6827:6;6805:29;:::i;:::-;6800:3;6796:39;6789:46;;6556:285;6464:377;;;;:::o;6847:77::-;6884:7;6913:5;6902:16;;6847:77;;;:::o;6930:118::-;7017:24;7035:5;7017:24;:::i;:::-;7012:3;7005:37;6930:118;;:::o;7054:114::-;7121:6;7155:5;7149:12;7139:22;;7054:114;;;:::o;7174:184::-;7273:11;7307:6;7302:3;7295:19;7347:4;7342:3;7338:14;7323:29;;7174:184;;;;:::o;7364:132::-;7431:4;7454:3;7446:11;;7484:4;7479:3;7475:14;7467:22;;7364:132;;;:::o;7502:108::-;7579:24;7597:5;7579:24;:::i;:::-;7574:3;7567:37;7502:108;;:::o;7616:179::-;7685:10;7706:46;7748:3;7740:6;7706:46;:::i;:::-;7784:4;7779:3;7775:14;7761:28;;7616:179;;;;:::o;7801:113::-;7871:4;7903;7898:3;7894:14;7886:22;;7801:113;;;:::o;7950:732::-;8069:3;8098:54;8146:5;8098:54;:::i;:::-;8168:86;8247:6;8242:3;8168:86;:::i;:::-;8161:93;;8278:56;8328:5;8278:56;:::i;:::-;8357:7;8388:1;8373:284;8398:6;8395:1;8392:13;8373:284;;;8474:6;8468:13;8501:63;8560:3;8545:13;8501:63;:::i;:::-;8494:70;;8587:60;8640:6;8587:60;:::i;:::-;8577:70;;8433:224;8420:1;8417;8413:9;8408:14;;8373:284;;;8377:14;8673:3;8666:10;;8074:608;;;7950:732;;;;:::o;8688:1215::-;9037:4;9075:3;9064:9;9060:19;9052:27;;9089:69;9155:1;9144:9;9140:17;9131:6;9089:69;:::i;:::-;9205:9;9199:4;9195:20;9190:2;9179:9;9175:18;9168:48;9233:78;9306:4;9297:6;9233:78;:::i;:::-;9225:86;;9358:9;9352:4;9348:20;9343:2;9332:9;9328:18;9321:48;9386:78;9459:4;9450:6;9386:78;:::i;:::-;9378:86;;9474:72;9542:2;9531:9;9527:18;9518:6;9474:72;:::i;:::-;9556:73;9624:3;9613:9;9609:19;9600:6;9556:73;:::i;:::-;9639;9707:3;9696:9;9692:19;9683:6;9639:73;:::i;:::-;9760:9;9754:4;9750:20;9744:3;9733:9;9729:19;9722:49;9788:108;9891:4;9882:6;9788:108;:::i;:::-;9780:116;;8688:1215;;;;;;;;;;:::o;9909:117::-;10018:1;10015;10008:12;10032:180;10080:77;10077:1;10070:88;10177:4;10174:1;10167:15;10201:4;10198:1;10191:15;10218:281;10301:27;10323:4;10301:27;:::i;:::-;10293:6;10289:40;10431:6;10419:10;10416:22;10395:18;10383:10;10380:34;10377:62;10374:88;;;10442:18;;:::i;:::-;10374:88;10482:10;10478:2;10471:22;10261:238;10218:281;;:::o;10505:129::-;10539:6;10566:20;;:::i;:::-;10556:30;;10595:33;10623:4;10615:6;10595:33;:::i;:::-;10505:129;;;:::o;10640:307::-;10701:4;10791:18;10783:6;10780:30;10777:56;;;10813:18;;:::i;:::-;10777:56;10851:29;10873:6;10851:29;:::i;:::-;10843:37;;10935:4;10929;10925:15;10917:23;;10640:307;;;:::o;10953:146::-;11050:6;11045:3;11040;11027:30;11091:1;11082:6;11077:3;11073:16;11066:27;10953:146;;;:::o;11105:423::-;11182:5;11207:65;11223:48;11264:6;11223:48;:::i;:::-;11207:65;:::i;:::-;11198:74;;11295:6;11288:5;11281:21;11333:4;11326:5;11322:16;11371:3;11362:6;11357:3;11353:16;11350:25;11347:112;;;11378:79;;:::i;:::-;11347:112;11468:54;11515:6;11510:3;11505;11468:54;:::i;:::-;11188:340;11105:423;;;;;:::o;11547:338::-;11602:5;11651:3;11644:4;11636:6;11632:17;11628:27;11618:122;;11659:79;;:::i;:::-;11618:122;11776:6;11763:20;11801:78;11875:3;11867:6;11860:4;11852:6;11848:17;11801:78;:::i;:::-;11792:87;;11608:277;11547:338;;;;:::o;11891:797::-;11977:6;11985;11993;12042:2;12030:9;12021:7;12017:23;12013:32;12010:119;;;12048:79;;:::i;:::-;12010:119;12168:1;12193:53;12238:7;12229:6;12218:9;12214:22;12193:53;:::i;:::-;12183:63;;12139:117;12295:2;12321:53;12366:7;12357:6;12346:9;12342:22;12321:53;:::i;:::-;12311:63;;12266:118;12451:2;12440:9;12436:18;12423:32;12482:18;12474:6;12471:30;12468:117;;;12504:79;;:::i;:::-;12468:117;12609:62;12663:7;12654:6;12643:9;12639:22;12609:62;:::i;:::-;12599:72;;12394:287;11891:797;;;;;:::o;12694:468::-;12759:6;12767;12816:2;12804:9;12795:7;12791:23;12787:32;12784:119;;;12822:79;;:::i;:::-;12784:119;12942:1;12967:53;13012:7;13003:6;12992:9;12988:22;12967:53;:::i;:::-;12957:63;;12913:117;13069:2;13095:50;13137:7;13128:6;13117:9;13113:22;13095:50;:::i;:::-;13085:60;;13040:115;12694:468;;;;;:::o;13168:180::-;13216:77;13213:1;13206:88;13313:4;13310:1;13303:15;13337:4;13334:1;13327:15;13354:172;13494:24;13490:1;13482:6;13478:14;13471:48;13354:172;:::o;13532:366::-;13674:3;13695:67;13759:2;13754:3;13695:67;:::i;:::-;13688:74;;13771:93;13860:3;13771:93;:::i;:::-;13889:2;13884:3;13880:12;13873:19;;13532:366;;;:::o;13904:419::-;14070:4;14108:2;14097:9;14093:18;14085:26;;14157:9;14151:4;14147:20;14143:1;14132:9;14128:17;14121:47;14185:131;14311:4;14185:131;:::i;:::-;14177:139;;13904:419;;;:::o;14329:180::-;14377:77;14374:1;14367:88;14474:4;14471:1;14464:15;14498:4;14495:1;14488:15;14515:233;14554:3;14577:24;14595:5;14577:24;:::i;:::-;14568:33;;14623:66;14616:5;14613:77;14610:103;;14693:18;;:::i;:::-;14610:103;14740:1;14733:5;14729:13;14722:20;;14515:233;;;:::o;14754:170::-;14894:22;14890:1;14882:6;14878:14;14871:46;14754:170;:::o;14930:366::-;15072:3;15093:67;15157:2;15152:3;15093:67;:::i;:::-;15086:74;;15169:93;15258:3;15169:93;:::i;:::-;15287:2;15282:3;15278:12;15271:19;;14930:366;;;:::o;15302:419::-;15468:4;15506:2;15495:9;15491:18;15483:26;;15555:9;15549:4;15545:20;15541:1;15530:9;15526:17;15519:47;15583:131;15709:4;15583:131;:::i;:::-;15575:139;;15302:419;;;:::o;15727:177::-;15867:29;15863:1;15855:6;15851:14;15844:53;15727:177;:::o;15910:366::-;16052:3;16073:67;16137:2;16132:3;16073:67;:::i;:::-;16066:74;;16149:93;16238:3;16149:93;:::i;:::-;16267:2;16262:3;16258:12;16251:19;;15910:366;;;:::o;16282:419::-;16448:4;16486:2;16475:9;16471:18;16463:26;;16535:9;16529:4;16525:20;16521:1;16510:9;16506:17;16499:47;16563:131;16689:4;16563:131;:::i;:::-;16555:139;;16282:419;;;:::o;16707:165::-;16847:17;16843:1;16835:6;16831:14;16824:41;16707:165;:::o;16878:366::-;17020:3;17041:67;17105:2;17100:3;17041:67;:::i;:::-;17034:74;;17117:93;17206:3;17117:93;:::i;:::-;17235:2;17230:3;17226:12;17219:19;;16878:366;;;:::o;17250:419::-;17416:4;17454:2;17443:9;17439:18;17431:26;;17503:9;17497:4;17493:20;17489:1;17478:9;17474:17;17467:47;17531:131;17657:4;17531:131;:::i;:::-;17523:139;;17250:419;;;:::o;17675:171::-;17815:23;17811:1;17803:6;17799:14;17792:47;17675:171;:::o;17852:366::-;17994:3;18015:67;18079:2;18074:3;18015:67;:::i;:::-;18008:74;;18091:93;18180:3;18091:93;:::i;:::-;18209:2;18204:3;18200:12;18193:19;;17852:366;;;:::o;18224:419::-;18390:4;18428:2;18417:9;18413:18;18405:26;;18477:9;18471:4;18467:20;18463:1;18452:9;18448:17;18441:47;18505:131;18631:4;18505:131;:::i;:::-;18497:139;;18224:419;;;:::o;18649:221::-;18789:34;18785:1;18777:6;18773:14;18766:58;18858:4;18853:2;18845:6;18841:15;18834:29;18649:221;:::o;18876:366::-;19018:3;19039:67;19103:2;19098:3;19039:67;:::i;:::-;19032:74;;19115:93;19204:3;19115:93;:::i;:::-;19233:2;19228:3;19224:12;19217:19;;18876:366;;;:::o;19248:419::-;19414:4;19452:2;19441:9;19437:18;19429:26;;19501:9;19495:4;19491:20;19487:1;19476:9;19472:17;19465:47;19529:131;19655:4;19529:131;:::i;:::-;19521:139;;19248:419;;;:::o;19673:223::-;19813:34;19809:1;19801:6;19797:14;19790:58;19882:6;19877:2;19869:6;19865:15;19858:31;19673:223;:::o;19902:366::-;20044:3;20065:67;20129:2;20124:3;20065:67;:::i;:::-;20058:74;;20141:93;20230:3;20141:93;:::i;:::-;20259:2;20254:3;20250:12;20243:19;;19902:366;;;:::o;20274:419::-;20440:4;20478:2;20467:9;20463:18;20455:26;;20527:9;20521:4;20517:20;20513:1;20502:9;20498:17;20491:47;20555:131;20681:4;20555:131;:::i;:::-;20547:139;;20274:419;;;:::o;20699:232::-;20839:34;20835:1;20827:6;20823:14;20816:58;20908:15;20903:2;20895:6;20891:15;20884:40;20699:232;:::o;20937:366::-;21079:3;21100:67;21164:2;21159:3;21100:67;:::i;:::-;21093:74;;21176:93;21265:3;21176:93;:::i;:::-;21294:2;21289:3;21285:12;21278:19;;20937:366;;;:::o;21309:419::-;21475:4;21513:2;21502:9;21498:18;21490:26;;21562:9;21556:4;21552:20;21548:1;21537:9;21533:17;21526:47;21590:131;21716:4;21590:131;:::i;:::-;21582:139;;21309:419;;;:::o;21734:442::-;21883:4;21921:2;21910:9;21906:18;21898:26;;21934:71;22002:1;21991:9;21987:17;21978:6;21934:71;:::i;:::-;22015:72;22083:2;22072:9;22068:18;22059:6;22015:72;:::i;:::-;22097;22165:2;22154:9;22150:18;22141:6;22097:72;:::i;:::-;21734:442;;;;;;:::o;22182:174::-;22322:26;22318:1;22310:6;22306:14;22299:50;22182:174;:::o;22362:366::-;22504:3;22525:67;22589:2;22584:3;22525:67;:::i;:::-;22518:74;;22601:93;22690:3;22601:93;:::i;:::-;22719:2;22714:3;22710:12;22703:19;;22362:366;;;:::o;22734:419::-;22900:4;22938:2;22927:9;22923:18;22915:26;;22987:9;22981:4;22977:20;22973:1;22962:9;22958:17;22951:47;23015:131;23141:4;23015:131;:::i;:::-;23007:139;;22734:419;;;:::o;23159:167::-;23299:19;23295:1;23287:6;23283:14;23276:43;23159:167;:::o;23332:366::-;23474:3;23495:67;23559:2;23554:3;23495:67;:::i;:::-;23488:74;;23571:93;23660:3;23571:93;:::i;:::-;23689:2;23684:3;23680:12;23673:19;;23332:366;;;:::o;23704:419::-;23870:4;23908:2;23897:9;23893:18;23885:26;;23957:9;23951:4;23947:20;23943:1;23932:9;23928:17;23921:47;23985:131;24111:4;23985:131;:::i;:::-;23977:139;;23704:419;;;:::o;24129:775::-;24362:4;24400:3;24389:9;24385:19;24377:27;;24414:71;24482:1;24471:9;24467:17;24458:6;24414:71;:::i;:::-;24495:72;24563:2;24552:9;24548:18;24539:6;24495:72;:::i;:::-;24577;24645:2;24634:9;24630:18;24621:6;24577:72;:::i;:::-;24659;24727:2;24716:9;24712:18;24703:6;24659:72;:::i;:::-;24741:73;24809:3;24798:9;24794:19;24785:6;24741:73;:::i;:::-;24824;24892:3;24881:9;24877:19;24868:6;24824:73;:::i;:::-;24129:775;;;;;;;;;:::o;24910:167::-;25050:19;25046:1;25038:6;25034:14;25027:43;24910:167;:::o;25083:366::-;25225:3;25246:67;25310:2;25305:3;25246:67;:::i;:::-;25239:74;;25322:93;25411:3;25322:93;:::i;:::-;25440:2;25435:3;25431:12;25424:19;;25083:366;;;:::o;25455:419::-;25621:4;25659:2;25648:9;25644:18;25636:26;;25708:9;25702:4;25698:20;25694:1;25683:9;25679:17;25672:47;25736:131;25862:4;25736:131;:::i;:::-;25728:139;;25455:419;;;:::o;25880:178::-;26020:30;26016:1;26008:6;26004:14;25997:54;25880:178;:::o;26064:366::-;26206:3;26227:67;26291:2;26286:3;26227:67;:::i;:::-;26220:74;;26303:93;26392:3;26303:93;:::i;:::-;26421:2;26416:3;26412:12;26405:19;;26064:366;;;:::o;26436:419::-;26602:4;26640:2;26629:9;26625:18;26617:26;;26689:9;26683:4;26679:20;26675:1;26664:9;26660:17;26653:47;26717:131;26843:4;26717:131;:::i;:::-;26709:139;;26436:419;;;:::o;26861:220::-;27001:34;26997:1;26989:6;26985:14;26978:58;27070:3;27065:2;27057:6;27053:15;27046:28;26861:220;:::o;27087:366::-;27229:3;27250:67;27314:2;27309:3;27250:67;:::i;:::-;27243:74;;27326:93;27415:3;27326:93;:::i;:::-;27444:2;27439:3;27435:12;27428:19;;27087:366;;;:::o;27459:419::-;27625:4;27663:2;27652:9;27648:18;27640:26;;27712:9;27706:4;27702:20;27698:1;27687:9;27683:17;27676:47;27740:131;27866:4;27740:131;:::i;:::-;27732:139;;27459:419;;;:::o;27884:180::-;28024:32;28020:1;28012:6;28008:14;28001:56;27884:180;:::o;28070:366::-;28212:3;28233:67;28297:2;28292:3;28233:67;:::i;:::-;28226:74;;28309:93;28398:3;28309:93;:::i;:::-;28427:2;28422:3;28418:12;28411:19;;28070:366;;;:::o;28442:419::-;28608:4;28646:2;28635:9;28631:18;28623:26;;28695:9;28689:4;28685:20;28681:1;28670:9;28666:17;28659:47;28723:131;28849:4;28723:131;:::i;:::-;28715:139;;28442:419;;;:::o;28867:179::-;29007:31;29003:1;28995:6;28991:14;28984:55;28867:179;:::o;29052:366::-;29194:3;29215:67;29279:2;29274:3;29215:67;:::i;:::-;29208:74;;29291:93;29380:3;29291:93;:::i;:::-;29409:2;29404:3;29400:12;29393:19;;29052:366;;;:::o;29424:419::-;29590:4;29628:2;29617:9;29613:18;29605:26;;29677:9;29671:4;29667:20;29663:1;29652:9;29648:17;29641:47;29705:131;29831:4;29705:131;:::i;:::-;29697:139;;29424:419;;;:::o;29849:410::-;29889:7;29912:20;29930:1;29912:20;:::i;:::-;29907:25;;29946:20;29964:1;29946:20;:::i;:::-;29941:25;;30001:1;29998;29994:9;30023:30;30041:11;30023:30;:::i;:::-;30012:41;;30202:1;30193:7;30189:15;30186:1;30183:22;30163:1;30156:9;30136:83;30113:139;;30232:18;;:::i;:::-;30113:139;29897:362;29849:410;;;;:::o;30265:180::-;30313:77;30310:1;30303:88;30410:4;30407:1;30400:15;30434:4;30431:1;30424:15;30451:185;30491:1;30508:20;30526:1;30508:20;:::i;:::-;30503:25;;30542:20;30560:1;30542:20;:::i;:::-;30537:25;;30581:1;30571:35;;30586:18;;:::i;:::-;30571:35;30628:1;30625;30621:9;30616:14;;30451:185;;;;:::o;30642:194::-;30682:4;30702:20;30720:1;30702:20;:::i;:::-;30697:25;;30736:20;30754:1;30736:20;:::i;:::-;30731:25;;30780:1;30777;30773:9;30765:17;;30804:1;30798:4;30795:11;30792:37;;;30809:18;;:::i;:::-;30792:37;30642:194;;;;:::o;30842:147::-;30943:11;30980:3;30965:18;;30842:147;;;;:::o;30995:114::-;;:::o;31115:398::-;31274:3;31295:83;31376:1;31371:3;31295:83;:::i;:::-;31288:90;;31387:93;31476:3;31387:93;:::i;:::-;31505:1;31500:3;31496:11;31489:18;;31115:398;;;:::o;31519:379::-;31703:3;31725:147;31868:3;31725:147;:::i;:::-;31718:154;;31889:3;31882:10;;31519:379;;;:::o;31904:182::-;32044:34;32040:1;32032:6;32028:14;32021:58;31904:182;:::o;32092:366::-;32234:3;32255:67;32319:2;32314:3;32255:67;:::i;:::-;32248:74;;32331:93;32420:3;32331:93;:::i;:::-;32449:2;32444:3;32440:12;32433:19;;32092:366;;;:::o;32464:419::-;32630:4;32668:2;32657:9;32653:18;32645:26;;32717:9;32711:4;32707:20;32703:1;32692:9;32688:17;32681:47;32745:131;32871:4;32745:131;:::i;:::-;32737:139;;32464:419;;;:::o;32889:221::-;33029:34;33025:1;33017:6;33013:14;33006:58;33098:4;33093:2;33085:6;33081:15;33074:29;32889:221;:::o;33116:366::-;33258:3;33279:67;33343:2;33338:3;33279:67;:::i;:::-;33272:74;;33355:93;33444:3;33355:93;:::i;:::-;33473:2;33468:3;33464:12;33457:19;;33116:366;;;:::o;33488:419::-;33654:4;33692:2;33681:9;33677:18;33669:26;;33741:9;33735:4;33731:20;33727:1;33716:9;33712:17;33705:47;33769:131;33895:4;33769:131;:::i;:::-;33761:139;;33488:419;;;:::o;33913:430::-;34056:4;34094:2;34083:9;34079:18;34071:26;;34107:71;34175:1;34164:9;34160:17;34151:6;34107:71;:::i;:::-;34188:72;34256:2;34245:9;34241:18;34232:6;34188:72;:::i;:::-;34270:66;34332:2;34321:9;34317:18;34308:6;34270:66;:::i;:::-;33913:430;;;;;;:::o;34349:168::-;34489:20;34485:1;34477:6;34473:14;34466:44;34349:168;:::o;34523:366::-;34665:3;34686:67;34750:2;34745:3;34686:67;:::i;:::-;34679:74;;34762:93;34851:3;34762:93;:::i;:::-;34880:2;34875:3;34871:12;34864:19;;34523:366;;;:::o;34895:419::-;35061:4;35099:2;35088:9;35084:18;35076:26;;35148:9;35142:4;35138:20;35134:1;35123:9;35119:17;35112:47;35176:131;35302:4;35176:131;:::i;:::-;35168:139;;34895:419;;;:::o;35320:180::-;35368:77;35365:1;35358:88;35465:4;35462:1;35455:15;35489:4;35486:1;35479:15;35506:320;35550:6;35587:1;35581:4;35577:12;35567:22;;35634:1;35628:4;35624:12;35655:18;35645:81;;35711:4;35703:6;35699:17;35689:27;;35645:81;35773:2;35765:6;35762:14;35742:18;35739:38;35736:84;;35792:18;;:::i;:::-;35736:84;35557:269;35506:320;;;:::o;35832:180::-;35880:77;35877:1;35870:88;35977:4;35974:1;35967:15;36001:4;35998:1;35991:15;36018:222;36111:4;36149:2;36138:9;36134:18;36126:26;;36162:71;36230:1;36219:9;36215:17;36206:6;36162:71;:::i;:::-;36018:222;;;;:::o;36246:664::-;36451:4;36489:3;36478:9;36474:19;36466:27;;36503:71;36571:1;36560:9;36556:17;36547:6;36503:71;:::i;:::-;36584:72;36652:2;36641:9;36637:18;36628:6;36584:72;:::i;:::-;36666;36734:2;36723:9;36719:18;36710:6;36666:72;:::i;:::-;36748;36816:2;36805:9;36801:18;36792:6;36748:72;:::i;:::-;36830:73;36898:3;36887:9;36883:19;36874:6;36830:73;:::i;:::-;36246:664;;;;;;;;:::o;36916:86::-;36951:7;36991:4;36984:5;36980:16;36969:27;;36916:86;;;:::o;37008:112::-;37091:22;37107:5;37091:22;:::i;:::-;37086:3;37079:35;37008:112;;:::o;37126:545::-;37299:4;37337:3;37326:9;37322:19;37314:27;;37351:71;37419:1;37408:9;37404:17;37395:6;37351:71;:::i;:::-;37432:68;37496:2;37485:9;37481:18;37472:6;37432:68;:::i;:::-;37510:72;37578:2;37567:9;37563:18;37554:6;37510:72;:::i;:::-;37592;37660:2;37649:9;37645:18;37636:6;37592:72;:::i;:::-;37126:545;;;;;;;:::o"},"methodIdentifiers":{"MAX_FEE_PERCENTAGE()":"558e44d3","MAX_PAYMENT()":"b1c1008c","MIN_PAYMENT()":"eb566e91","craftiaxAddress()":"811ab42a","craftiaxFeePercentage()":"3b7810f2","eip712Domain()":"84b0196e","generalMaxPayment()":"bc979e0c","generalMinPayment()":"5abd7cce","invalidateNonce(address)":"53a78064","isVerifiedArtist(address)":"657affbf","nonces(address)":"7ecebe00","owner()":"8da5cb5b","payArtist(address,uint256,bytes)":"f8231848","renounceOwnership()":"715018a6","setVerificationStatus(address,bool)":"fb14a834","setVerificationStatusBatch(address[],bool)":"511e2fbf","transferOwnership(address)":"f2fde38b","updateCraftiaxAddress(address)":"790e8739","updateFeePercentage(uint256)":"6cad3fb0","updatePaymentLimits(uint256,uint256,uint256)":"82948fe1","updateVerifier(address)":"97fc007c","verifiedMaxPayment()":"4e75baaf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"name\":\"ArtistVerificationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CraftiaxAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"NonceInvalidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"generalMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"generalMax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"verifiedMax\",\"type\":\"uint256\"}],\"name\":\"PaymentLimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"artistAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"craftiaxFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"name\":\"PaymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVerifier\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"VerifierUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PAYMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PAYMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"craftiaxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"craftiaxFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generalMaxPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generalMinPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"invalidateNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifiedArtist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"payArtist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setVerificationStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"artists\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setVerificationStatusBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCraftiaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGeneralMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGeneralMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newVerifiedMax\",\"type\":\"uint256\"}],\"name\":\"updatePaymentLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"updateVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifiedMaxPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ArtistPayment.sol\":\"ArtistPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ArtistPayment.sol\":{\"keccak256\":\"0x8e1bdd311483618933f59528bf6efcefb6c80aa5326501ba85ee1dd6a5a7833d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218644f2e52e60166f67455a3fe017b20ccff0639c97dcb21c5f689fe360b4bb\",\"dweb:/ipfs/QmPYLC8wnT41KdQVMbpJbdUDPnzb5MevZcJ5p9E9Cppaz8\"]}},\"version\":1}"}},"contracts/EventTicketContract.sol":{"EventTicketContract":{"abi":[{"inputs":[{"internalType":"address","name":"_usdToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"MAX_MINTS_PER_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_TIME_BETWEEN_MINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RATE_LIMIT_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2665":{"entryPoint":null,"id":2665,"parameterSlots":0,"returnSlots":0},"@_2770":{"entryPoint":null,"id":2770,"parameterSlots":0,"returnSlots":0},"@_370":{"entryPoint":null,"id":370,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8466":{"entryPoint":null,"id":8466,"parameterSlots":1,"returnSlots":0},"@_initializeRateLimits_8482":{"entryPoint":595,"id":8482,"parameterSlots":0,"returnSlots":0},"@_setURI_987":{"entryPoint":376,"id":987,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":397,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":778,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":795,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":982,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":824,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1303,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":659,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1264,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1458,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1428,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1128,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1396,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":882,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1178,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":622,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1019,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1383,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1032,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1188,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":679,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1231,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6778:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"759:80:31","statements":[{"nodeType":"YulAssignment","src":"769:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:31"},"nodeType":"YulFunctionCall","src":"778:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:31"},"nodeType":"YulFunctionCall","src":"800:33:31"},"nodeType":"YulExpressionStatement","src":"800:33:31"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:31","type":""}],"src":"696:143:31"},{"body":{"nodeType":"YulBlock","src":"922:274:31","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:31"},"nodeType":"YulFunctionCall","src":"970:79:31"},"nodeType":"YulExpressionStatement","src":"970:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:31"},"nodeType":"YulFunctionCall","src":"939:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:31"},"nodeType":"YulFunctionCall","src":"935:32:31"},"nodeType":"YulIf","src":"932:119:31"},{"nodeType":"YulBlock","src":"1061:128:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:31"},"nodeType":"YulFunctionCall","src":"1147:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:31"},"nodeType":"YulFunctionCall","src":"1115:64:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:31"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:31","type":""}],"src":"845:351:31"},{"body":{"nodeType":"YulBlock","src":"1267:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:31"},"nodeType":"YulFunctionCall","src":"1289:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:31"},"nodeType":"YulFunctionCall","src":"1277:37:31"},"nodeType":"YulExpressionStatement","src":"1277:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:31","type":""}],"src":"1202:118:31"},{"body":{"nodeType":"YulBlock","src":"1424:124:31","statements":[{"nodeType":"YulAssignment","src":"1434:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:31"},"nodeType":"YulFunctionCall","src":"1442:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:31"},"nodeType":"YulFunctionCall","src":"1523:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:31"},"nodeType":"YulFunctionCall","src":"1470:71:31"},"nodeType":"YulExpressionStatement","src":"1470:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:31","type":""}],"src":"1326:222:31"},{"body":{"nodeType":"YulBlock","src":"1613:40:31","statements":[{"nodeType":"YulAssignment","src":"1624:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1640:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1634:5:31"},"nodeType":"YulFunctionCall","src":"1634:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1624:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1596:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1606:6:31","type":""}],"src":"1554:99:31"},{"body":{"nodeType":"YulBlock","src":"1687:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1704:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1707:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1697:6:31"},"nodeType":"YulFunctionCall","src":"1697:88:31"},"nodeType":"YulExpressionStatement","src":"1697:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1804:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1794:6:31"},"nodeType":"YulFunctionCall","src":"1794:15:31"},"nodeType":"YulExpressionStatement","src":"1794:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1825:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1818:6:31"},"nodeType":"YulFunctionCall","src":"1818:15:31"},"nodeType":"YulExpressionStatement","src":"1818:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1659:180:31"},{"body":{"nodeType":"YulBlock","src":"1873:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1890:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1893:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:31"},"nodeType":"YulFunctionCall","src":"1883:88:31"},"nodeType":"YulExpressionStatement","src":"1883:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1987:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1990:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:31"},"nodeType":"YulFunctionCall","src":"1980:15:31"},"nodeType":"YulExpressionStatement","src":"1980:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2011:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2014:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2004:6:31"},"nodeType":"YulFunctionCall","src":"2004:15:31"},"nodeType":"YulExpressionStatement","src":"2004:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1845:180:31"},{"body":{"nodeType":"YulBlock","src":"2082:269:31","statements":[{"nodeType":"YulAssignment","src":"2092:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2106:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2112:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2102:3:31"},"nodeType":"YulFunctionCall","src":"2102:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2092:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"2123:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2153:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2149:3:31"},"nodeType":"YulFunctionCall","src":"2149:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2127:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2200:51:31","statements":[{"nodeType":"YulAssignment","src":"2214:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2228:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2224:3:31"},"nodeType":"YulFunctionCall","src":"2224:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2214:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2180:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2173:6:31"},"nodeType":"YulFunctionCall","src":"2173:26:31"},"nodeType":"YulIf","src":"2170:81:31"},{"body":{"nodeType":"YulBlock","src":"2303:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2317:16:31"},"nodeType":"YulFunctionCall","src":"2317:18:31"},"nodeType":"YulExpressionStatement","src":"2317:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2267:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2290:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2287:2:31"},"nodeType":"YulFunctionCall","src":"2287:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2264:2:31"},"nodeType":"YulFunctionCall","src":"2264:38:31"},"nodeType":"YulIf","src":"2261:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2066:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2075:6:31","type":""}],"src":"2031:320:31"},{"body":{"nodeType":"YulBlock","src":"2411:87:31","statements":[{"nodeType":"YulAssignment","src":"2421:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2429:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2421:4:31"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:31","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2452:3:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2442:6:31"},"nodeType":"YulFunctionCall","src":"2442:14:31"},"nodeType":"YulExpressionStatement","src":"2442:14:31"},{"nodeType":"YulAssignment","src":"2465:26:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2483:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2486:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2473:9:31"},"nodeType":"YulFunctionCall","src":"2473:18:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2465:4:31"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2398:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2406:4:31","type":""}],"src":"2357:141:31"},{"body":{"nodeType":"YulBlock","src":"2548:49:31","statements":[{"nodeType":"YulAssignment","src":"2558:33:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2576:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:31"},"nodeType":"YulFunctionCall","src":"2572:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:31","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2568:3:31"},"nodeType":"YulFunctionCall","src":"2568:23:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2558:6:31"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2531:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2541:6:31","type":""}],"src":"2504:93:31"},{"body":{"nodeType":"YulBlock","src":"2656:54:31","statements":[{"nodeType":"YulAssignment","src":"2666:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2691:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"2697:5:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2687:3:31"},"nodeType":"YulFunctionCall","src":"2687:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2666:8:31"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2631:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"2637:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2647:8:31","type":""}],"src":"2603:107:31"},{"body":{"nodeType":"YulBlock","src":"2792:317:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2802:35:31","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2823:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"2835:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2819:3:31"},"nodeType":"YulFunctionCall","src":"2819:18:31"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2806:9:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2846:109:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2877:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2888:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2858:18:31"},"nodeType":"YulFunctionCall","src":"2858:97:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2850:4:31","type":""}]},{"nodeType":"YulAssignment","src":"2964:51:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2995:9:31"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3006:8:31"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2976:18:31"},"nodeType":"YulFunctionCall","src":"2976:39:31"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2964:8:31"}]},{"nodeType":"YulAssignment","src":"3024:30:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3037:5:31"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3048:4:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3044:3:31"},"nodeType":"YulFunctionCall","src":"3044:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3033:3:31"},"nodeType":"YulFunctionCall","src":"3033:21:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3024:5:31"}]},{"nodeType":"YulAssignment","src":"3063:40:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:31"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3087:8:31"},{"name":"mask","nodeType":"YulIdentifier","src":"3097:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3083:3:31"},"nodeType":"YulFunctionCall","src":"3083:19:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3073:2:31"},"nodeType":"YulFunctionCall","src":"3073:30:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3063:6:31"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2753:5:31","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2760:10:31","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2772:8:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2785:6:31","type":""}],"src":"2716:393:31"},{"body":{"nodeType":"YulBlock","src":"3160:32:31","statements":[{"nodeType":"YulAssignment","src":"3170:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3181:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3170:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3142:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3152:7:31","type":""}],"src":"3115:77:31"},{"body":{"nodeType":"YulBlock","src":"3230:28:31","statements":[{"nodeType":"YulAssignment","src":"3240:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3247:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3240:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3216:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3226:3:31","type":""}],"src":"3198:60:31"},{"body":{"nodeType":"YulBlock","src":"3324:82:31","statements":[{"nodeType":"YulAssignment","src":"3334:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3392:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3374:17:31"},"nodeType":"YulFunctionCall","src":"3374:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3365:8:31"},"nodeType":"YulFunctionCall","src":"3365:34:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3347:17:31"},"nodeType":"YulFunctionCall","src":"3347:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3334:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3304:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3314:9:31","type":""}],"src":"3264:142:31"},{"body":{"nodeType":"YulBlock","src":"3459:28:31","statements":[{"nodeType":"YulAssignment","src":"3469:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3476:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3469:3:31"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3445:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3455:3:31","type":""}],"src":"3412:75:31"},{"body":{"nodeType":"YulBlock","src":"3569:193:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3579:63:31","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3634:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3603:30:31"},"nodeType":"YulFunctionCall","src":"3603:39:31"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3583:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3658:4:31"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3698:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3692:5:31"},"nodeType":"YulFunctionCall","src":"3692:11:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3705:6:31"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3737:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3713:23:31"},"nodeType":"YulFunctionCall","src":"3713:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3664:27:31"},"nodeType":"YulFunctionCall","src":"3664:91:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3651:6:31"},"nodeType":"YulFunctionCall","src":"3651:105:31"},"nodeType":"YulExpressionStatement","src":"3651:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3546:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3552:6:31","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3560:7:31","type":""}],"src":"3493:269:31"},{"body":{"nodeType":"YulBlock","src":"3817:24:31","statements":[{"nodeType":"YulAssignment","src":"3827:8:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3834:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3827:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3813:3:31","type":""}],"src":"3768:73:31"},{"body":{"nodeType":"YulBlock","src":"3900:136:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3910:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3924:30:31"},"nodeType":"YulFunctionCall","src":"3924:32:31"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3914:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4009:4:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4015:6:31"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4023:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3965:43:31"},"nodeType":"YulFunctionCall","src":"3965:65:31"},"nodeType":"YulExpressionStatement","src":"3965:65:31"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3886:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3892:6:31","type":""}],"src":"3847:189:31"},{"body":{"nodeType":"YulBlock","src":"4092:136:31","statements":[{"body":{"nodeType":"YulBlock","src":"4159:63:31","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4203:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4210:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4173:29:31"},"nodeType":"YulFunctionCall","src":"4173:39:31"},"nodeType":"YulExpressionStatement","src":"4173:39:31"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4112:5:31"},{"name":"end","nodeType":"YulIdentifier","src":"4119:3:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4109:2:31"},"nodeType":"YulFunctionCall","src":"4109:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4124:26:31","statements":[{"nodeType":"YulAssignment","src":"4126:22:31","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4139:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4135:3:31"},"nodeType":"YulFunctionCall","src":"4135:13:31"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4126:5:31"}]}]},"pre":{"nodeType":"YulBlock","src":"4106:2:31","statements":[]},"src":"4102:120:31"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4080:5:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4087:3:31","type":""}],"src":"4042:186:31"},{"body":{"nodeType":"YulBlock","src":"4313:464:31","statements":[{"body":{"nodeType":"YulBlock","src":"4339:431:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4353:54:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4401:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4369:31:31"},"nodeType":"YulFunctionCall","src":"4369:38:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4357:8:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4420:63:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4443:8:31"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4471:10:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4453:17:31"},"nodeType":"YulFunctionCall","src":"4453:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:31"},"nodeType":"YulFunctionCall","src":"4439:44:31"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4424:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4640:27:31","statements":[{"nodeType":"YulAssignment","src":"4642:23:31","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4657:8:31"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4642:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4624:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"4636:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4621:2:31"},"nodeType":"YulFunctionCall","src":"4621:18:31"},"nodeType":"YulIf","src":"4618:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4709:11:31"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4726:8:31"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4754:3:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4736:17:31"},"nodeType":"YulFunctionCall","src":"4736:22:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:31"},"nodeType":"YulFunctionCall","src":"4722:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4680:28:31"},"nodeType":"YulFunctionCall","src":"4680:80:31"},"nodeType":"YulExpressionStatement","src":"4680:80:31"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4330:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"4335:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4327:2:31"},"nodeType":"YulFunctionCall","src":"4327:11:31"},"nodeType":"YulIf","src":"4324:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4289:5:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"4296:3:31","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4301:10:31","type":""}],"src":"4234:543:31"},{"body":{"nodeType":"YulBlock","src":"4846:54:31","statements":[{"nodeType":"YulAssignment","src":"4856:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4881:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"4887:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4877:3:31"},"nodeType":"YulFunctionCall","src":"4877:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4856:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4821:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"4827:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4837:8:31","type":""}],"src":"4783:117:31"},{"body":{"nodeType":"YulBlock","src":"4957:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4967:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5016:1:31","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5019:5:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5012:3:31"},"nodeType":"YulFunctionCall","src":"5012:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5031:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5027:3:31"},"nodeType":"YulFunctionCall","src":"5027:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4983:28:31"},"nodeType":"YulFunctionCall","src":"4983:51:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4979:3:31"},"nodeType":"YulFunctionCall","src":"4979:56:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4971:4:31","type":""}]},{"nodeType":"YulAssignment","src":"5044:25:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5058:4:31"},{"name":"mask","nodeType":"YulIdentifier","src":"5064:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5054:3:31"},"nodeType":"YulFunctionCall","src":"5054:15:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5044:6:31"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4934:4:31","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4940:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4950:6:31","type":""}],"src":"4906:169:31"},{"body":{"nodeType":"YulBlock","src":"5161:214:31","statements":[{"nodeType":"YulAssignment","src":"5294:37:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5321:4:31"},{"name":"len","nodeType":"YulIdentifier","src":"5327:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5302:18:31"},"nodeType":"YulFunctionCall","src":"5302:29:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5294:4:31"}]},{"nodeType":"YulAssignment","src":"5340:29:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5351:4:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5361:1:31","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5364:3:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5357:3:31"},"nodeType":"YulFunctionCall","src":"5357:11:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5348:2:31"},"nodeType":"YulFunctionCall","src":"5348:21:31"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5340:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5142:4:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"5148:3:31","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5156:4:31","type":""}],"src":"5080:295:31"},{"body":{"nodeType":"YulBlock","src":"5472:1303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5483:51:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5530:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5497:32:31"},"nodeType":"YulFunctionCall","src":"5497:37:31"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5487:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5619:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5621:16:31"},"nodeType":"YulFunctionCall","src":"5621:18:31"},"nodeType":"YulExpressionStatement","src":"5621:18:31"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5591:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5599:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5588:2:31"},"nodeType":"YulFunctionCall","src":"5588:30:31"},"nodeType":"YulIf","src":"5585:56:31"},{"nodeType":"YulVariableDeclaration","src":"5651:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5697:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5691:5:31"},"nodeType":"YulFunctionCall","src":"5691:11:31"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5665:25:31"},"nodeType":"YulFunctionCall","src":"5665:38:31"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5655:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5796:4:31"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5802:6:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"5810:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5750:45:31"},"nodeType":"YulFunctionCall","src":"5750:67:31"},"nodeType":"YulExpressionStatement","src":"5750:67:31"},{"nodeType":"YulVariableDeclaration","src":"5827:18:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5831:9:31","type":""}]},{"nodeType":"YulAssignment","src":"5855:17:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5868:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5855:9:31"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5919:611:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5933:37:31","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5952:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5964:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5960:3:31"},"nodeType":"YulFunctionCall","src":"5960:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5948:3:31"},"nodeType":"YulFunctionCall","src":"5948:22:31"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5937:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5984:51:31","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6030:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5998:31:31"},"nodeType":"YulFunctionCall","src":"5998:37:31"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5988:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6048:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6057:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6052:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6116:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6141:6:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6159:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6164:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:31"},"nodeType":"YulFunctionCall","src":"6155:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6149:5:31"},"nodeType":"YulFunctionCall","src":"6149:26:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6134:6:31"},"nodeType":"YulFunctionCall","src":"6134:42:31"},"nodeType":"YulExpressionStatement","src":"6134:42:31"},{"nodeType":"YulAssignment","src":"6193:24:31","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6207:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6215:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:31"},"nodeType":"YulFunctionCall","src":"6203:14:31"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6193:6:31"}]},{"nodeType":"YulAssignment","src":"6234:31:31","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6251:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6247:3:31"},"nodeType":"YulFunctionCall","src":"6247:18:31"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6234:9:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6082:1:31"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6085:7:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6079:2:31"},"nodeType":"YulFunctionCall","src":"6079:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6094:21:31","statements":[{"nodeType":"YulAssignment","src":"6096:17:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6105:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"6108:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:31"},"nodeType":"YulFunctionCall","src":"6101:12:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6096:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6075:3:31","statements":[]},"src":"6071:208:31"},{"body":{"nodeType":"YulBlock","src":"6315:156:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6333:43:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6360:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6365:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:31"},"nodeType":"YulFunctionCall","src":"6356:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6350:5:31"},"nodeType":"YulFunctionCall","src":"6350:26:31"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6337:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6400:6:31"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6427:9:31"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6442:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6450:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6438:3:31"},"nodeType":"YulFunctionCall","src":"6438:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6408:18:31"},"nodeType":"YulFunctionCall","src":"6408:48:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6393:6:31"},"nodeType":"YulFunctionCall","src":"6393:64:31"},"nodeType":"YulExpressionStatement","src":"6393:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6298:7:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6307:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6295:2:31"},"nodeType":"YulFunctionCall","src":"6295:19:31"},"nodeType":"YulIf","src":"6292:179:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6491:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6505:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6513:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6501:3:31"},"nodeType":"YulFunctionCall","src":"6501:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"6517:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:31"},"nodeType":"YulFunctionCall","src":"6497:22:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6484:6:31"},"nodeType":"YulFunctionCall","src":"6484:36:31"},"nodeType":"YulExpressionStatement","src":"6484:36:31"}]},"nodeType":"YulCase","src":"5912:618:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5917:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6547:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6561:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6574:1:31","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6565:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6598:67:31","statements":[{"nodeType":"YulAssignment","src":"6616:35:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6635:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6640:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6631:3:31"},"nodeType":"YulFunctionCall","src":"6631:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6625:5:31"},"nodeType":"YulFunctionCall","src":"6625:26:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6616:5:31"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6591:6:31"},"nodeType":"YulIf","src":"6588:77:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6685:4:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6744:5:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6751:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6691:52:31"},"nodeType":"YulFunctionCall","src":"6691:67:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6678:6:31"},"nodeType":"YulFunctionCall","src":"6678:81:31"},"nodeType":"YulExpressionStatement","src":"6678:81:31"}]},"nodeType":"YulCase","src":"6539:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5892:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5900:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5889:2:31"},"nodeType":"YulFunctionCall","src":"5889:14:31"},"nodeType":"YulSwitch","src":"5882:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5461:4:31","type":""},{"name":"src","nodeType":"YulTypedName","src":"5467:3:31","type":""}],"src":"5380:1395:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101006040523480156200001257600080fd5b5060405162002a6638038062002a668339818101604052810190620000389190620002d8565b33604051806020016040528060008152506200005a816200017860201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c791906200031b565b60405180910390fd5b620000e1816200018d60201b60201c565b5060016004819055506000600560006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600a60a08181525050655af3107a400060c0818152505068056bc75e2d6310000060e08181525050620001716200025360201b60201c565b5062000699565b8060029081620001899190620005b2565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e10600681905550600a600781905550603c600881905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a08262000273565b9050919050565b620002b28162000293565b8114620002be57600080fd5b50565b600081519050620002d281620002a7565b92915050565b600060208284031215620002f157620002f06200026e565b5b60006200030184828501620002c1565b91505092915050565b620003158162000293565b82525050565b60006020820190506200033260008301846200030a565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003ba57607f821691505b602082108103620003d057620003cf62000372565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200043a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003fb565b620004468683620003fb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004936200048d62000487846200045e565b62000468565b6200045e565b9050919050565b6000819050919050565b620004af8362000472565b620004c7620004be826200049a565b84845462000408565b825550505050565b600090565b620004de620004cf565b620004eb818484620004a4565b505050565b5b81811015620005135762000507600082620004d4565b600181019050620004f1565b5050565b601f82111562000562576200052c81620003d6565b6200053784620003eb565b8101602085101562000547578190505b6200055f6200055685620003eb565b830182620004f0565b50505b505050565b600082821c905092915050565b6000620005876000198460080262000567565b1980831691505092915050565b6000620005a2838362000574565b9150826002028217905092915050565b620005bd8262000338565b67ffffffffffffffff811115620005d957620005d862000343565b5b620005e58254620003a1565b620005f282828562000517565b600060209050601f8311600181146200062a576000841562000615578287015190505b62000621858262000594565b86555062000691565b601f1984166200063a86620003d6565b60005b8281101562000664578489015182556001820191506020850194506020810190506200063d565b8683101562000684578489015162000680601f89168262000574565b8355505b6001600288020188555050505b505050505050565b60805160a05160c05160e05161239c620006ca60003960005050600050506000505060006108ea015261239c6000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063e985e9c511610066578063e985e9c51461029c578063f242432a146102cc578063f2fde38b146102e8578063f897a22b14610304576100ff565b80638da5cb5b146102265780639970ea8014610244578063a22cb46514610262578063e39eb1091461027e576100ff565b80634e1273f4116100d35780634e1273f4146101b05780635c975abb146101e05780637130dfc9146101fe578063715018a61461021c576100ff565b8062fdd58e1461010457806301ffc9a7146101345780630e89341c146101645780632eb2c2d614610194575b600080fd5b61011e60048036038101906101199190611706565b610322565b60405161012b9190611755565b60405180910390f35b61014e600480360381019061014991906117c8565b61037c565b60405161015b9190611810565b60405180910390f35b61017e6004803603810190610179919061182b565b61045e565b60405161018b91906118e8565b60405180910390f35b6101ae60048036038101906101a99190611b07565b6104f2565b005b6101ca60048036038101906101c59190611c99565b61059a565b6040516101d79190611dcf565b60405180910390f35b6101e86106a9565b6040516101f59190611810565b60405180910390f35b6102066106c0565b6040516102139190611755565b60405180910390f35b6102246106c6565b005b61022e6106da565b60405161023b9190611e00565b60405180910390f35b61024c610704565b6040516102599190611755565b60405180910390f35b61027c60048036038101906102779190611e47565b61070a565b005b610286610720565b6040516102939190611755565b60405180910390f35b6102b660048036038101906102b19190611e87565b610726565b6040516102c39190611810565b60405180910390f35b6102e660048036038101906102e19190611ec7565b6107ba565b005b61030260048036038101906102fd9190611f5e565b610862565b005b61030c6108e8565b6040516103199190611fea565b60405180910390f35b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045757506104568261090c565b5b9050919050565b60606002805461046d90612034565b80601f016020809104026020016040519081016040528092919081815260200182805461049990612034565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b50505050509050919050565b60006104fc610976565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610541575061053f8682610726565b155b156105855780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161057c929190612065565b60405180910390fd5b610592868686868661097e565b505050505050565b606081518351146105e657815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105dd92919061208e565b60405180910390fd5b6000835167ffffffffffffffff8111156106035761060261190f565b5b6040519080825280602002602001820160405280156106315781602001602082028036833780820191505090505b50905060005b845181101561069e5761066e6106568287610a7690919063ffffffff16565b6106698387610a8a90919063ffffffff16565b610322565b828281518110610681576106806120b7565b5b6020026020010181815250508061069790612115565b9050610637565b508091505092915050565b6000600560009054906101000a900460ff16905090565b60065481565b6106ce610a9e565b6106d86000610b25565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b61071c610715610976565b8383610beb565b5050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006107c4610976565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561080957506108078682610726565b155b1561084d5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610844929190612065565b60405180910390fd5b61085a8686868686610d5b565b505050505050565b61086a610a9e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108dc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d39190611e00565b60405180910390fd5b6108e581610b25565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f05760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e79190611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a625760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a599190611e00565b60405180910390fd5b610a6f8585858585610e66565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b610aa6610976565b73ffffffffffffffffffffffffffffffffffffffff16610ac46106da565b73ffffffffffffffffffffffffffffffffffffffff1614610b2357610ae7610976565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1a9190611e00565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5d5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c549190611e00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d4e9190611810565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcd5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dc49190611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e3f5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e369190611e00565b60405180910390fd5b600080610e4c8585610f18565b91509150610e5d8787848487610e66565b50505050505050565b610e7285858585610f48565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610f11576000610eb0610976565b90506001845103610f00576000610ed1600086610a8a90919063ffffffff16565b90506000610ee9600086610a8a90919063ffffffff16565b9050610ef98389898585896112f6565b5050610f0f565b610f0e8187878787876114aa565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610f9257815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610f8992919061208e565b60405180910390fd5b6000610f9c610976565b905060005b83518110156111b1576000610fbf8286610a8a90919063ffffffff16565b90506000610fd68386610a8a90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461110357600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110ab57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016110a2949392919061215d565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461119e578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461119691906121a2565b925050819055505b5050806111aa90612115565b9050610fa1565b5060018351036112705760006111d1600085610a8a90919063ffffffff16565b905060006111e9600085610a8a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161126192919061208e565b60405180910390a450506112ef565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516112e69291906121d6565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156114a2578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611357959493929190612262565b6020604051808303816000875af192505050801561139357506040513d601f19601f8201168201806040525081019061139091906122d1565b60015b611417573d80600081146113c3576040519150601f19603f3d011682016040523d82523d6000602084013e6113c8565b606091505b50600081510361140f57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114069190611e00565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114a057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114979190611e00565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611656578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161150b9594939291906122fe565b6020604051808303816000875af192505050801561154757506040513d601f19601f8201168201806040525081019061154491906122d1565b60015b6115cb573d8060008114611577576040519150601f19603f3d011682016040523d82523d6000602084013e61157c565b606091505b5060008151036115c357846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115ba9190611e00565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461165457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164b9190611e00565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061169d82611672565b9050919050565b6116ad81611692565b81146116b857600080fd5b50565b6000813590506116ca816116a4565b92915050565b6000819050919050565b6116e3816116d0565b81146116ee57600080fd5b50565b600081359050611700816116da565b92915050565b6000806040838503121561171d5761171c611668565b5b600061172b858286016116bb565b925050602061173c858286016116f1565b9150509250929050565b61174f816116d0565b82525050565b600060208201905061176a6000830184611746565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117a581611770565b81146117b057600080fd5b50565b6000813590506117c28161179c565b92915050565b6000602082840312156117de576117dd611668565b5b60006117ec848285016117b3565b91505092915050565b60008115159050919050565b61180a816117f5565b82525050565b60006020820190506118256000830184611801565b92915050565b60006020828403121561184157611840611668565b5b600061184f848285016116f1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611892578082015181840152602081019050611877565b60008484015250505050565b6000601f19601f8301169050919050565b60006118ba82611858565b6118c48185611863565b93506118d4818560208601611874565b6118dd8161189e565b840191505092915050565b6000602082019050818103600083015261190281846118af565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119478261189e565b810181811067ffffffffffffffff821117156119665761196561190f565b5b80604052505050565b600061197961165e565b9050611985828261193e565b919050565b600067ffffffffffffffff8211156119a5576119a461190f565b5b602082029050602081019050919050565b600080fd5b60006119ce6119c98461198a565b61196f565b905080838252602082019050602084028301858111156119f1576119f06119b6565b5b835b81811015611a1a5780611a0688826116f1565b8452602084019350506020810190506119f3565b5050509392505050565b600082601f830112611a3957611a3861190a565b5b8135611a498482602086016119bb565b91505092915050565b600080fd5b600067ffffffffffffffff821115611a7257611a7161190f565b5b611a7b8261189e565b9050602081019050919050565b82818337600083830152505050565b6000611aaa611aa584611a57565b61196f565b905082815260208101848484011115611ac657611ac5611a52565b5b611ad1848285611a88565b509392505050565b600082601f830112611aee57611aed61190a565b5b8135611afe848260208601611a97565b91505092915050565b600080600080600060a08688031215611b2357611b22611668565b5b6000611b31888289016116bb565b9550506020611b42888289016116bb565b945050604086013567ffffffffffffffff811115611b6357611b6261166d565b5b611b6f88828901611a24565b935050606086013567ffffffffffffffff811115611b9057611b8f61166d565b5b611b9c88828901611a24565b925050608086013567ffffffffffffffff811115611bbd57611bbc61166d565b5b611bc988828901611ad9565b9150509295509295909350565b600067ffffffffffffffff821115611bf157611bf061190f565b5b602082029050602081019050919050565b6000611c15611c1084611bd6565b61196f565b90508083825260208201905060208402830185811115611c3857611c376119b6565b5b835b81811015611c615780611c4d88826116bb565b845260208401935050602081019050611c3a565b5050509392505050565b600082601f830112611c8057611c7f61190a565b5b8135611c90848260208601611c02565b91505092915050565b60008060408385031215611cb057611caf611668565b5b600083013567ffffffffffffffff811115611cce57611ccd61166d565b5b611cda85828601611c6b565b925050602083013567ffffffffffffffff811115611cfb57611cfa61166d565b5b611d0785828601611a24565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611d46816116d0565b82525050565b6000611d588383611d3d565b60208301905092915050565b6000602082019050919050565b6000611d7c82611d11565b611d868185611d1c565b9350611d9183611d2d565b8060005b83811015611dc2578151611da98882611d4c565b9750611db483611d64565b925050600181019050611d95565b5085935050505092915050565b60006020820190508181036000830152611de98184611d71565b905092915050565b611dfa81611692565b82525050565b6000602082019050611e156000830184611df1565b92915050565b611e24816117f5565b8114611e2f57600080fd5b50565b600081359050611e4181611e1b565b92915050565b60008060408385031215611e5e57611e5d611668565b5b6000611e6c858286016116bb565b9250506020611e7d85828601611e32565b9150509250929050565b60008060408385031215611e9e57611e9d611668565b5b6000611eac858286016116bb565b9250506020611ebd858286016116bb565b9150509250929050565b600080600080600060a08688031215611ee357611ee2611668565b5b6000611ef1888289016116bb565b9550506020611f02888289016116bb565b9450506040611f13888289016116f1565b9350506060611f24888289016116f1565b925050608086013567ffffffffffffffff811115611f4557611f4461166d565b5b611f5188828901611ad9565b9150509295509295909350565b600060208284031215611f7457611f73611668565b5b6000611f82848285016116bb565b91505092915050565b6000819050919050565b6000611fb0611fab611fa684611672565b611f8b565b611672565b9050919050565b6000611fc282611f95565b9050919050565b6000611fd482611fb7565b9050919050565b611fe481611fc9565b82525050565b6000602082019050611fff6000830184611fdb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061204c57607f821691505b60208210810361205f5761205e612005565b5b50919050565b600060408201905061207a6000830185611df1565b6120876020830184611df1565b9392505050565b60006040820190506120a36000830185611746565b6120b06020830184611746565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612120826116d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612152576121516120e6565b5b600182019050919050565b60006080820190506121726000830187611df1565b61217f6020830186611746565b61218c6040830185611746565b6121996060830184611746565b95945050505050565b60006121ad826116d0565b91506121b8836116d0565b92508282019050808211156121d0576121cf6120e6565b5b92915050565b600060408201905081810360008301526121f08185611d71565b905081810360208301526122048184611d71565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006122348261220d565b61223e8185612218565b935061224e818560208601611874565b6122578161189e565b840191505092915050565b600060a0820190506122776000830188611df1565b6122846020830187611df1565b6122916040830186611746565b61229e6060830185611746565b81810360808301526122b08184612229565b90509695505050505050565b6000815190506122cb8161179c565b92915050565b6000602082840312156122e7576122e6611668565b5b60006122f5848285016122bc565b91505092915050565b600060a0820190506123136000830188611df1565b6123206020830187611df1565b81810360408301526123328186611d71565b905081810360608301526123468185611d71565b9050818103608083015261235a8184612229565b9050969550505050505056fea26469706673582212203413ffbe6de9554811384591b984a9ba333f0eed14e9fe12443038b058afed6c64736f6c63430008140033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A66 CODESIZE SUB DUP1 PUSH3 0x2A66 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x2D8 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x5A DUP2 PUSH3 0x178 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE1 DUP2 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0xA PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH6 0x5AF3107A4000 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP PUSH3 0x171 PUSH3 0x253 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x699 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x5B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE10 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP3 PUSH3 0x273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B2 DUP2 PUSH3 0x293 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D2 DUP2 PUSH3 0x2A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2F1 JUMPI PUSH3 0x2F0 PUSH3 0x26E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x301 DUP5 DUP3 DUP6 ADD PUSH3 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x315 DUP2 PUSH3 0x293 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x332 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3D0 JUMPI PUSH3 0x3CF PUSH3 0x372 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x43A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3FB JUMP JUMPDEST PUSH3 0x446 DUP7 DUP4 PUSH3 0x3FB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x493 PUSH3 0x48D PUSH3 0x487 DUP5 PUSH3 0x45E JUMP JUMPDEST PUSH3 0x468 JUMP JUMPDEST PUSH3 0x45E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4AF DUP4 PUSH3 0x472 JUMP JUMPDEST PUSH3 0x4C7 PUSH3 0x4BE DUP3 PUSH3 0x49A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x408 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4DE PUSH3 0x4CF JUMP JUMPDEST PUSH3 0x4EB DUP2 DUP5 DUP5 PUSH3 0x4A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x513 JUMPI PUSH3 0x507 PUSH1 0x0 DUP3 PUSH3 0x4D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x562 JUMPI PUSH3 0x52C DUP2 PUSH3 0x3D6 JUMP JUMPDEST PUSH3 0x537 DUP5 PUSH3 0x3EB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x547 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x55F PUSH3 0x556 DUP6 PUSH3 0x3EB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4F0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x587 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x567 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A2 DUP4 DUP4 PUSH3 0x574 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5BD DUP3 PUSH3 0x338 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5D9 JUMPI PUSH3 0x5D8 PUSH3 0x343 JUMP JUMPDEST JUMPDEST PUSH3 0x5E5 DUP3 SLOAD PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x5F2 DUP3 DUP3 DUP6 PUSH3 0x517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x62A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x615 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x621 DUP6 DUP3 PUSH3 0x594 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x691 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x63A DUP7 PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x664 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x63D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x684 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x680 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x574 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x239C PUSH3 0x6CA PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 PUSH2 0x8EA ADD MSTORE PUSH2 0x239C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF897A22B EQ PUSH2 0x304 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x9970EA80 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xE39EB109 EQ PUSH2 0x27E JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x7130DFC9 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21C JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x447 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x456 DUP3 PUSH2 0x90C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC PUSH2 0x976 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI POP PUSH2 0x53F DUP7 DUP3 PUSH2 0x726 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x585 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP3 SWAP2 SWAP1 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x97E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5E6 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DD SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH2 0x66E PUSH2 0x656 DUP3 DUP8 PUSH2 0xA76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x669 DUP4 DUP8 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x680 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x697 SWAP1 PUSH2 0x2115 JUMP JUMPDEST SWAP1 POP PUSH2 0x637 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CE PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x6D8 PUSH1 0x0 PUSH2 0xB25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71C PUSH2 0x715 PUSH2 0x976 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xBEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x809 JUMPI POP PUSH2 0x807 DUP7 DUP3 PUSH2 0x726 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x84D JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP3 SWAP2 SWAP1 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD5B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x86A PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP2 PUSH2 0xB25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA62 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0x976 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC4 PUSH2 0x6DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH2 0xAE7 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE4C DUP6 DUP6 PUSH2 0xF18 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE5D DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE72 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF11 JUMPI PUSH1 0x0 PUSH2 0xEB0 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xF00 JUMPI PUSH1 0x0 PUSH2 0xED1 PUSH1 0x0 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEE9 PUSH1 0x0 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEF9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x12F6 JUMP JUMPDEST POP POP PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xF0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF92 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9C PUSH2 0x976 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x0 PUSH2 0xFBF DUP3 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFD6 DUP4 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10AB JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x119E JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x11AA SWAP1 PUSH2 0x2115 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA1 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1270 JUMPI PUSH1 0x0 PUSH2 0x11D1 PUSH1 0x0 DUP6 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E9 PUSH1 0x0 DUP6 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1261 SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x12EF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12E6 SWAP3 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14A2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1393 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1417 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x140F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14A0 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1497 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1656 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1547 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1544 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15CB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x157C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x15C3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1654 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP3 PUSH2 0x1672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1692 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CA DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E3 DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1700 DUP2 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173C DUP6 DUP3 DUP7 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A5 DUP2 PUSH2 0x1770 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C2 DUP2 PUSH2 0x179C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EC DUP5 DUP3 DUP6 ADD PUSH2 0x17B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP5 DUP3 DUP6 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1892 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BA DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x18C4 DUP2 DUP6 PUSH2 0x1863 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 DUP5 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1947 DUP3 PUSH2 0x189E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 PUSH2 0x165E JUMP JUMPDEST SWAP1 POP PUSH2 0x1985 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CE PUSH2 0x19C9 DUP5 PUSH2 0x198A JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x19B6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A1A JUMPI DUP1 PUSH2 0x1A06 DUP9 DUP3 PUSH2 0x16F1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A49 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH2 0x1A7B DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA PUSH2 0x1AA5 DUP5 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC5 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD1 DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B42 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1B6F DUP9 DUP3 DUP10 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1B9C DUP9 DUP3 DUP10 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1BC9 DUP9 DUP3 DUP10 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C15 PUSH2 0x1C10 DUP5 PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x19B6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C61 JUMPI DUP1 PUSH2 0x1C4D DUP9 DUP3 PUSH2 0x16BB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCE JUMPI PUSH2 0x1CCD PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1CDA DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1D07 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP4 DUP4 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D86 DUP2 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D91 DUP4 PUSH2 0x1D2D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC2 JUMPI DUP2 MLOAD PUSH2 0x1DA9 DUP9 DUP3 PUSH2 0x1D4C JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB4 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D95 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE9 DUP2 DUP5 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFA DUP2 PUSH2 0x1692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E24 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x1E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5E JUMPI PUSH2 0x1E5D PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6C DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7D DUP6 DUP3 DUP7 ADD PUSH2 0x1E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E9E JUMPI PUSH2 0x1E9D PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EAC DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EBD DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE2 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF1 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F02 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F13 DUP9 DUP3 DUP10 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F24 DUP9 DUP3 DUP10 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1F51 DUP9 DUP3 DUP10 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F82 DUP5 DUP3 DUP6 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB0 PUSH2 0x1FAB PUSH2 0x1FA6 DUP5 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 DUP3 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE4 DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x207A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2087 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x20B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP3 PUSH2 0x16D0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AD DUP3 PUSH2 0x16D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B8 DUP4 PUSH2 0x16D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21D0 JUMPI PUSH2 0x21CF PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F0 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2204 DUP2 DUP5 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x223E DUP2 DUP6 PUSH2 0x2218 JUMP JUMPDEST SWAP4 POP PUSH2 0x224E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x2257 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2277 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2284 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2291 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x229E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22B0 DUP2 DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22CB DUP2 PUSH2 0x179C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E7 JUMPI PUSH2 0x22E6 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F5 DUP5 DUP3 DUP6 ADD PUSH2 0x22BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2313 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2320 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2332 DUP2 DUP7 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2346 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x235A DUP2 DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SGT SELFDESTRUCT 0xBE PUSH14 0xE9554811384591B984A9BA333F0E 0xED EQ 0xE9 INVALID SLT PREVRANDAO ADDRESS CODESIZE 0xB0 PC 0xAF 0xED PUSH13 0x64736F6C634300081400330000 ","sourceMap":"427:1795:28:-:0;;;1018:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1085:10;1249:62:3;;;;;;;;;;;;1291:13;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:14;2061:7;:21;;;;1241:5:13;1231:7;;:15;;;;;;;;;;;;;;;;;;1126:9:28::2;1108:28;;;;;;;;::::0;::::2;1212:2;1200:14;;;;::::0;::::2;1237:12;1225:24;;;;::::0;::::2;1272:9;1260:21;;;;::::0;::::2;1302:23;:21;;;:23;;:::i;:::-;1018:315:::0;427:1795;;10290:86:3;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1393:168:28:-;1465:7;1445:17;:27;;;;1506:2;1483:20;:25;;;;1544:9;1519:22;:34;;;;1393:168::o;88:117:31:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;427:1795:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_MINTS_PER_WINDOW_8430":{"entryPoint":1824,"id":8430,"parameterSlots":0,"returnSlots":0},"@MIN_TIME_BETWEEN_MINTS_8432":{"entryPoint":1796,"id":8432,"parameterSlots":0,"returnSlots":0},"@RATE_LIMIT_WINDOW_8428":{"entryPoint":1728,"id":8428,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1225":{"entryPoint":3864,"id":1225,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":2718,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_2561":{"entryPoint":2422,"id":2561,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_976":{"entryPoint":2430,"id":976,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_921":{"entryPoint":3419,"id":921,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1209":{"entryPoint":3051,"id":1209,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2853,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_855":{"entryPoint":3686,"id":855,"parameterSlots":5,"returnSlots":0},"@_update_775":{"entryPoint":3912,"id":775,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_499":{"entryPoint":1434,"id":499,"parameterSlots":2,"returnSlots":1},"@balanceOf_429":{"entryPoint":802,"id":429,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1560":{"entryPoint":5290,"id":1560,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1486":{"entryPoint":4854,"id":1486,"parameterSlots":6,"returnSlots":0},"@isApprovedForAll_532":{"entryPoint":1830,"id":532,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":1754,"id":67,"parameterSlots":0,"returnSlots":1},"@paused_2690":{"entryPoint":1705,"id":2690,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1734,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_622":{"entryPoint":1266,"id":622,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_576":{"entryPoint":1978,"id":576,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_515":{"entryPoint":1802,"id":515,"parameterSlots":2,"returnSlots":0},"@supportsInterface_401":{"entryPoint":892,"id":401,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4280":{"entryPoint":2316,"id":4280,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2146,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_2457":{"entryPoint":2678,"id":2457,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2483":{"entryPoint":2698,"id":2483,"parameterSlots":2,"returnSlots":1},"@uri_412":{"entryPoint":1118,"id":412,"parameterSlots":1,"returnSlots":1},"@usdToken_8420":{"entryPoint":2280,"id":8420,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7170,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6587,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6807,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7815,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6919,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":7879,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5894,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7321,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7665,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6145,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$1639_to_t_address_fromStack":{"entryPoint":8155,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7485,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5958,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8293,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8958,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8802,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8541,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8662,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1639__to_t_address__fromStack_reversed":{"entryPoint":8170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8334,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":6511,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5726,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7126,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6538,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6743,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7469,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7441,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8717,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6232,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7524,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7452,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8728,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6243,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8610,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5778,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6133,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6000,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5746,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5840,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$1639_to_t_address":{"entryPoint":8137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8119,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8085,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6792,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6260,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8244,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6462,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8075,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8422,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8197,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8375,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6415,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6410,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6582,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6738,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5741,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5736,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6302,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7707,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6044,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5850,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24514:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"748:87:31","statements":[{"nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:31"},"nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:31"},"nodeType":"YulFunctionCall","src":"796:33:31"},"nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nodeType":"YulBlock","src":"886:32:31","statements":[{"nodeType":"YulAssignment","src":"896:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:31","type":""}],"src":"841:77:31"},{"body":{"nodeType":"YulBlock","src":"967:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:31"},"nodeType":"YulFunctionCall","src":"1026:12:31"},"nodeType":"YulExpressionStatement","src":"1026:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:31"},"nodeType":"YulFunctionCall","src":"997:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:31"},"nodeType":"YulFunctionCall","src":"987:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:31"},"nodeType":"YulFunctionCall","src":"980:43:31"},"nodeType":"YulIf","src":"977:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:31","type":""}],"src":"924:122:31"},{"body":{"nodeType":"YulBlock","src":"1104:87:31","statements":[{"nodeType":"YulAssignment","src":"1114:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:31"},"nodeType":"YulFunctionCall","src":"1123:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:31"},"nodeType":"YulFunctionCall","src":"1152:33:31"},"nodeType":"YulExpressionStatement","src":"1152:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:31","type":""}],"src":"1052:139:31"},{"body":{"nodeType":"YulBlock","src":"1280:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:31"},"nodeType":"YulFunctionCall","src":"1328:79:31"},"nodeType":"YulExpressionStatement","src":"1328:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:31"},"nodeType":"YulFunctionCall","src":"1297:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:31"},"nodeType":"YulFunctionCall","src":"1293:32:31"},"nodeType":"YulIf","src":"1290:119:31"},{"nodeType":"YulBlock","src":"1419:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:31"},"nodeType":"YulFunctionCall","src":"1494:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:31"},"nodeType":"YulFunctionCall","src":"1473:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:31"}]}]},{"nodeType":"YulBlock","src":"1546:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:31"},"nodeType":"YulFunctionCall","src":"1622:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:31"},"nodeType":"YulFunctionCall","src":"1601:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:31","type":""}],"src":"1197:474:31"},{"body":{"nodeType":"YulBlock","src":"1742:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:31"},"nodeType":"YulFunctionCall","src":"1764:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:31"},"nodeType":"YulFunctionCall","src":"1752:37:31"},"nodeType":"YulExpressionStatement","src":"1752:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:31","type":""}],"src":"1677:118:31"},{"body":{"nodeType":"YulBlock","src":"1899:124:31","statements":[{"nodeType":"YulAssignment","src":"1909:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:31"},"nodeType":"YulFunctionCall","src":"1917:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:31"},"nodeType":"YulFunctionCall","src":"1998:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:31"},"nodeType":"YulFunctionCall","src":"1945:71:31"},"nodeType":"YulExpressionStatement","src":"1945:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:31","type":""}],"src":"1801:222:31"},{"body":{"nodeType":"YulBlock","src":"2073:105:31","statements":[{"nodeType":"YulAssignment","src":"2083:89:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:31"},"nodeType":"YulFunctionCall","src":"2094:78:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:31"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:31","type":""}],"src":"2029:149:31"},{"body":{"nodeType":"YulBlock","src":"2226:78:31","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:31"},"nodeType":"YulFunctionCall","src":"2284:12:31"},"nodeType":"YulExpressionStatement","src":"2284:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:31"},"nodeType":"YulFunctionCall","src":"2256:23:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:31"},"nodeType":"YulFunctionCall","src":"2246:34:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:31"},"nodeType":"YulFunctionCall","src":"2239:42:31"},"nodeType":"YulIf","src":"2236:62:31"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:31","type":""}],"src":"2184:120:31"},{"body":{"nodeType":"YulBlock","src":"2361:86:31","statements":[{"nodeType":"YulAssignment","src":"2371:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:31"},"nodeType":"YulFunctionCall","src":"2380:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:31"},"nodeType":"YulFunctionCall","src":"2409:32:31"},"nodeType":"YulExpressionStatement","src":"2409:32:31"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:31","type":""}],"src":"2310:137:31"},{"body":{"nodeType":"YulBlock","src":"2518:262:31","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:31"},"nodeType":"YulFunctionCall","src":"2566:79:31"},"nodeType":"YulExpressionStatement","src":"2566:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:31"},"nodeType":"YulFunctionCall","src":"2535:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:31"},"nodeType":"YulFunctionCall","src":"2531:32:31"},"nodeType":"YulIf","src":"2528:119:31"},{"nodeType":"YulBlock","src":"2657:116:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:31"},"nodeType":"YulFunctionCall","src":"2731:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:31"},"nodeType":"YulFunctionCall","src":"2711:52:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:31","type":""}],"src":"2453:327:31"},{"body":{"nodeType":"YulBlock","src":"2828:48:31","statements":[{"nodeType":"YulAssignment","src":"2838:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:31"},"nodeType":"YulFunctionCall","src":"2856:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:31"},"nodeType":"YulFunctionCall","src":"2849:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:31","type":""}],"src":"2786:90:31"},{"body":{"nodeType":"YulBlock","src":"2941:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:31"},"nodeType":"YulFunctionCall","src":"2963:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:31"},"nodeType":"YulFunctionCall","src":"2951:34:31"},"nodeType":"YulExpressionStatement","src":"2951:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:31","type":""}],"src":"2882:109:31"},{"body":{"nodeType":"YulBlock","src":"3089:118:31","statements":[{"nodeType":"YulAssignment","src":"3099:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:31"},"nodeType":"YulFunctionCall","src":"3107:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:31"},"nodeType":"YulFunctionCall","src":"3182:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:31"},"nodeType":"YulFunctionCall","src":"3135:65:31"},"nodeType":"YulExpressionStatement","src":"3135:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:31","type":""}],"src":"2997:210:31"},{"body":{"nodeType":"YulBlock","src":"3279:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"3325:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3327:77:31"},"nodeType":"YulFunctionCall","src":"3327:79:31"},"nodeType":"YulExpressionStatement","src":"3327:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3300:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:31"},"nodeType":"YulFunctionCall","src":"3296:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3292:3:31"},"nodeType":"YulFunctionCall","src":"3292:32:31"},"nodeType":"YulIf","src":"3289:119:31"},{"nodeType":"YulBlock","src":"3418:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3447:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:31"},"nodeType":"YulFunctionCall","src":"3493:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3472:20:31"},"nodeType":"YulFunctionCall","src":"3472:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3249:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3260:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3272:6:31","type":""}],"src":"3213:329:31"},{"body":{"nodeType":"YulBlock","src":"3607:40:31","statements":[{"nodeType":"YulAssignment","src":"3618:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:31"},"nodeType":"YulFunctionCall","src":"3628:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:31","type":""}],"src":"3548:99:31"},{"body":{"nodeType":"YulBlock","src":"3749:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:31"},"nodeType":"YulFunctionCall","src":"3759:19:31"},"nodeType":"YulExpressionStatement","src":"3759:19:31"},{"nodeType":"YulAssignment","src":"3787:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:31"},"nodeType":"YulFunctionCall","src":"3802:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:31","type":""}],"src":"3653:169:31"},{"body":{"nodeType":"YulBlock","src":"3890:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:31"},"nodeType":"YulFunctionCall","src":"3990:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:31"},"nodeType":"YulFunctionCall","src":"4009:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:31"},"nodeType":"YulFunctionCall","src":"4003:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:31"},"nodeType":"YulFunctionCall","src":"3983:39:31"},"nodeType":"YulExpressionStatement","src":"3983:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:31"},"nodeType":"YulFunctionCall","src":"3927:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:31","statements":[{"nodeType":"YulAssignment","src":"3943:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:31"},"nodeType":"YulFunctionCall","src":"3948:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:31","statements":[]},"src":"3919:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:31"},"nodeType":"YulFunctionCall","src":"4048:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:31"},"nodeType":"YulFunctionCall","src":"4041:27:31"},"nodeType":"YulExpressionStatement","src":"4041:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:31","type":""}],"src":"3828:246:31"},{"body":{"nodeType":"YulBlock","src":"4128:54:31","statements":[{"nodeType":"YulAssignment","src":"4138:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:31"},"nodeType":"YulFunctionCall","src":"4152:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:31"},"nodeType":"YulFunctionCall","src":"4168:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:31"},"nodeType":"YulFunctionCall","src":"4148:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:31","type":""}],"src":"4080:102:31"},{"body":{"nodeType":"YulBlock","src":"4280:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:31"},"nodeType":"YulFunctionCall","src":"4304:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:31"},"nodeType":"YulFunctionCall","src":"4359:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:31"},"nodeType":"YulFunctionCall","src":"4474:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:31"},"nodeType":"YulFunctionCall","src":"4439:65:31"},"nodeType":"YulExpressionStatement","src":"4439:65:31"},{"nodeType":"YulAssignment","src":"4513:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:31"},"nodeType":"YulFunctionCall","src":"4529:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:31"},"nodeType":"YulFunctionCall","src":"4520:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:31","type":""}],"src":"4188:377:31"},{"body":{"nodeType":"YulBlock","src":"4689:195:31","statements":[{"nodeType":"YulAssignment","src":"4699:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:31"},"nodeType":"YulFunctionCall","src":"4707:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:31"},"nodeType":"YulFunctionCall","src":"4742:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:31"},"nodeType":"YulFunctionCall","src":"4761:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:31"},"nodeType":"YulFunctionCall","src":"4735:47:31"},"nodeType":"YulExpressionStatement","src":"4735:47:31"},{"nodeType":"YulAssignment","src":"4791:86:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:31"},"nodeType":"YulFunctionCall","src":"4799:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:31","type":""}],"src":"4571:313:31"},{"body":{"nodeType":"YulBlock","src":"4979:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4996:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4999:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4989:6:31"},"nodeType":"YulFunctionCall","src":"4989:12:31"},"nodeType":"YulExpressionStatement","src":"4989:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4890:117:31"},{"body":{"nodeType":"YulBlock","src":"5041:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5058:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5061:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5051:6:31"},"nodeType":"YulFunctionCall","src":"5051:88:31"},"nodeType":"YulExpressionStatement","src":"5051:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5158:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5148:6:31"},"nodeType":"YulFunctionCall","src":"5148:15:31"},"nodeType":"YulExpressionStatement","src":"5148:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5179:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5182:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5172:6:31"},"nodeType":"YulFunctionCall","src":"5172:15:31"},"nodeType":"YulExpressionStatement","src":"5172:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5013:180:31"},{"body":{"nodeType":"YulBlock","src":"5242:238:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5252:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5274:6:31"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5304:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5282:21:31"},"nodeType":"YulFunctionCall","src":"5282:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:31"},"nodeType":"YulFunctionCall","src":"5270:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5256:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5421:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5423:16:31"},"nodeType":"YulFunctionCall","src":"5423:18:31"},"nodeType":"YulExpressionStatement","src":"5423:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"5376:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5361:2:31"},"nodeType":"YulFunctionCall","src":"5361:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5400:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5412:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5397:2:31"},"nodeType":"YulFunctionCall","src":"5397:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5358:2:31"},"nodeType":"YulFunctionCall","src":"5358:62:31"},"nodeType":"YulIf","src":"5355:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5463:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5452:6:31"},"nodeType":"YulFunctionCall","src":"5452:22:31"},"nodeType":"YulExpressionStatement","src":"5452:22:31"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5228:6:31","type":""},{"name":"size","nodeType":"YulTypedName","src":"5236:4:31","type":""}],"src":"5199:281:31"},{"body":{"nodeType":"YulBlock","src":"5527:88:31","statements":[{"nodeType":"YulAssignment","src":"5537:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5547:18:31"},"nodeType":"YulFunctionCall","src":"5547:20:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5596:6:31"},{"name":"size","nodeType":"YulIdentifier","src":"5604:4:31"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5576:19:31"},"nodeType":"YulFunctionCall","src":"5576:33:31"},"nodeType":"YulExpressionStatement","src":"5576:33:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5511:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5520:6:31","type":""}],"src":"5486:129:31"},{"body":{"nodeType":"YulBlock","src":"5703:229:31","statements":[{"body":{"nodeType":"YulBlock","src":"5808:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5810:16:31"},"nodeType":"YulFunctionCall","src":"5810:18:31"},"nodeType":"YulExpressionStatement","src":"5810:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5780:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5788:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5777:2:31"},"nodeType":"YulFunctionCall","src":"5777:30:31"},"nodeType":"YulIf","src":"5774:56:31"},{"nodeType":"YulAssignment","src":"5840:25:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5852:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5860:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5848:3:31"},"nodeType":"YulFunctionCall","src":"5848:17:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5840:4:31"}]},{"nodeType":"YulAssignment","src":"5902:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5914:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"5920:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:31"},"nodeType":"YulFunctionCall","src":"5910:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5902:4:31"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5687:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5698:4:31","type":""}],"src":"5621:311:31"},{"body":{"nodeType":"YulBlock","src":"6027:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6044:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6047:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6037:6:31"},"nodeType":"YulFunctionCall","src":"6037:12:31"},"nodeType":"YulExpressionStatement","src":"6037:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5938:117:31"},{"body":{"nodeType":"YulBlock","src":"6180:608:31","statements":[{"nodeType":"YulAssignment","src":"6190:90:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6272:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6215:56:31"},"nodeType":"YulFunctionCall","src":"6215:64:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6199:15:31"},"nodeType":"YulFunctionCall","src":"6199:81:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6190:5:31"}]},{"nodeType":"YulVariableDeclaration","src":"6289:16:31","value":{"name":"array","nodeType":"YulIdentifier","src":"6300:5:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6293:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6322:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"6329:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:31"},"nodeType":"YulFunctionCall","src":"6315:21:31"},"nodeType":"YulExpressionStatement","src":"6315:21:31"},{"nodeType":"YulAssignment","src":"6345:23:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6356:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6363:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:31"},"nodeType":"YulFunctionCall","src":"6352:16:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6345:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"6378:44:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6396:6:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6408:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6404:3:31"},"nodeType":"YulFunctionCall","src":"6404:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6392:3:31"},"nodeType":"YulFunctionCall","src":"6392:30:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6382:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6450:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6464:77:31"},"nodeType":"YulFunctionCall","src":"6464:79:31"},"nodeType":"YulExpressionStatement","src":"6464:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6437:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"6445:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:31"},"nodeType":"YulFunctionCall","src":"6434:15:31"},"nodeType":"YulIf","src":"6431:122:31"},{"body":{"nodeType":"YulBlock","src":"6638:144:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6653:21:31","value":{"name":"src","nodeType":"YulIdentifier","src":"6671:3:31"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6657:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6695:3:31"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6721:10:31"},{"name":"end","nodeType":"YulIdentifier","src":"6733:3:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6700:20:31"},"nodeType":"YulFunctionCall","src":"6700:37:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:31"},"nodeType":"YulFunctionCall","src":"6688:50:31"},"nodeType":"YulExpressionStatement","src":"6688:50:31"},{"nodeType":"YulAssignment","src":"6751:21:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6762:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"6767:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:31"},"nodeType":"YulFunctionCall","src":"6758:14:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6751:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6591:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6596:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6588:2:31"},"nodeType":"YulFunctionCall","src":"6588:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6604:25:31","statements":[{"nodeType":"YulAssignment","src":"6606:21:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6617:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"6622:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:31"},"nodeType":"YulFunctionCall","src":"6613:14:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6606:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6566:21:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6568:17:31","value":{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6572:3:31","type":""}]}]},"src":"6562:220:31"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6150:6:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"6158:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6166:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6174:5:31","type":""}],"src":"6078:710:31"},{"body":{"nodeType":"YulBlock","src":"6888:293:31","statements":[{"body":{"nodeType":"YulBlock","src":"6937:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6939:77:31"},"nodeType":"YulFunctionCall","src":"6939:79:31"},"nodeType":"YulExpressionStatement","src":"6939:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6916:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6924:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6912:3:31"},"nodeType":"YulFunctionCall","src":"6912:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"6931:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6908:3:31"},"nodeType":"YulFunctionCall","src":"6908:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6901:6:31"},"nodeType":"YulFunctionCall","src":"6901:35:31"},"nodeType":"YulIf","src":"6898:122:31"},{"nodeType":"YulVariableDeclaration","src":"7029:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7056:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7043:12:31"},"nodeType":"YulFunctionCall","src":"7043:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7033:6:31","type":""}]},{"nodeType":"YulAssignment","src":"7072:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7156:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7144:3:31"},"nodeType":"YulFunctionCall","src":"7144:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"7163:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"7171:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7081:62:31"},"nodeType":"YulFunctionCall","src":"7081:94:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7072:5:31"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6866:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6874:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6882:5:31","type":""}],"src":"6811:370:31"},{"body":{"nodeType":"YulBlock","src":"7276:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7293:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7286:6:31"},"nodeType":"YulFunctionCall","src":"7286:12:31"},"nodeType":"YulExpressionStatement","src":"7286:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7187:117:31"},{"body":{"nodeType":"YulBlock","src":"7376:241:31","statements":[{"body":{"nodeType":"YulBlock","src":"7481:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7483:16:31"},"nodeType":"YulFunctionCall","src":"7483:18:31"},"nodeType":"YulExpressionStatement","src":"7483:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7453:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7461:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7450:2:31"},"nodeType":"YulFunctionCall","src":"7450:30:31"},"nodeType":"YulIf","src":"7447:56:31"},{"nodeType":"YulAssignment","src":"7513:37:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7543:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7521:21:31"},"nodeType":"YulFunctionCall","src":"7521:29:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7513:4:31"}]},{"nodeType":"YulAssignment","src":"7587:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7599:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"7605:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:31"},"nodeType":"YulFunctionCall","src":"7595:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7587:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7360:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7371:4:31","type":""}],"src":"7310:307:31"},{"body":{"nodeType":"YulBlock","src":"7687:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7710:3:31"},{"name":"src","nodeType":"YulIdentifier","src":"7715:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"7720:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7697:12:31"},"nodeType":"YulFunctionCall","src":"7697:30:31"},"nodeType":"YulExpressionStatement","src":"7697:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7747:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"7752:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:31"},"nodeType":"YulFunctionCall","src":"7743:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"7761:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7736:6:31"},"nodeType":"YulFunctionCall","src":"7736:27:31"},"nodeType":"YulExpressionStatement","src":"7736:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7669:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7674:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"7679:6:31","type":""}],"src":"7623:146:31"},{"body":{"nodeType":"YulBlock","src":"7858:340:31","statements":[{"nodeType":"YulAssignment","src":"7868:74:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7893:40:31"},"nodeType":"YulFunctionCall","src":"7893:48:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7877:15:31"},"nodeType":"YulFunctionCall","src":"7877:65:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7868:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7958:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"7965:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:31"},"nodeType":"YulFunctionCall","src":"7951:21:31"},"nodeType":"YulExpressionStatement","src":"7951:21:31"},{"nodeType":"YulVariableDeclaration","src":"7981:27:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7996:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8003:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7992:3:31"},"nodeType":"YulFunctionCall","src":"7992:16:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7985:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8046:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8048:77:31"},"nodeType":"YulFunctionCall","src":"8048:79:31"},"nodeType":"YulExpressionStatement","src":"8048:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8027:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8032:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:31"},"nodeType":"YulFunctionCall","src":"8023:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"8041:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8020:2:31"},"nodeType":"YulFunctionCall","src":"8020:25:31"},"nodeType":"YulIf","src":"8017:112:31"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8175:3:31"},{"name":"dst","nodeType":"YulIdentifier","src":"8180:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8185:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8138:36:31"},"nodeType":"YulFunctionCall","src":"8138:54:31"},"nodeType":"YulExpressionStatement","src":"8138:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7831:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"7836:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"7844:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7852:5:31","type":""}],"src":"7775:423:31"},{"body":{"nodeType":"YulBlock","src":"8278:277:31","statements":[{"body":{"nodeType":"YulBlock","src":"8327:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8329:77:31"},"nodeType":"YulFunctionCall","src":"8329:79:31"},"nodeType":"YulExpressionStatement","src":"8329:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8306:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8314:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:31"},"nodeType":"YulFunctionCall","src":"8302:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"8321:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8298:3:31"},"nodeType":"YulFunctionCall","src":"8298:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8291:6:31"},"nodeType":"YulFunctionCall","src":"8291:35:31"},"nodeType":"YulIf","src":"8288:122:31"},{"nodeType":"YulVariableDeclaration","src":"8419:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8446:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8433:12:31"},"nodeType":"YulFunctionCall","src":"8433:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8423:6:31","type":""}]},{"nodeType":"YulAssignment","src":"8462:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8522:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8530:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8518:3:31"},"nodeType":"YulFunctionCall","src":"8518:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"8537:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"8545:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8471:46:31"},"nodeType":"YulFunctionCall","src":"8471:78:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8462:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8256:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"8264:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8272:5:31","type":""}],"src":"8217:338:31"},{"body":{"nodeType":"YulBlock","src":"8754:1316:31","statements":[{"body":{"nodeType":"YulBlock","src":"8801:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8803:77:31"},"nodeType":"YulFunctionCall","src":"8803:79:31"},"nodeType":"YulExpressionStatement","src":"8803:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8775:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8771:3:31"},"nodeType":"YulFunctionCall","src":"8771:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"8796:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8767:3:31"},"nodeType":"YulFunctionCall","src":"8767:33:31"},"nodeType":"YulIf","src":"8764:120:31"},{"nodeType":"YulBlock","src":"8894:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8909:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8923:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8913:6:31","type":""}]},{"nodeType":"YulAssignment","src":"8938:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"8984:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:31"},"nodeType":"YulFunctionCall","src":"8969:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8993:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8948:20:31"},"nodeType":"YulFunctionCall","src":"8948:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8938:6:31"}]}]},{"nodeType":"YulBlock","src":"9021:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9036:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9050:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9040:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9066:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9101:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9112:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9097:3:31"},"nodeType":"YulFunctionCall","src":"9097:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9121:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9076:20:31"},"nodeType":"YulFunctionCall","src":"9076:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9066:6:31"}]}]},{"nodeType":"YulBlock","src":"9149:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9164:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9195:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9206:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:31"},"nodeType":"YulFunctionCall","src":"9191:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9178:12:31"},"nodeType":"YulFunctionCall","src":"9178:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9168:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9257:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9259:77:31"},"nodeType":"YulFunctionCall","src":"9259:79:31"},"nodeType":"YulExpressionStatement","src":"9259:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9229:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9237:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9226:2:31"},"nodeType":"YulFunctionCall","src":"9226:30:31"},"nodeType":"YulIf","src":"9223:117:31"},{"nodeType":"YulAssignment","src":"9354:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9425:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:31"},"nodeType":"YulFunctionCall","src":"9410:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9434:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9364:45:31"},"nodeType":"YulFunctionCall","src":"9364:78:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9354:6:31"}]}]},{"nodeType":"YulBlock","src":"9462:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9477:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9508:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9519:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9504:3:31"},"nodeType":"YulFunctionCall","src":"9504:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9491:12:31"},"nodeType":"YulFunctionCall","src":"9491:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9481:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9570:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9572:77:31"},"nodeType":"YulFunctionCall","src":"9572:79:31"},"nodeType":"YulExpressionStatement","src":"9572:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9542:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9550:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9539:2:31"},"nodeType":"YulFunctionCall","src":"9539:30:31"},"nodeType":"YulIf","src":"9536:117:31"},{"nodeType":"YulAssignment","src":"9667:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9738:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:31"},"nodeType":"YulFunctionCall","src":"9723:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9747:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9677:45:31"},"nodeType":"YulFunctionCall","src":"9677:78:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9667:6:31"}]}]},{"nodeType":"YulBlock","src":"9775:288:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9790:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9832:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9817:3:31"},"nodeType":"YulFunctionCall","src":"9817:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9804:12:31"},"nodeType":"YulFunctionCall","src":"9804:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9794:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9884:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9886:77:31"},"nodeType":"YulFunctionCall","src":"9886:79:31"},"nodeType":"YulExpressionStatement","src":"9886:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9856:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9864:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9853:2:31"},"nodeType":"YulFunctionCall","src":"9853:30:31"},"nodeType":"YulIf","src":"9850:117:31"},{"nodeType":"YulAssignment","src":"9981:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10025:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"10036:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10021:3:31"},"nodeType":"YulFunctionCall","src":"10021:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10045:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9991:29:31"},"nodeType":"YulFunctionCall","src":"9991:62:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9981:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8692:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8703:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8715:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8723:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8731:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8739:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8747:6:31","type":""}],"src":"8561:1509:31"},{"body":{"nodeType":"YulBlock","src":"10158:229:31","statements":[{"body":{"nodeType":"YulBlock","src":"10263:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10265:16:31"},"nodeType":"YulFunctionCall","src":"10265:18:31"},"nodeType":"YulExpressionStatement","src":"10265:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10235:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10243:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10232:2:31"},"nodeType":"YulFunctionCall","src":"10232:30:31"},"nodeType":"YulIf","src":"10229:56:31"},{"nodeType":"YulAssignment","src":"10295:25:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10307:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10315:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10303:3:31"},"nodeType":"YulFunctionCall","src":"10303:17:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10295:4:31"}]},{"nodeType":"YulAssignment","src":"10357:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10369:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"10375:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10365:3:31"},"nodeType":"YulFunctionCall","src":"10365:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10357:4:31"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10142:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10153:4:31","type":""}],"src":"10076:311:31"},{"body":{"nodeType":"YulBlock","src":"10512:608:31","statements":[{"nodeType":"YulAssignment","src":"10522:90:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10604:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10547:56:31"},"nodeType":"YulFunctionCall","src":"10547:64:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10531:15:31"},"nodeType":"YulFunctionCall","src":"10531:81:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10522:5:31"}]},{"nodeType":"YulVariableDeclaration","src":"10621:16:31","value":{"name":"array","nodeType":"YulIdentifier","src":"10632:5:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10625:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10654:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"10661:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10647:6:31"},"nodeType":"YulFunctionCall","src":"10647:21:31"},"nodeType":"YulExpressionStatement","src":"10647:21:31"},{"nodeType":"YulAssignment","src":"10677:23:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10688:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"10695:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10684:3:31"},"nodeType":"YulFunctionCall","src":"10684:16:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10677:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"10710:44:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10728:6:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10740:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10748:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10736:3:31"},"nodeType":"YulFunctionCall","src":"10736:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10724:3:31"},"nodeType":"YulFunctionCall","src":"10724:30:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"10714:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"10782:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10796:77:31"},"nodeType":"YulFunctionCall","src":"10796:79:31"},"nodeType":"YulExpressionStatement","src":"10796:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"10769:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"10777:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10766:2:31"},"nodeType":"YulFunctionCall","src":"10766:15:31"},"nodeType":"YulIf","src":"10763:122:31"},{"body":{"nodeType":"YulBlock","src":"10970:144:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10985:21:31","value":{"name":"src","nodeType":"YulIdentifier","src":"11003:3:31"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"10989:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11027:3:31"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11053:10:31"},{"name":"end","nodeType":"YulIdentifier","src":"11065:3:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11032:20:31"},"nodeType":"YulFunctionCall","src":"11032:37:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11020:6:31"},"nodeType":"YulFunctionCall","src":"11020:50:31"},"nodeType":"YulExpressionStatement","src":"11020:50:31"},{"nodeType":"YulAssignment","src":"11083:21:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11094:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"11099:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:31"},"nodeType":"YulFunctionCall","src":"11090:14:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11083:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10923:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"10928:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10920:2:31"},"nodeType":"YulFunctionCall","src":"10920:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10936:25:31","statements":[{"nodeType":"YulAssignment","src":"10938:21:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10949:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"10954:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10945:3:31"},"nodeType":"YulFunctionCall","src":"10945:14:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"10938:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"10898:21:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10900:17:31","value":{"name":"offset","nodeType":"YulIdentifier","src":"10911:6:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"10904:3:31","type":""}]}]},"src":"10894:220:31"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10482:6:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"10490:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"10498:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10506:5:31","type":""}],"src":"10410:710:31"},{"body":{"nodeType":"YulBlock","src":"11220:293:31","statements":[{"body":{"nodeType":"YulBlock","src":"11269:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11271:77:31"},"nodeType":"YulFunctionCall","src":"11271:79:31"},"nodeType":"YulExpressionStatement","src":"11271:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11248:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11256:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11244:3:31"},"nodeType":"YulFunctionCall","src":"11244:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"11263:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11240:3:31"},"nodeType":"YulFunctionCall","src":"11240:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11233:6:31"},"nodeType":"YulFunctionCall","src":"11233:35:31"},"nodeType":"YulIf","src":"11230:122:31"},{"nodeType":"YulVariableDeclaration","src":"11361:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11388:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11375:12:31"},"nodeType":"YulFunctionCall","src":"11375:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11365:6:31","type":""}]},{"nodeType":"YulAssignment","src":"11404:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11480:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11488:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11476:3:31"},"nodeType":"YulFunctionCall","src":"11476:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"11495:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"11503:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11413:62:31"},"nodeType":"YulFunctionCall","src":"11413:94:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11404:5:31"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11198:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11206:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11214:5:31","type":""}],"src":"11143:370:31"},{"body":{"nodeType":"YulBlock","src":"11652:761:31","statements":[{"body":{"nodeType":"YulBlock","src":"11698:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11700:77:31"},"nodeType":"YulFunctionCall","src":"11700:79:31"},"nodeType":"YulExpressionStatement","src":"11700:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11673:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"11682:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11669:3:31"},"nodeType":"YulFunctionCall","src":"11669:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"11694:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11665:3:31"},"nodeType":"YulFunctionCall","src":"11665:32:31"},"nodeType":"YulIf","src":"11662:119:31"},{"nodeType":"YulBlock","src":"11791:302:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11806:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11848:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:31"},"nodeType":"YulFunctionCall","src":"11833:17:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11820:12:31"},"nodeType":"YulFunctionCall","src":"11820:31:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11810:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11898:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11900:77:31"},"nodeType":"YulFunctionCall","src":"11900:79:31"},"nodeType":"YulExpressionStatement","src":"11900:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11870:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11878:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11867:2:31"},"nodeType":"YulFunctionCall","src":"11867:30:31"},"nodeType":"YulIf","src":"11864:117:31"},{"nodeType":"YulAssignment","src":"11995:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12055:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12066:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12051:3:31"},"nodeType":"YulFunctionCall","src":"12051:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12075:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12005:45:31"},"nodeType":"YulFunctionCall","src":"12005:78:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11995:6:31"}]}]},{"nodeType":"YulBlock","src":"12103:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12118:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12149:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12145:3:31"},"nodeType":"YulFunctionCall","src":"12145:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12132:12:31"},"nodeType":"YulFunctionCall","src":"12132:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12122:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"12211:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12213:77:31"},"nodeType":"YulFunctionCall","src":"12213:79:31"},"nodeType":"YulExpressionStatement","src":"12213:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12183:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12191:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12180:2:31"},"nodeType":"YulFunctionCall","src":"12180:30:31"},"nodeType":"YulIf","src":"12177:117:31"},{"nodeType":"YulAssignment","src":"12308:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12368:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12379:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12364:3:31"},"nodeType":"YulFunctionCall","src":"12364:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12388:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12318:45:31"},"nodeType":"YulFunctionCall","src":"12318:78:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12308:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11614:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11625:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11637:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11645:6:31","type":""}],"src":"11519:894:31"},{"body":{"nodeType":"YulBlock","src":"12493:40:31","statements":[{"nodeType":"YulAssignment","src":"12504:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12520:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12514:5:31"},"nodeType":"YulFunctionCall","src":"12514:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12504:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12476:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12486:6:31","type":""}],"src":"12419:114:31"},{"body":{"nodeType":"YulBlock","src":"12650:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12667:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"12672:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12660:6:31"},"nodeType":"YulFunctionCall","src":"12660:19:31"},"nodeType":"YulExpressionStatement","src":"12660:19:31"},{"nodeType":"YulAssignment","src":"12688:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12707:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"12712:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12703:3:31"},"nodeType":"YulFunctionCall","src":"12703:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12688:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12622:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"12627:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12638:11:31","type":""}],"src":"12539:184:31"},{"body":{"nodeType":"YulBlock","src":"12801:60:31","statements":[{"nodeType":"YulAssignment","src":"12811:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12819:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12811:4:31"}]},{"nodeType":"YulAssignment","src":"12832:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12844:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"12849:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12840:3:31"},"nodeType":"YulFunctionCall","src":"12840:14:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12832:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12788:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12796:4:31","type":""}],"src":"12729:132:31"},{"body":{"nodeType":"YulBlock","src":"12922:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12939:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12962:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12944:17:31"},"nodeType":"YulFunctionCall","src":"12944:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12932:6:31"},"nodeType":"YulFunctionCall","src":"12932:37:31"},"nodeType":"YulExpressionStatement","src":"12932:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12910:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12917:3:31","type":""}],"src":"12867:108:31"},{"body":{"nodeType":"YulBlock","src":"13061:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13105:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"13113:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13071:33:31"},"nodeType":"YulFunctionCall","src":"13071:46:31"},"nodeType":"YulExpressionStatement","src":"13071:46:31"},{"nodeType":"YulAssignment","src":"13126:28:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13144:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13149:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13140:3:31"},"nodeType":"YulFunctionCall","src":"13140:14:31"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13126:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13034:6:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13042:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13050:10:31","type":""}],"src":"12981:179:31"},{"body":{"nodeType":"YulBlock","src":"13241:38:31","statements":[{"nodeType":"YulAssignment","src":"13251:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13263:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13268:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13259:3:31"},"nodeType":"YulFunctionCall","src":"13259:14:31"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13251:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13228:3:31","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13236:4:31","type":""}],"src":"13166:113:31"},{"body":{"nodeType":"YulBlock","src":"13439:608:31","statements":[{"nodeType":"YulVariableDeclaration","src":"13449:68:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13511:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13463:47:31"},"nodeType":"YulFunctionCall","src":"13463:54:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13453:6:31","type":""}]},{"nodeType":"YulAssignment","src":"13526:93:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13607:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"13612:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13533:73:31"},"nodeType":"YulFunctionCall","src":"13533:86:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13526:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"13628:71:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13693:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13643:49:31"},"nodeType":"YulFunctionCall","src":"13643:56:31"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13632:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13708:21:31","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13722:7:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13712:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"13798:224:31","statements":[{"nodeType":"YulVariableDeclaration","src":"13812:34:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13839:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13833:5:31"},"nodeType":"YulFunctionCall","src":"13833:13:31"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13816:13:31","type":""}]},{"nodeType":"YulAssignment","src":"13859:70:31","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13910:13:31"},{"name":"pos","nodeType":"YulIdentifier","src":"13925:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13866:43:31"},"nodeType":"YulFunctionCall","src":"13866:63:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13859:3:31"}]},{"nodeType":"YulAssignment","src":"13942:70:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14005:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13952:52:31"},"nodeType":"YulFunctionCall","src":"13952:60:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13942:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13760:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"13763:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13757:2:31"},"nodeType":"YulFunctionCall","src":"13757:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13771:18:31","statements":[{"nodeType":"YulAssignment","src":"13773:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13782:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"13785:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13778:3:31"},"nodeType":"YulFunctionCall","src":"13778:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13773:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"13742:14:31","statements":[{"nodeType":"YulVariableDeclaration","src":"13744:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"13753:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13748:1:31","type":""}]}]},"src":"13738:284:31"},{"nodeType":"YulAssignment","src":"14031:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"14038:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14031:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13418:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13425:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13434:3:31","type":""}],"src":"13315:732:31"},{"body":{"nodeType":"YulBlock","src":"14201:225:31","statements":[{"nodeType":"YulAssignment","src":"14211:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14223:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14234:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14219:3:31"},"nodeType":"YulFunctionCall","src":"14219:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14211:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14258:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14269:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:31"},"nodeType":"YulFunctionCall","src":"14254:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14277:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14283:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14273:3:31"},"nodeType":"YulFunctionCall","src":"14273:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14247:6:31"},"nodeType":"YulFunctionCall","src":"14247:47:31"},"nodeType":"YulExpressionStatement","src":"14247:47:31"},{"nodeType":"YulAssignment","src":"14303:116:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14405:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"14414:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14311:93:31"},"nodeType":"YulFunctionCall","src":"14311:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14303:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14173:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14185:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14196:4:31","type":""}],"src":"14053:373:31"},{"body":{"nodeType":"YulBlock","src":"14497:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14514:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14537:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14519:17:31"},"nodeType":"YulFunctionCall","src":"14519:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14507:6:31"},"nodeType":"YulFunctionCall","src":"14507:37:31"},"nodeType":"YulExpressionStatement","src":"14507:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14485:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14492:3:31","type":""}],"src":"14432:118:31"},{"body":{"nodeType":"YulBlock","src":"14654:124:31","statements":[{"nodeType":"YulAssignment","src":"14664:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14676:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14687:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14672:3:31"},"nodeType":"YulFunctionCall","src":"14672:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14664:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14744:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14757:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14768:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14753:3:31"},"nodeType":"YulFunctionCall","src":"14753:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14700:43:31"},"nodeType":"YulFunctionCall","src":"14700:71:31"},"nodeType":"YulExpressionStatement","src":"14700:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14626:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14638:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14649:4:31","type":""}],"src":"14556:222:31"},{"body":{"nodeType":"YulBlock","src":"14824:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"14878:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14887:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14890:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14880:6:31"},"nodeType":"YulFunctionCall","src":"14880:12:31"},"nodeType":"YulExpressionStatement","src":"14880:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14847:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14869:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14854:14:31"},"nodeType":"YulFunctionCall","src":"14854:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14844:2:31"},"nodeType":"YulFunctionCall","src":"14844:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14837:6:31"},"nodeType":"YulFunctionCall","src":"14837:40:31"},"nodeType":"YulIf","src":"14834:60:31"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14817:5:31","type":""}],"src":"14784:116:31"},{"body":{"nodeType":"YulBlock","src":"14955:84:31","statements":[{"nodeType":"YulAssignment","src":"14965:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14987:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14974:12:31"},"nodeType":"YulFunctionCall","src":"14974:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14965:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15027:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15003:23:31"},"nodeType":"YulFunctionCall","src":"15003:30:31"},"nodeType":"YulExpressionStatement","src":"15003:30:31"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14933:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"14941:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14949:5:31","type":""}],"src":"14906:133:31"},{"body":{"nodeType":"YulBlock","src":"15125:388:31","statements":[{"body":{"nodeType":"YulBlock","src":"15171:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15173:77:31"},"nodeType":"YulFunctionCall","src":"15173:79:31"},"nodeType":"YulExpressionStatement","src":"15173:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15146:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"15155:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15142:3:31"},"nodeType":"YulFunctionCall","src":"15142:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"15167:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15138:3:31"},"nodeType":"YulFunctionCall","src":"15138:32:31"},"nodeType":"YulIf","src":"15135:119:31"},{"nodeType":"YulBlock","src":"15264:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15279:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15293:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15283:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15308:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15343:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15354:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15339:3:31"},"nodeType":"YulFunctionCall","src":"15339:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15363:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15318:20:31"},"nodeType":"YulFunctionCall","src":"15318:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15308:6:31"}]}]},{"nodeType":"YulBlock","src":"15391:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15406:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15420:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15410:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15436:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15468:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15479:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15464:3:31"},"nodeType":"YulFunctionCall","src":"15464:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15488:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"15446:17:31"},"nodeType":"YulFunctionCall","src":"15446:50:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15436:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15087:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15098:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15110:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15118:6:31","type":""}],"src":"15045:468:31"},{"body":{"nodeType":"YulBlock","src":"15602:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"15648:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15650:77:31"},"nodeType":"YulFunctionCall","src":"15650:79:31"},"nodeType":"YulExpressionStatement","src":"15650:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15623:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"15632:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15619:3:31"},"nodeType":"YulFunctionCall","src":"15619:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"15644:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15615:3:31"},"nodeType":"YulFunctionCall","src":"15615:32:31"},"nodeType":"YulIf","src":"15612:119:31"},{"nodeType":"YulBlock","src":"15741:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15756:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15770:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15760:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15785:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15831:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15816:3:31"},"nodeType":"YulFunctionCall","src":"15816:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15840:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15795:20:31"},"nodeType":"YulFunctionCall","src":"15795:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15785:6:31"}]}]},{"nodeType":"YulBlock","src":"15868:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15883:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15897:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15887:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15913:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15959:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:31"},"nodeType":"YulFunctionCall","src":"15944:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15968:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15923:20:31"},"nodeType":"YulFunctionCall","src":"15923:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15913:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15564:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15575:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15587:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15595:6:31","type":""}],"src":"15519:474:31"},{"body":{"nodeType":"YulBlock","src":"16142:946:31","statements":[{"body":{"nodeType":"YulBlock","src":"16189:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16191:77:31"},"nodeType":"YulFunctionCall","src":"16191:79:31"},"nodeType":"YulExpressionStatement","src":"16191:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16163:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"16172:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16159:3:31"},"nodeType":"YulFunctionCall","src":"16159:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"16184:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16155:3:31"},"nodeType":"YulFunctionCall","src":"16155:33:31"},"nodeType":"YulIf","src":"16152:120:31"},{"nodeType":"YulBlock","src":"16282:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16297:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16311:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16301:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16326:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16361:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16372:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:31"},"nodeType":"YulFunctionCall","src":"16357:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16381:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16336:20:31"},"nodeType":"YulFunctionCall","src":"16336:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16326:6:31"}]}]},{"nodeType":"YulBlock","src":"16409:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16424:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16438:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16428:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16454:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16489:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16500:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16485:3:31"},"nodeType":"YulFunctionCall","src":"16485:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16509:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16464:20:31"},"nodeType":"YulFunctionCall","src":"16464:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16454:6:31"}]}]},{"nodeType":"YulBlock","src":"16537:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16552:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16566:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16556:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16582:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16617:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16628:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16613:3:31"},"nodeType":"YulFunctionCall","src":"16613:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16637:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16592:20:31"},"nodeType":"YulFunctionCall","src":"16592:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16582:6:31"}]}]},{"nodeType":"YulBlock","src":"16665:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16680:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16694:2:31","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16684:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16710:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16745:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16756:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16741:3:31"},"nodeType":"YulFunctionCall","src":"16741:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16765:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16720:20:31"},"nodeType":"YulFunctionCall","src":"16720:53:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16710:6:31"}]}]},{"nodeType":"YulBlock","src":"16793:288:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16808:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16839:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16850:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16835:3:31"},"nodeType":"YulFunctionCall","src":"16835:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16822:12:31"},"nodeType":"YulFunctionCall","src":"16822:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16812:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"16902:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16904:77:31"},"nodeType":"YulFunctionCall","src":"16904:79:31"},"nodeType":"YulExpressionStatement","src":"16904:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16874:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"16882:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16871:2:31"},"nodeType":"YulFunctionCall","src":"16871:30:31"},"nodeType":"YulIf","src":"16868:117:31"},{"nodeType":"YulAssignment","src":"16999:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17043:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17054:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17039:3:31"},"nodeType":"YulFunctionCall","src":"17039:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17063:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17009:29:31"},"nodeType":"YulFunctionCall","src":"17009:62:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16999:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16080:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16091:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16103:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16111:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16119:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16127:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16135:6:31","type":""}],"src":"15999:1089:31"},{"body":{"nodeType":"YulBlock","src":"17160:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"17206:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17208:77:31"},"nodeType":"YulFunctionCall","src":"17208:79:31"},"nodeType":"YulExpressionStatement","src":"17208:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17181:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17190:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17177:3:31"},"nodeType":"YulFunctionCall","src":"17177:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"17202:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17173:3:31"},"nodeType":"YulFunctionCall","src":"17173:32:31"},"nodeType":"YulIf","src":"17170:119:31"},{"nodeType":"YulBlock","src":"17299:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17314:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17328:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17318:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17343:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17378:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17389:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17374:3:31"},"nodeType":"YulFunctionCall","src":"17374:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17398:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17353:20:31"},"nodeType":"YulFunctionCall","src":"17353:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17343:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17130:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17141:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17153:6:31","type":""}],"src":"17094:329:31"},{"body":{"nodeType":"YulBlock","src":"17461:28:31","statements":[{"nodeType":"YulAssignment","src":"17471:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"17478:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17471:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17447:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17457:3:31","type":""}],"src":"17429:60:31"},{"body":{"nodeType":"YulBlock","src":"17555:82:31","statements":[{"nodeType":"YulAssignment","src":"17565:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17623:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17605:17:31"},"nodeType":"YulFunctionCall","src":"17605:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"17596:8:31"},"nodeType":"YulFunctionCall","src":"17596:34:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17578:17:31"},"nodeType":"YulFunctionCall","src":"17578:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17565:9:31"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17535:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17545:9:31","type":""}],"src":"17495:142:31"},{"body":{"nodeType":"YulBlock","src":"17703:66:31","statements":[{"nodeType":"YulAssignment","src":"17713:50:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17757:5:31"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"17726:30:31"},"nodeType":"YulFunctionCall","src":"17726:37:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17713:9:31"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17683:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17693:9:31","type":""}],"src":"17643:126:31"},{"body":{"nodeType":"YulBlock","src":"17850:66:31","statements":[{"nodeType":"YulAssignment","src":"17860:50:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17904:5:31"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"17873:30:31"},"nodeType":"YulFunctionCall","src":"17873:37:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17860:9:31"}]}]},"name":"convert_t_contract$_IERC20_$1639_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17830:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17840:9:31","type":""}],"src":"17775:141:31"},{"body":{"nodeType":"YulBlock","src":"18002:81:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18019:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18070:5:31"}],"functionName":{"name":"convert_t_contract$_IERC20_$1639_to_t_address","nodeType":"YulIdentifier","src":"18024:45:31"},"nodeType":"YulFunctionCall","src":"18024:52:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18012:6:31"},"nodeType":"YulFunctionCall","src":"18012:65:31"},"nodeType":"YulExpressionStatement","src":"18012:65:31"}]},"name":"abi_encode_t_contract$_IERC20_$1639_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17990:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17997:3:31","type":""}],"src":"17922:161:31"},{"body":{"nodeType":"YulBlock","src":"18202:139:31","statements":[{"nodeType":"YulAssignment","src":"18212:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18224:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18235:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18220:3:31"},"nodeType":"YulFunctionCall","src":"18220:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18212:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18307:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18320:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18331:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18316:3:31"},"nodeType":"YulFunctionCall","src":"18316:17:31"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1639_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18248:58:31"},"nodeType":"YulFunctionCall","src":"18248:86:31"},"nodeType":"YulExpressionStatement","src":"18248:86:31"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1639__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18174:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18186:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18197:4:31","type":""}],"src":"18089:252:31"},{"body":{"nodeType":"YulBlock","src":"18375:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18392:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18395:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18385:6:31"},"nodeType":"YulFunctionCall","src":"18385:88:31"},"nodeType":"YulExpressionStatement","src":"18385:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18489:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18492:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18482:6:31"},"nodeType":"YulFunctionCall","src":"18482:15:31"},"nodeType":"YulExpressionStatement","src":"18482:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18513:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18516:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18506:6:31"},"nodeType":"YulFunctionCall","src":"18506:15:31"},"nodeType":"YulExpressionStatement","src":"18506:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18347:180:31"},{"body":{"nodeType":"YulBlock","src":"18584:269:31","statements":[{"nodeType":"YulAssignment","src":"18594:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18608:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"18614:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18604:3:31"},"nodeType":"YulFunctionCall","src":"18604:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18594:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"18625:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18655:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"18661:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18651:3:31"},"nodeType":"YulFunctionCall","src":"18651:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18629:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"18702:51:31","statements":[{"nodeType":"YulAssignment","src":"18716:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18730:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18738:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18726:3:31"},"nodeType":"YulFunctionCall","src":"18726:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18716:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18682:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18675:6:31"},"nodeType":"YulFunctionCall","src":"18675:26:31"},"nodeType":"YulIf","src":"18672:81:31"},{"body":{"nodeType":"YulBlock","src":"18805:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18819:16:31"},"nodeType":"YulFunctionCall","src":"18819:18:31"},"nodeType":"YulExpressionStatement","src":"18819:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18769:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18792:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18800:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18789:2:31"},"nodeType":"YulFunctionCall","src":"18789:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18766:2:31"},"nodeType":"YulFunctionCall","src":"18766:38:31"},"nodeType":"YulIf","src":"18763:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18568:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18577:6:31","type":""}],"src":"18533:320:31"},{"body":{"nodeType":"YulBlock","src":"18985:206:31","statements":[{"nodeType":"YulAssignment","src":"18995:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19007:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19018:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19003:3:31"},"nodeType":"YulFunctionCall","src":"19003:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18995:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19075:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19088:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19099:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19084:3:31"},"nodeType":"YulFunctionCall","src":"19084:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19031:43:31"},"nodeType":"YulFunctionCall","src":"19031:71:31"},"nodeType":"YulExpressionStatement","src":"19031:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19156:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19169:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19180:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19165:3:31"},"nodeType":"YulFunctionCall","src":"19165:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19112:43:31"},"nodeType":"YulFunctionCall","src":"19112:72:31"},"nodeType":"YulExpressionStatement","src":"19112:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18949:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18961:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18969:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18980:4:31","type":""}],"src":"18859:332:31"},{"body":{"nodeType":"YulBlock","src":"19323:206:31","statements":[{"nodeType":"YulAssignment","src":"19333:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19345:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19356:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19341:3:31"},"nodeType":"YulFunctionCall","src":"19341:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19333:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19413:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19426:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19437:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19422:3:31"},"nodeType":"YulFunctionCall","src":"19422:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19369:43:31"},"nodeType":"YulFunctionCall","src":"19369:71:31"},"nodeType":"YulExpressionStatement","src":"19369:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19494:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19507:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19518:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19503:3:31"},"nodeType":"YulFunctionCall","src":"19503:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19450:43:31"},"nodeType":"YulFunctionCall","src":"19450:72:31"},"nodeType":"YulExpressionStatement","src":"19450:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19287:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19299:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19307:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19318:4:31","type":""}],"src":"19197:332:31"},{"body":{"nodeType":"YulBlock","src":"19563:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19580:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19583:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19573:6:31"},"nodeType":"YulFunctionCall","src":"19573:88:31"},"nodeType":"YulExpressionStatement","src":"19573:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19677:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19680:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19670:6:31"},"nodeType":"YulFunctionCall","src":"19670:15:31"},"nodeType":"YulExpressionStatement","src":"19670:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19701:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19704:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19694:6:31"},"nodeType":"YulFunctionCall","src":"19694:15:31"},"nodeType":"YulExpressionStatement","src":"19694:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19535:180:31"},{"body":{"nodeType":"YulBlock","src":"19749:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19766:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19769:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19759:6:31"},"nodeType":"YulFunctionCall","src":"19759:88:31"},"nodeType":"YulExpressionStatement","src":"19759:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19863:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19866:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19856:6:31"},"nodeType":"YulFunctionCall","src":"19856:15:31"},"nodeType":"YulExpressionStatement","src":"19856:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19887:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19890:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19880:6:31"},"nodeType":"YulFunctionCall","src":"19880:15:31"},"nodeType":"YulExpressionStatement","src":"19880:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19721:180:31"},{"body":{"nodeType":"YulBlock","src":"19950:190:31","statements":[{"nodeType":"YulAssignment","src":"19960:33:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19987:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19969:17:31"},"nodeType":"YulFunctionCall","src":"19969:24:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19960:5:31"}]},{"body":{"nodeType":"YulBlock","src":"20083:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20085:16:31"},"nodeType":"YulFunctionCall","src":"20085:18:31"},"nodeType":"YulExpressionStatement","src":"20085:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20008:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"20015:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20005:2:31"},"nodeType":"YulFunctionCall","src":"20005:77:31"},"nodeType":"YulIf","src":"20002:103:31"},{"nodeType":"YulAssignment","src":"20114:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20125:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"20132:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20121:3:31"},"nodeType":"YulFunctionCall","src":"20121:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20114:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19936:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19946:3:31","type":""}],"src":"19907:233:31"},{"body":{"nodeType":"YulBlock","src":"20328:371:31","statements":[{"nodeType":"YulAssignment","src":"20338:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20350:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20361:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20346:3:31"},"nodeType":"YulFunctionCall","src":"20346:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20338:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20419:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20432:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20443:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20428:3:31"},"nodeType":"YulFunctionCall","src":"20428:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20375:43:31"},"nodeType":"YulFunctionCall","src":"20375:71:31"},"nodeType":"YulExpressionStatement","src":"20375:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20500:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20513:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20524:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20509:3:31"},"nodeType":"YulFunctionCall","src":"20509:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20456:43:31"},"nodeType":"YulFunctionCall","src":"20456:72:31"},"nodeType":"YulExpressionStatement","src":"20456:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20582:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20595:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20606:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20591:3:31"},"nodeType":"YulFunctionCall","src":"20591:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20538:43:31"},"nodeType":"YulFunctionCall","src":"20538:72:31"},"nodeType":"YulExpressionStatement","src":"20538:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20664:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20677:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20688:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20673:3:31"},"nodeType":"YulFunctionCall","src":"20673:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20620:43:31"},"nodeType":"YulFunctionCall","src":"20620:72:31"},"nodeType":"YulExpressionStatement","src":"20620:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20276:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20288:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20296:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20304:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20312:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20323:4:31","type":""}],"src":"20146:553:31"},{"body":{"nodeType":"YulBlock","src":"20749:147:31","statements":[{"nodeType":"YulAssignment","src":"20759:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20782:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20764:17:31"},"nodeType":"YulFunctionCall","src":"20764:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20759:1:31"}]},{"nodeType":"YulAssignment","src":"20793:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20816:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20798:17:31"},"nodeType":"YulFunctionCall","src":"20798:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20793:1:31"}]},{"nodeType":"YulAssignment","src":"20827:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20838:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"20841:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20834:3:31"},"nodeType":"YulFunctionCall","src":"20834:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20827:3:31"}]},{"body":{"nodeType":"YulBlock","src":"20867:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20869:16:31"},"nodeType":"YulFunctionCall","src":"20869:18:31"},"nodeType":"YulExpressionStatement","src":"20869:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20859:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"20862:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20856:2:31"},"nodeType":"YulFunctionCall","src":"20856:10:31"},"nodeType":"YulIf","src":"20853:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20736:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"20739:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20745:3:31","type":""}],"src":"20705:191:31"},{"body":{"nodeType":"YulBlock","src":"21128:408:31","statements":[{"nodeType":"YulAssignment","src":"21138:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21150:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21161:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21146:3:31"},"nodeType":"YulFunctionCall","src":"21146:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21138:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21185:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21196:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21181:3:31"},"nodeType":"YulFunctionCall","src":"21181:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21204:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"21210:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21200:3:31"},"nodeType":"YulFunctionCall","src":"21200:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21174:6:31"},"nodeType":"YulFunctionCall","src":"21174:47:31"},"nodeType":"YulExpressionStatement","src":"21174:47:31"},{"nodeType":"YulAssignment","src":"21230:116:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21332:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"21341:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21238:93:31"},"nodeType":"YulFunctionCall","src":"21238:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21230:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21367:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21378:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21363:3:31"},"nodeType":"YulFunctionCall","src":"21363:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21387:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"21393:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21383:3:31"},"nodeType":"YulFunctionCall","src":"21383:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21356:6:31"},"nodeType":"YulFunctionCall","src":"21356:48:31"},"nodeType":"YulExpressionStatement","src":"21356:48:31"},{"nodeType":"YulAssignment","src":"21413:116:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21515:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"21524:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21421:93:31"},"nodeType":"YulFunctionCall","src":"21421:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21413:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21092:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21104:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21112:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21123:4:31","type":""}],"src":"20902:634:31"},{"body":{"nodeType":"YulBlock","src":"21600:40:31","statements":[{"nodeType":"YulAssignment","src":"21611:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21627:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21621:5:31"},"nodeType":"YulFunctionCall","src":"21621:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21611:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21583:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21593:6:31","type":""}],"src":"21542:98:31"},{"body":{"nodeType":"YulBlock","src":"21741:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21758:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"21763:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21751:6:31"},"nodeType":"YulFunctionCall","src":"21751:19:31"},"nodeType":"YulExpressionStatement","src":"21751:19:31"},{"nodeType":"YulAssignment","src":"21779:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21798:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"21803:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21794:3:31"},"nodeType":"YulFunctionCall","src":"21794:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21779:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21713:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"21718:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21729:11:31","type":""}],"src":"21646:168:31"},{"body":{"nodeType":"YulBlock","src":"21910:283:31","statements":[{"nodeType":"YulVariableDeclaration","src":"21920:52:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21966:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21934:31:31"},"nodeType":"YulFunctionCall","src":"21934:38:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21924:6:31","type":""}]},{"nodeType":"YulAssignment","src":"21981:77:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22046:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"22051:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21988:57:31"},"nodeType":"YulFunctionCall","src":"21988:70:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21981:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22106:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"22113:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:31"},"nodeType":"YulFunctionCall","src":"22102:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"22120:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"22125:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22067:34:31"},"nodeType":"YulFunctionCall","src":"22067:65:31"},"nodeType":"YulExpressionStatement","src":"22067:65:31"},{"nodeType":"YulAssignment","src":"22141:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22152:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22179:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22157:21:31"},"nodeType":"YulFunctionCall","src":"22157:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22148:3:31"},"nodeType":"YulFunctionCall","src":"22148:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22141:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21891:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21898:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21906:3:31","type":""}],"src":"21820:373:31"},{"body":{"nodeType":"YulBlock","src":"22427:523:31","statements":[{"nodeType":"YulAssignment","src":"22437:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22449:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22460:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22445:3:31"},"nodeType":"YulFunctionCall","src":"22445:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22437:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22518:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22531:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22542:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22527:3:31"},"nodeType":"YulFunctionCall","src":"22527:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22474:43:31"},"nodeType":"YulFunctionCall","src":"22474:71:31"},"nodeType":"YulExpressionStatement","src":"22474:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22599:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22612:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22623:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22608:3:31"},"nodeType":"YulFunctionCall","src":"22608:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22555:43:31"},"nodeType":"YulFunctionCall","src":"22555:72:31"},"nodeType":"YulExpressionStatement","src":"22555:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22681:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22694:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22705:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22690:3:31"},"nodeType":"YulFunctionCall","src":"22690:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22637:43:31"},"nodeType":"YulFunctionCall","src":"22637:72:31"},"nodeType":"YulExpressionStatement","src":"22637:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22763:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22776:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22787:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22772:3:31"},"nodeType":"YulFunctionCall","src":"22772:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22719:43:31"},"nodeType":"YulFunctionCall","src":"22719:72:31"},"nodeType":"YulExpressionStatement","src":"22719:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22812:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22823:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22808:3:31"},"nodeType":"YulFunctionCall","src":"22808:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22833:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"22839:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22829:3:31"},"nodeType":"YulFunctionCall","src":"22829:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22801:6:31"},"nodeType":"YulFunctionCall","src":"22801:49:31"},"nodeType":"YulExpressionStatement","src":"22801:49:31"},{"nodeType":"YulAssignment","src":"22859:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22929:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"22938:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22867:61:31"},"nodeType":"YulFunctionCall","src":"22867:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22859:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22367:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22379:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22387:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22395:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22403:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22411:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22422:4:31","type":""}],"src":"22199:751:31"},{"body":{"nodeType":"YulBlock","src":"23018:79:31","statements":[{"nodeType":"YulAssignment","src":"23028:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23043:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23037:5:31"},"nodeType":"YulFunctionCall","src":"23037:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23028:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23085:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"23059:25:31"},"nodeType":"YulFunctionCall","src":"23059:32:31"},"nodeType":"YulExpressionStatement","src":"23059:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22996:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"23004:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23012:5:31","type":""}],"src":"22956:141:31"},{"body":{"nodeType":"YulBlock","src":"23179:273:31","statements":[{"body":{"nodeType":"YulBlock","src":"23225:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23227:77:31"},"nodeType":"YulFunctionCall","src":"23227:79:31"},"nodeType":"YulExpressionStatement","src":"23227:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23200:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"23209:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23196:3:31"},"nodeType":"YulFunctionCall","src":"23196:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"23221:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23192:3:31"},"nodeType":"YulFunctionCall","src":"23192:32:31"},"nodeType":"YulIf","src":"23189:119:31"},{"nodeType":"YulBlock","src":"23318:127:31","statements":[{"nodeType":"YulVariableDeclaration","src":"23333:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"23347:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23337:6:31","type":""}]},{"nodeType":"YulAssignment","src":"23362:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23407:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"23418:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23403:3:31"},"nodeType":"YulFunctionCall","src":"23403:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23427:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23372:30:31"},"nodeType":"YulFunctionCall","src":"23372:63:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23362:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23149:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23160:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23172:6:31","type":""}],"src":"23103:349:31"},{"body":{"nodeType":"YulBlock","src":"23786:725:31","statements":[{"nodeType":"YulAssignment","src":"23796:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23808:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23819:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23804:3:31"},"nodeType":"YulFunctionCall","src":"23804:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23796:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23877:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23890:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23901:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23886:3:31"},"nodeType":"YulFunctionCall","src":"23886:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23833:43:31"},"nodeType":"YulFunctionCall","src":"23833:71:31"},"nodeType":"YulExpressionStatement","src":"23833:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23958:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23971:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23982:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23967:3:31"},"nodeType":"YulFunctionCall","src":"23967:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23914:43:31"},"nodeType":"YulFunctionCall","src":"23914:72:31"},"nodeType":"YulExpressionStatement","src":"23914:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24007:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24018:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24003:3:31"},"nodeType":"YulFunctionCall","src":"24003:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24027:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"24033:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24023:3:31"},"nodeType":"YulFunctionCall","src":"24023:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23996:6:31"},"nodeType":"YulFunctionCall","src":"23996:48:31"},"nodeType":"YulExpressionStatement","src":"23996:48:31"},{"nodeType":"YulAssignment","src":"24053:116:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24155:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"24164:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24061:93:31"},"nodeType":"YulFunctionCall","src":"24061:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24053:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24190:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24201:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24186:3:31"},"nodeType":"YulFunctionCall","src":"24186:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24210:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"24216:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24206:3:31"},"nodeType":"YulFunctionCall","src":"24206:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24179:6:31"},"nodeType":"YulFunctionCall","src":"24179:48:31"},"nodeType":"YulExpressionStatement","src":"24179:48:31"},{"nodeType":"YulAssignment","src":"24236:116:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24338:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"24347:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24244:93:31"},"nodeType":"YulFunctionCall","src":"24244:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24236:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24373:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24384:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24369:3:31"},"nodeType":"YulFunctionCall","src":"24369:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24394:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"24400:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24390:3:31"},"nodeType":"YulFunctionCall","src":"24390:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24362:6:31"},"nodeType":"YulFunctionCall","src":"24362:49:31"},"nodeType":"YulExpressionStatement","src":"24362:49:31"},{"nodeType":"YulAssignment","src":"24420:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24490:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"24499:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24428:61:31"},"nodeType":"YulFunctionCall","src":"24428:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24420:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23726:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23738:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23746:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23754:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23762:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23770:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23781:4:31","type":""}],"src":"23458:1053:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1639_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1639_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1639_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1639__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1639_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8420":[{"length":32,"start":2282}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063e985e9c511610066578063e985e9c51461029c578063f242432a146102cc578063f2fde38b146102e8578063f897a22b14610304576100ff565b80638da5cb5b146102265780639970ea8014610244578063a22cb46514610262578063e39eb1091461027e576100ff565b80634e1273f4116100d35780634e1273f4146101b05780635c975abb146101e05780637130dfc9146101fe578063715018a61461021c576100ff565b8062fdd58e1461010457806301ffc9a7146101345780630e89341c146101645780632eb2c2d614610194575b600080fd5b61011e60048036038101906101199190611706565b610322565b60405161012b9190611755565b60405180910390f35b61014e600480360381019061014991906117c8565b61037c565b60405161015b9190611810565b60405180910390f35b61017e6004803603810190610179919061182b565b61045e565b60405161018b91906118e8565b60405180910390f35b6101ae60048036038101906101a99190611b07565b6104f2565b005b6101ca60048036038101906101c59190611c99565b61059a565b6040516101d79190611dcf565b60405180910390f35b6101e86106a9565b6040516101f59190611810565b60405180910390f35b6102066106c0565b6040516102139190611755565b60405180910390f35b6102246106c6565b005b61022e6106da565b60405161023b9190611e00565b60405180910390f35b61024c610704565b6040516102599190611755565b60405180910390f35b61027c60048036038101906102779190611e47565b61070a565b005b610286610720565b6040516102939190611755565b60405180910390f35b6102b660048036038101906102b19190611e87565b610726565b6040516102c39190611810565b60405180910390f35b6102e660048036038101906102e19190611ec7565b6107ba565b005b61030260048036038101906102fd9190611f5e565b610862565b005b61030c6108e8565b6040516103199190611fea565b60405180910390f35b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045757506104568261090c565b5b9050919050565b60606002805461046d90612034565b80601f016020809104026020016040519081016040528092919081815260200182805461049990612034565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b50505050509050919050565b60006104fc610976565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610541575061053f8682610726565b155b156105855780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161057c929190612065565b60405180910390fd5b610592868686868661097e565b505050505050565b606081518351146105e657815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105dd92919061208e565b60405180910390fd5b6000835167ffffffffffffffff8111156106035761060261190f565b5b6040519080825280602002602001820160405280156106315781602001602082028036833780820191505090505b50905060005b845181101561069e5761066e6106568287610a7690919063ffffffff16565b6106698387610a8a90919063ffffffff16565b610322565b828281518110610681576106806120b7565b5b6020026020010181815250508061069790612115565b9050610637565b508091505092915050565b6000600560009054906101000a900460ff16905090565b60065481565b6106ce610a9e565b6106d86000610b25565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b61071c610715610976565b8383610beb565b5050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006107c4610976565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561080957506108078682610726565b155b1561084d5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610844929190612065565b60405180910390fd5b61085a8686868686610d5b565b505050505050565b61086a610a9e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108dc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d39190611e00565b60405180910390fd5b6108e581610b25565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f05760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e79190611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a625760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a599190611e00565b60405180910390fd5b610a6f8585858585610e66565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b610aa6610976565b73ffffffffffffffffffffffffffffffffffffffff16610ac46106da565b73ffffffffffffffffffffffffffffffffffffffff1614610b2357610ae7610976565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1a9190611e00565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5d5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c549190611e00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d4e9190611810565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcd5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dc49190611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e3f5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e369190611e00565b60405180910390fd5b600080610e4c8585610f18565b91509150610e5d8787848487610e66565b50505050505050565b610e7285858585610f48565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610f11576000610eb0610976565b90506001845103610f00576000610ed1600086610a8a90919063ffffffff16565b90506000610ee9600086610a8a90919063ffffffff16565b9050610ef98389898585896112f6565b5050610f0f565b610f0e8187878787876114aa565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610f9257815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610f8992919061208e565b60405180910390fd5b6000610f9c610976565b905060005b83518110156111b1576000610fbf8286610a8a90919063ffffffff16565b90506000610fd68386610a8a90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461110357600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110ab57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016110a2949392919061215d565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461119e578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461119691906121a2565b925050819055505b5050806111aa90612115565b9050610fa1565b5060018351036112705760006111d1600085610a8a90919063ffffffff16565b905060006111e9600085610a8a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161126192919061208e565b60405180910390a450506112ef565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516112e69291906121d6565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156114a2578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611357959493929190612262565b6020604051808303816000875af192505050801561139357506040513d601f19601f8201168201806040525081019061139091906122d1565b60015b611417573d80600081146113c3576040519150601f19603f3d011682016040523d82523d6000602084013e6113c8565b606091505b50600081510361140f57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114069190611e00565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114a057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114979190611e00565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611656578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161150b9594939291906122fe565b6020604051808303816000875af192505050801561154757506040513d601f19601f8201168201806040525081019061154491906122d1565b60015b6115cb573d8060008114611577576040519150601f19603f3d011682016040523d82523d6000602084013e61157c565b606091505b5060008151036115c357846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115ba9190611e00565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461165457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164b9190611e00565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061169d82611672565b9050919050565b6116ad81611692565b81146116b857600080fd5b50565b6000813590506116ca816116a4565b92915050565b6000819050919050565b6116e3816116d0565b81146116ee57600080fd5b50565b600081359050611700816116da565b92915050565b6000806040838503121561171d5761171c611668565b5b600061172b858286016116bb565b925050602061173c858286016116f1565b9150509250929050565b61174f816116d0565b82525050565b600060208201905061176a6000830184611746565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117a581611770565b81146117b057600080fd5b50565b6000813590506117c28161179c565b92915050565b6000602082840312156117de576117dd611668565b5b60006117ec848285016117b3565b91505092915050565b60008115159050919050565b61180a816117f5565b82525050565b60006020820190506118256000830184611801565b92915050565b60006020828403121561184157611840611668565b5b600061184f848285016116f1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611892578082015181840152602081019050611877565b60008484015250505050565b6000601f19601f8301169050919050565b60006118ba82611858565b6118c48185611863565b93506118d4818560208601611874565b6118dd8161189e565b840191505092915050565b6000602082019050818103600083015261190281846118af565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119478261189e565b810181811067ffffffffffffffff821117156119665761196561190f565b5b80604052505050565b600061197961165e565b9050611985828261193e565b919050565b600067ffffffffffffffff8211156119a5576119a461190f565b5b602082029050602081019050919050565b600080fd5b60006119ce6119c98461198a565b61196f565b905080838252602082019050602084028301858111156119f1576119f06119b6565b5b835b81811015611a1a5780611a0688826116f1565b8452602084019350506020810190506119f3565b5050509392505050565b600082601f830112611a3957611a3861190a565b5b8135611a498482602086016119bb565b91505092915050565b600080fd5b600067ffffffffffffffff821115611a7257611a7161190f565b5b611a7b8261189e565b9050602081019050919050565b82818337600083830152505050565b6000611aaa611aa584611a57565b61196f565b905082815260208101848484011115611ac657611ac5611a52565b5b611ad1848285611a88565b509392505050565b600082601f830112611aee57611aed61190a565b5b8135611afe848260208601611a97565b91505092915050565b600080600080600060a08688031215611b2357611b22611668565b5b6000611b31888289016116bb565b9550506020611b42888289016116bb565b945050604086013567ffffffffffffffff811115611b6357611b6261166d565b5b611b6f88828901611a24565b935050606086013567ffffffffffffffff811115611b9057611b8f61166d565b5b611b9c88828901611a24565b925050608086013567ffffffffffffffff811115611bbd57611bbc61166d565b5b611bc988828901611ad9565b9150509295509295909350565b600067ffffffffffffffff821115611bf157611bf061190f565b5b602082029050602081019050919050565b6000611c15611c1084611bd6565b61196f565b90508083825260208201905060208402830185811115611c3857611c376119b6565b5b835b81811015611c615780611c4d88826116bb565b845260208401935050602081019050611c3a565b5050509392505050565b600082601f830112611c8057611c7f61190a565b5b8135611c90848260208601611c02565b91505092915050565b60008060408385031215611cb057611caf611668565b5b600083013567ffffffffffffffff811115611cce57611ccd61166d565b5b611cda85828601611c6b565b925050602083013567ffffffffffffffff811115611cfb57611cfa61166d565b5b611d0785828601611a24565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611d46816116d0565b82525050565b6000611d588383611d3d565b60208301905092915050565b6000602082019050919050565b6000611d7c82611d11565b611d868185611d1c565b9350611d9183611d2d565b8060005b83811015611dc2578151611da98882611d4c565b9750611db483611d64565b925050600181019050611d95565b5085935050505092915050565b60006020820190508181036000830152611de98184611d71565b905092915050565b611dfa81611692565b82525050565b6000602082019050611e156000830184611df1565b92915050565b611e24816117f5565b8114611e2f57600080fd5b50565b600081359050611e4181611e1b565b92915050565b60008060408385031215611e5e57611e5d611668565b5b6000611e6c858286016116bb565b9250506020611e7d85828601611e32565b9150509250929050565b60008060408385031215611e9e57611e9d611668565b5b6000611eac858286016116bb565b9250506020611ebd858286016116bb565b9150509250929050565b600080600080600060a08688031215611ee357611ee2611668565b5b6000611ef1888289016116bb565b9550506020611f02888289016116bb565b9450506040611f13888289016116f1565b9350506060611f24888289016116f1565b925050608086013567ffffffffffffffff811115611f4557611f4461166d565b5b611f5188828901611ad9565b9150509295509295909350565b600060208284031215611f7457611f73611668565b5b6000611f82848285016116bb565b91505092915050565b6000819050919050565b6000611fb0611fab611fa684611672565b611f8b565b611672565b9050919050565b6000611fc282611f95565b9050919050565b6000611fd482611fb7565b9050919050565b611fe481611fc9565b82525050565b6000602082019050611fff6000830184611fdb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061204c57607f821691505b60208210810361205f5761205e612005565b5b50919050565b600060408201905061207a6000830185611df1565b6120876020830184611df1565b9392505050565b60006040820190506120a36000830185611746565b6120b06020830184611746565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612120826116d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612152576121516120e6565b5b600182019050919050565b60006080820190506121726000830187611df1565b61217f6020830186611746565b61218c6040830185611746565b6121996060830184611746565b95945050505050565b60006121ad826116d0565b91506121b8836116d0565b92508282019050808211156121d0576121cf6120e6565b5b92915050565b600060408201905081810360008301526121f08185611d71565b905081810360208301526122048184611d71565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006122348261220d565b61223e8185612218565b935061224e818560208601611874565b6122578161189e565b840191505092915050565b600060a0820190506122776000830188611df1565b6122846020830187611df1565b6122916040830186611746565b61229e6060830185611746565b81810360808301526122b08184612229565b90509695505050505050565b6000815190506122cb8161179c565b92915050565b6000602082840312156122e7576122e6611668565b5b60006122f5848285016122bc565b91505092915050565b600060a0820190506123136000830188611df1565b6123206020830187611df1565b81810360408301526123328186611d71565b905081810360608301526123468185611d71565b9050818103608083015261235a8184612229565b9050969550505050505056fea26469706673582212203413ffbe6de9554811384591b984a9ba333f0eed14e9fe12443038b058afed6c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF897A22B EQ PUSH2 0x304 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x9970EA80 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xE39EB109 EQ PUSH2 0x27E JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x7130DFC9 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21C JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x447 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x456 DUP3 PUSH2 0x90C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC PUSH2 0x976 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI POP PUSH2 0x53F DUP7 DUP3 PUSH2 0x726 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x585 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP3 SWAP2 SWAP1 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x97E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5E6 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DD SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH2 0x66E PUSH2 0x656 DUP3 DUP8 PUSH2 0xA76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x669 DUP4 DUP8 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x680 PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x697 SWAP1 PUSH2 0x2115 JUMP JUMPDEST SWAP1 POP PUSH2 0x637 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CE PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x6D8 PUSH1 0x0 PUSH2 0xB25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x71C PUSH2 0x715 PUSH2 0x976 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xBEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x809 JUMPI POP PUSH2 0x807 DUP7 DUP3 PUSH2 0x726 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x84D JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP3 SWAP2 SWAP1 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD5B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x86A PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP2 PUSH2 0xB25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA62 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0x976 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC4 PUSH2 0x6DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH2 0xAE7 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE4C DUP6 DUP6 PUSH2 0xF18 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE5D DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE72 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF11 JUMPI PUSH1 0x0 PUSH2 0xEB0 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xF00 JUMPI PUSH1 0x0 PUSH2 0xED1 PUSH1 0x0 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEE9 PUSH1 0x0 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEF9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x12F6 JUMP JUMPDEST POP POP PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xF0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF92 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9C PUSH2 0x976 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x0 PUSH2 0xFBF DUP3 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFD6 DUP4 DUP7 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10AB JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x119E JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x11AA SWAP1 PUSH2 0x2115 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA1 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1270 JUMPI PUSH1 0x0 PUSH2 0x11D1 PUSH1 0x0 DUP6 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E9 PUSH1 0x0 DUP6 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1261 SWAP3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x12EF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12E6 SWAP3 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14A2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1393 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1417 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x140F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14A0 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1497 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1656 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1547 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1544 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15CB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x157C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x15C3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1654 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP3 PUSH2 0x1672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1692 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CA DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E3 DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1700 DUP2 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173C DUP6 DUP3 DUP7 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A5 DUP2 PUSH2 0x1770 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C2 DUP2 PUSH2 0x179C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EC DUP5 DUP3 DUP6 ADD PUSH2 0x17B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP5 DUP3 DUP6 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1892 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BA DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x18C4 DUP2 DUP6 PUSH2 0x1863 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 DUP5 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1947 DUP3 PUSH2 0x189E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 PUSH2 0x165E JUMP JUMPDEST SWAP1 POP PUSH2 0x1985 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CE PUSH2 0x19C9 DUP5 PUSH2 0x198A JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x19B6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A1A JUMPI DUP1 PUSH2 0x1A06 DUP9 DUP3 PUSH2 0x16F1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A49 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH2 0x1A7B DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA PUSH2 0x1AA5 DUP5 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC5 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD1 DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B42 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1B6F DUP9 DUP3 DUP10 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1B9C DUP9 DUP3 DUP10 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1BC9 DUP9 DUP3 DUP10 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C15 PUSH2 0x1C10 DUP5 PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x19B6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C61 JUMPI DUP1 PUSH2 0x1C4D DUP9 DUP3 PUSH2 0x16BB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x190A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCE JUMPI PUSH2 0x1CCD PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1CDA DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1D07 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP4 DUP4 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D86 DUP2 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D91 DUP4 PUSH2 0x1D2D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC2 JUMPI DUP2 MLOAD PUSH2 0x1DA9 DUP9 DUP3 PUSH2 0x1D4C JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB4 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D95 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE9 DUP2 DUP5 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFA DUP2 PUSH2 0x1692 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E24 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x1E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5E JUMPI PUSH2 0x1E5D PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6C DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7D DUP6 DUP3 DUP7 ADD PUSH2 0x1E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E9E JUMPI PUSH2 0x1E9D PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EAC DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EBD DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE2 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF1 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F02 DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F13 DUP9 DUP3 DUP10 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F24 DUP9 DUP3 DUP10 ADD PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x166D JUMP JUMPDEST JUMPDEST PUSH2 0x1F51 DUP9 DUP3 DUP10 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F82 DUP5 DUP3 DUP6 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB0 PUSH2 0x1FAB PUSH2 0x1FA6 DUP5 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 DUP3 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE4 DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x207A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2087 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x20B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP3 PUSH2 0x16D0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AD DUP3 PUSH2 0x16D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B8 DUP4 PUSH2 0x16D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21D0 JUMPI PUSH2 0x21CF PUSH2 0x20E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F0 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2204 DUP2 DUP5 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x223E DUP2 DUP6 PUSH2 0x2218 JUMP JUMPDEST SWAP4 POP PUSH2 0x224E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x2257 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2277 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2284 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2291 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x229E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1746 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22B0 DUP2 DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22CB DUP2 PUSH2 0x179C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E7 JUMPI PUSH2 0x22E6 PUSH2 0x1668 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F5 DUP5 DUP3 DUP6 ADD PUSH2 0x22BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2313 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2320 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2332 DUP2 DUP7 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2346 DUP2 DUP6 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x235A DUP2 DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SGT SELFDESTRUCT 0xBE PUSH14 0xE9554811384591B984A9BA333F0E 0xED EQ 0xE9 INVALID SLT PREVRANDAO ADDRESS CODESIZE 0xB0 PC 0xAF 0xED PUSH13 0x64736F6C634300081400330000 ","sourceMap":"427:1795:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2082:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4012:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:84:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:32:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:37:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:144:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;877:35:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:157:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;568:32:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2245:132:3;2322:7;2348:9;:13;2358:2;2348:13;;;;;;;;;;;:22;2362:7;2348:22;;;;;;;;;;;;;;;;2341:29;;2245:132;;;;:::o;1378:305::-;1480:4;1530:26;1515:41;;;:11;:41;;;;:109;;;;1587:37;1572:52;;;:11;:52;;;;1515:109;:161;;;;1640:36;1664:11;1640:23;:36::i;:::-;1515:161;1496:180;;1378:305;;;:::o;2082:103::-;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;4012:429::-;4206:14;4223:12;:10;:12::i;:::-;4206:29;;4257:6;4249:14;;:4;:14;;;;:49;;;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4350:6;4358:4;4321:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:3;:10;2780:8;:15;2742:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2686:121;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;2970:68;2980:30;3008:1;2980:8;:27;;:30;;;;:::i;:::-;3012:25;3035:1;3012:3;:22;;:25;;;;:::i;:::-;2970:9;:68::i;:::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2932:3;;;;:::i;:::-;;;2891:158;;;;3066:13;3059:20;;;2534:552;;;;:::o;1850:84:13:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;838:32:28:-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;919:37:28:-;;;;:::o;3154:144:3:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3154:144;;:::o;877:35:28:-;;;;:::o;3365:157:3:-;3455:4;3478:18;:27;3497:7;3478:27;;;;;;;;;;;;;;;:37;3506:8;3478:37;;;;;;;;;;;;;;;;;;;;;;;;;3471:44;;3365:157;;;;:::o;3589:351::-;3712:14;3729:12;:10;:12::i;:::-;3712:29;;3763:6;3755:14;;:4;:14;;;;:49;;;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3856:6;3864:4;3827:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3751:129;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;:::-;3702:238;3589:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;568:32:28:-;;;:::o;763:146:22:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;9023:445:3:-;9230:1;9216:16;;:2;:16;;;9212:88;;9286:1;9255:34;;;;;;;;;;;:::i;:::-;;;;;;;;9212:88;9329:1;9313:18;;:4;:18;;;9309:88;;9383:1;9354:32;;;;;;;;;;;:::i;:::-;;;;;;;;9309:88;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;16128:197:9:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13276:315:3:-;13403:1;13383:22;;:8;:22;;;13379:94;;13459:1;13428:34;;;;;;;;;;;:::i;:::-;;;;;;;;13379:94;13520:8;13482:18;:25;13501:5;13482:25;;;;;;;;;;;;;;;:35;13508:8;13482:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13565:8;13543:41;;13558:5;13543:41;;;13575:8;13543:41;;;;;;:::i;:::-;;;;;;;;13276:315;;;:::o;8159:463::-;8295:1;8281:16;;:2;:16;;;8277:88;;8351:1;8320:34;;;;;;;;;;;:::i;:::-;;;;;;;;8277:88;8394:1;8378:18;;:4;:18;;;8374:88;;8448:1;8419:32;;;;;;;;;;;:::i;:::-;;;;;;;;8374:88;8472:20;8494:23;8521:29;8540:2;8544:5;8521:18;:29::i;:::-;8471:79;;;;8560:55;8587:4;8593:2;8597:3;8602:6;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;:12::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;13707:822::-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;:12::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;998:959:7:-;1214:1;1197:2;:14;;;:18;1193:758;;;1252:2;1235:38;;;1274:8;1284:4;1290:2;1294:5;1301:4;1235:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:1;1605:6;:13;:18;1601:326;;1748:2;1710:41;;;;;;;;;;;:::i;:::-;;;;;;;;1601:326;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1367:43;;;1355:55;;;:8;:55;;;;1351:189;;1518:2;1480:41;;;;;;;;;;;:::i;:::-;;;;;;;;1351:189;1307:247;1193:758;998:959;;;;;;:::o;2505:1026::-;2746:1;2729:2;:14;;;:18;2725:800;;;2784:2;2767:43;;;2811:8;2821:4;2827:3;2832:6;2840:4;2767:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3179:6;:13;:18;3175:326;;3322:2;3284:41;;;;;;;;;;;:::i;:::-;;;;;;;;3175:326;3453:6;3447:13;3438:6;3434:2;3430:15;3423:38;2763:752;2936:48;;;2924:60;;;:8;:60;;;;2920:194;;3092:2;3054:41;;;;;;;;;;;:::i;:::-;;;;;;;;2920:194;2846:282;2725:800;2505:1026;;;;;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:118::-;14519:24;14537:5;14519:24;:::i;:::-;14514:3;14507:37;14432:118;;:::o;14556:222::-;14649:4;14687:2;14676:9;14672:18;14664:26;;14700:71;14768:1;14757:9;14753:17;14744:6;14700:71;:::i;:::-;14556:222;;;;:::o;14784:116::-;14854:21;14869:5;14854:21;:::i;:::-;14847:5;14844:32;14834:60;;14890:1;14887;14880:12;14834:60;14784:116;:::o;14906:133::-;14949:5;14987:6;14974:20;14965:29;;15003:30;15027:5;15003:30;:::i;:::-;14906:133;;;;:::o;15045:468::-;15110:6;15118;15167:2;15155:9;15146:7;15142:23;15138:32;15135:119;;;15173:79;;:::i;:::-;15135:119;15293:1;15318:53;15363:7;15354:6;15343:9;15339:22;15318:53;:::i;:::-;15308:63;;15264:117;15420:2;15446:50;15488:7;15479:6;15468:9;15464:22;15446:50;:::i;:::-;15436:60;;15391:115;15045:468;;;;;:::o;15519:474::-;15587:6;15595;15644:2;15632:9;15623:7;15619:23;15615:32;15612:119;;;15650:79;;:::i;:::-;15612:119;15770:1;15795:53;15840:7;15831:6;15820:9;15816:22;15795:53;:::i;:::-;15785:63;;15741:117;15897:2;15923:53;15968:7;15959:6;15948:9;15944:22;15923:53;:::i;:::-;15913:63;;15868:118;15519:474;;;;;:::o;15999:1089::-;16103:6;16111;16119;16127;16135;16184:3;16172:9;16163:7;16159:23;16155:33;16152:120;;;16191:79;;:::i;:::-;16152:120;16311:1;16336:53;16381:7;16372:6;16361:9;16357:22;16336:53;:::i;:::-;16326:63;;16282:117;16438:2;16464:53;16509:7;16500:6;16489:9;16485:22;16464:53;:::i;:::-;16454:63;;16409:118;16566:2;16592:53;16637:7;16628:6;16617:9;16613:22;16592:53;:::i;:::-;16582:63;;16537:118;16694:2;16720:53;16765:7;16756:6;16745:9;16741:22;16720:53;:::i;:::-;16710:63;;16665:118;16850:3;16839:9;16835:19;16822:33;16882:18;16874:6;16871:30;16868:117;;;16904:79;;:::i;:::-;16868:117;17009:62;17063:7;17054:6;17043:9;17039:22;17009:62;:::i;:::-;16999:72;;16793:288;15999:1089;;;;;;;;:::o;17094:329::-;17153:6;17202:2;17190:9;17181:7;17177:23;17173:32;17170:119;;;17208:79;;:::i;:::-;17170:119;17328:1;17353:53;17398:7;17389:6;17378:9;17374:22;17353:53;:::i;:::-;17343:63;;17299:117;17094:329;;;;:::o;17429:60::-;17457:3;17478:5;17471:12;;17429:60;;;:::o;17495:142::-;17545:9;17578:53;17596:34;17605:24;17623:5;17605:24;:::i;:::-;17596:34;:::i;:::-;17578:53;:::i;:::-;17565:66;;17495:142;;;:::o;17643:126::-;17693:9;17726:37;17757:5;17726:37;:::i;:::-;17713:50;;17643:126;;;:::o;17775:141::-;17840:9;17873:37;17904:5;17873:37;:::i;:::-;17860:50;;17775:141;;;:::o;17922:161::-;18024:52;18070:5;18024:52;:::i;:::-;18019:3;18012:65;17922:161;;:::o;18089:252::-;18197:4;18235:2;18224:9;18220:18;18212:26;;18248:86;18331:1;18320:9;18316:17;18307:6;18248:86;:::i;:::-;18089:252;;;;:::o;18347:180::-;18395:77;18392:1;18385:88;18492:4;18489:1;18482:15;18516:4;18513:1;18506:15;18533:320;18577:6;18614:1;18608:4;18604:12;18594:22;;18661:1;18655:4;18651:12;18682:18;18672:81;;18738:4;18730:6;18726:17;18716:27;;18672:81;18800:2;18792:6;18789:14;18769:18;18766:38;18763:84;;18819:18;;:::i;:::-;18763:84;18584:269;18533:320;;;:::o;18859:332::-;18980:4;19018:2;19007:9;19003:18;18995:26;;19031:71;19099:1;19088:9;19084:17;19075:6;19031:71;:::i;:::-;19112:72;19180:2;19169:9;19165:18;19156:6;19112:72;:::i;:::-;18859:332;;;;;:::o;19197:::-;19318:4;19356:2;19345:9;19341:18;19333:26;;19369:71;19437:1;19426:9;19422:17;19413:6;19369:71;:::i;:::-;19450:72;19518:2;19507:9;19503:18;19494:6;19450:72;:::i;:::-;19197:332;;;;;:::o;19535:180::-;19583:77;19580:1;19573:88;19680:4;19677:1;19670:15;19704:4;19701:1;19694:15;19721:180;19769:77;19766:1;19759:88;19866:4;19863:1;19856:15;19890:4;19887:1;19880:15;19907:233;19946:3;19969:24;19987:5;19969:24;:::i;:::-;19960:33;;20015:66;20008:5;20005:77;20002:103;;20085:18;;:::i;:::-;20002:103;20132:1;20125:5;20121:13;20114:20;;19907:233;;;:::o;20146:553::-;20323:4;20361:3;20350:9;20346:19;20338:27;;20375:71;20443:1;20432:9;20428:17;20419:6;20375:71;:::i;:::-;20456:72;20524:2;20513:9;20509:18;20500:6;20456:72;:::i;:::-;20538;20606:2;20595:9;20591:18;20582:6;20538:72;:::i;:::-;20620;20688:2;20677:9;20673:18;20664:6;20620:72;:::i;:::-;20146:553;;;;;;;:::o;20705:191::-;20745:3;20764:20;20782:1;20764:20;:::i;:::-;20759:25;;20798:20;20816:1;20798:20;:::i;:::-;20793:25;;20841:1;20838;20834:9;20827:16;;20862:3;20859:1;20856:10;20853:36;;;20869:18;;:::i;:::-;20853:36;20705:191;;;;:::o;20902:634::-;21123:4;21161:2;21150:9;21146:18;21138:26;;21210:9;21204:4;21200:20;21196:1;21185:9;21181:17;21174:47;21238:108;21341:4;21332:6;21238:108;:::i;:::-;21230:116;;21393:9;21387:4;21383:20;21378:2;21367:9;21363:18;21356:48;21421:108;21524:4;21515:6;21421:108;:::i;:::-;21413:116;;20902:634;;;;;:::o;21542:98::-;21593:6;21627:5;21621:12;21611:22;;21542:98;;;:::o;21646:168::-;21729:11;21763:6;21758:3;21751:19;21803:4;21798:3;21794:14;21779:29;;21646:168;;;;:::o;21820:373::-;21906:3;21934:38;21966:5;21934:38;:::i;:::-;21988:70;22051:6;22046:3;21988:70;:::i;:::-;21981:77;;22067:65;22125:6;22120:3;22113:4;22106:5;22102:16;22067:65;:::i;:::-;22157:29;22179:6;22157:29;:::i;:::-;22152:3;22148:39;22141:46;;21910:283;21820:373;;;;:::o;22199:751::-;22422:4;22460:3;22449:9;22445:19;22437:27;;22474:71;22542:1;22531:9;22527:17;22518:6;22474:71;:::i;:::-;22555:72;22623:2;22612:9;22608:18;22599:6;22555:72;:::i;:::-;22637;22705:2;22694:9;22690:18;22681:6;22637:72;:::i;:::-;22719;22787:2;22776:9;22772:18;22763:6;22719:72;:::i;:::-;22839:9;22833:4;22829:20;22823:3;22812:9;22808:19;22801:49;22867:76;22938:4;22929:6;22867:76;:::i;:::-;22859:84;;22199:751;;;;;;;;:::o;22956:141::-;23012:5;23043:6;23037:13;23028:22;;23059:32;23085:5;23059:32;:::i;:::-;22956:141;;;;:::o;23103:349::-;23172:6;23221:2;23209:9;23200:7;23196:23;23192:32;23189:119;;;23227:79;;:::i;:::-;23189:119;23347:1;23372:63;23427:7;23418:6;23407:9;23403:22;23372:63;:::i;:::-;23362:73;;23318:127;23103:349;;;;:::o;23458:1053::-;23781:4;23819:3;23808:9;23804:19;23796:27;;23833:71;23901:1;23890:9;23886:17;23877:6;23833:71;:::i;:::-;23914:72;23982:2;23971:9;23967:18;23958:6;23914:72;:::i;:::-;24033:9;24027:4;24023:20;24018:2;24007:9;24003:18;23996:48;24061:108;24164:4;24155:6;24061:108;:::i;:::-;24053:116;;24216:9;24210:4;24206:20;24201:2;24190:9;24186:18;24179:48;24244:108;24347:4;24338:6;24244:108;:::i;:::-;24236:116;;24400:9;24394:4;24390:20;24384:3;24373:9;24369:19;24362:49;24428:76;24499:4;24490:6;24428:76;:::i;:::-;24420:84;;23458:1053;;;;;;;;:::o"},"methodIdentifiers":{"MAX_MINTS_PER_WINDOW()":"e39eb109","MIN_TIME_BETWEEN_MINTS()":"9970ea80","RATE_LIMIT_WINDOW()":"7130dfc9","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","owner()":"8da5cb5b","paused()":"5c975abb","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c","usdToken()":"f897a22b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_MINTS_PER_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TIME_BETWEEN_MINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_LIMIT_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EventTicketContract.sol\":\"EventTicketContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/EventTicketContract.sol\":{\"keccak256\":\"0xe064e0a3b34cc0fb79c1c415878c684a5d2a3d4f9738bd301984825674918266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bea37b039259209f578f9202bc1a27854255a136a75a9dc7da4fe00280eae29\",\"dweb:/ipfs/QmaU2cQhcPjrQqkeVbBadmvwt6ivw3Tzme8aKmTxCdTZNc\"]},\"contracts/libraries/EventLib.sol\":{\"keccak256\":\"0xb8695ae212183f1e42002e1683994554903da7e4ce81c116748c688ad2783596\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://531fdd957a94659adb4203dbfa08ecc9dc3f09335cd6374203d96a47dd184ad6\",\"dweb:/ipfs/QmSCXjNEmJRxpDkm6aGw9eE8qU7Z72eTvEa7rCSJPnXTJy\"]},\"contracts/libraries/EventStructs.sol\":{\"keccak256\":\"0x3b71057dbfd24da16631d07bd2069ff86bd690daa97b384b4350632e18de35f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb9af4a8cfed4e6ccfe438c4366439dedcc0ac0405e5a823d92daf1a8693ac2\",\"dweb:/ipfs/QmTfUg9YNrzU3daaeNuyF7Q6mD1usFZggq1dPjQX3dXnyK\"]}},\"version\":1}"}},"contracts/libraries/EventLib.sol":{"EventLib":{"abi":[{"inputs":[],"name":"EventAlreadyExists","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[],"name":"InvalidQuantity","type":"error"},{"inputs":[],"name":"InvalidTierLength","type":"error"},{"inputs":[],"name":"UnauthorizedAccess","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb47a45177cb16f693b2315e44afe2d21aeecd2283e286b761f900759b5f24e664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SELFBALANCE LOG4 MLOAD PUSH24 0xCB16F693B2315E44AFE2D21AEECD2283E286B761F900759B PUSH0 0x24 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"93:783:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb47a45177cb16f693b2315e44afe2d21aeecd2283e286b761f900759b5f24e664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SELFBALANCE LOG4 MLOAD PUSH24 0xCB16F693B2315E44AFE2D21AEECD2283E286B761F900759B PUSH0 0x24 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"93:783:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EventAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTierLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedAccess\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/EventLib.sol\":\"EventLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/EventLib.sol\":{\"keccak256\":\"0xb8695ae212183f1e42002e1683994554903da7e4ce81c116748c688ad2783596\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://531fdd957a94659adb4203dbfa08ecc9dc3f09335cd6374203d96a47dd184ad6\",\"dweb:/ipfs/QmSCXjNEmJRxpDkm6aGw9eE8qU7Z72eTvEa7rCSJPnXTJy\"]},\"contracts/libraries/EventStructs.sol\":{\"keccak256\":\"0x3b71057dbfd24da16631d07bd2069ff86bd690daa97b384b4350632e18de35f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb9af4a8cfed4e6ccfe438c4366439dedcc0ac0405e5a823d92daf1a8693ac2\",\"dweb:/ipfs/QmTfUg9YNrzU3daaeNuyF7Q6mD1usFZggq1dPjQX3dXnyK\"]}},\"version\":1}"}},"contracts/libraries/EventStructs.sol":{"EventStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203330c3bd3bde4181c46b37361fde96eb92b2b1573565a5a88b719bed3b83013a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER ADDRESS 0xC3 0xBD EXTCODESIZE 0xDE COINBASE DUP2 0xC4 PUSH12 0x37361FDE96EB92B2B1573565 0xA5 0xA8 DUP12 PUSH18 0x9BED3B83013A64736F6C6343000814003300 ","sourceMap":"61:544:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203330c3bd3bde4181c46b37361fde96eb92b2b1573565a5a88b719bed3b83013a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER ADDRESS 0xC3 0xBD EXTCODESIZE 0xDE COINBASE DUP2 0xC4 PUSH12 0x37361FDE96EB92B2B1573565 0xA5 0xA8 DUP12 PUSH18 0x9BED3B83013A64736F6C6343000814003300 ","sourceMap":"61:544:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/EventStructs.sol\":\"EventStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/EventStructs.sol\":{\"keccak256\":\"0x3b71057dbfd24da16631d07bd2069ff86bd690daa97b384b4350632e18de35f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb9af4a8cfed4e6ccfe438c4366439dedcc0ac0405e5a823d92daf1a8693ac2\",\"dweb:/ipfs/QmTfUg9YNrzU3daaeNuyF7Q6mD1usFZggq1dPjQX3dXnyK\"]}},\"version\":1}"}}}}}