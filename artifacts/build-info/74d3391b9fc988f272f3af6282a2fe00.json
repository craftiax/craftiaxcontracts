{"id":"74d3391b9fc988f272f3af6282a2fe00","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/CNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\ncontract CraftiaxNFT is \r\n    ERC721URIStorage, \r\n    Ownable, \r\n    ReentrancyGuard, \r\n    Pausable,\r\n    EIP712 \r\n{\r\n    using ECDSA for bytes32;\r\n\r\n    uint256 private _nextTokenId;\r\n    \r\n    // Events\r\n    event TokenMinted(address indexed to, uint256 indexed tokenId, string uri);\r\n    event BaseURIChanged(string newBaseURI);\r\n    event TokenBurned(address indexed burner, uint256 indexed tokenId);\r\n    \r\n    // New events\r\n    event ContractPaused(address indexed operator, uint256 timestamp);\r\n    event ContractUnpaused(address indexed operator, uint256 timestamp);\r\n    event VerifierUpdated(address indexed oldVerifier, address indexed newVerifier);\r\n    event NonceInvalidated(address indexed user, uint256 nonce);\r\n    event BatchMintCompleted(uint256 startTokenId, uint256 endTokenId, address indexed minter);\r\n    \r\n    // URI related storage\r\n    string private _baseTokenURI;\r\n    mapping(uint256 => bool) private _burnedTokenIds;\r\n\r\n    bytes32 private constant MINT_TYPEHASH = keccak256(\"SafeMint(address to,string uri,uint256 nonce,uint256 deadline)\");\r\n    mapping(address => uint256) private _nonces;\r\n    address private _verifier;\r\n\r\n    uint256 private constant MAX_SUPPLY = 1;\r\n\r\n    constructor(\r\n        address initialOwner,\r\n        string memory baseURI,\r\n        address verifier\r\n    ) ERC721(\"CraftiaxNFT\", \"CNFT\") \r\n      Ownable(initialOwner) \r\n      EIP712(\"CraftiaxNFT\", \"1\") \r\n    {\r\n        _baseTokenURI = baseURI;\r\n        _verifier = verifier;\r\n    }\r\n\r\n\r\n\r\n\r\n    function safeMint(\r\n        address to,\r\n        string memory uri,\r\n        uint256 deadline,\r\n        bytes memory signature\r\n    ) \r\n        public \r\n        nonReentrant \r\n        whenNotPaused \r\n    {\r\n        require(_nextTokenId < MAX_SUPPLY, \"Max supply reached\");\r\n        require(block.timestamp <= deadline, \"Signature expired\");\r\n        require(to != address(0), \"Invalid recipient address\");\r\n        require(bytes(uri).length > 0, \"URI cannot be empty\");\r\n\r\n        // Verify signature\r\n        bytes32 structHash = keccak256(abi.encode(\r\n            MINT_TYPEHASH,\r\n            to,\r\n            keccak256(bytes(uri)),\r\n            _nonces[to]++,\r\n            deadline\r\n        ));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n        address signer = ECDSA.recover(hash, signature);\r\n        require(signer == _verifier, \"Invalid signature\");\r\n\r\n        uint256 tokenId = _nextTokenId++;\r\n        require(!_burnedTokenIds[tokenId], \"Token ID was burned\");\r\n        \r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n        \r\n        emit TokenMinted(to, tokenId, uri);\r\n    }\r\n\r\n    function setBaseURI(string memory newBaseURI) external onlyOwner {\r\n        require(bytes(newBaseURI).length > 0, \"Base URI cannot be empty\");\r\n        _baseTokenURI = newBaseURI;\r\n        emit BaseURIChanged(newBaseURI);\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n        emit ContractPaused(_msgSender(), block.timestamp);\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n        emit ContractUnpaused(_msgSender(), block.timestamp);\r\n    }\r\n\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity\r\n    function tokenURI(uint256 tokenId) \r\n        public \r\n        view \r\n        override(ERC721URIStorage) \r\n        returns (string memory) \r\n    {\r\n        ownerOf(tokenId);\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function burn(uint256 tokenId) \r\n        external \r\n        nonReentrant \r\n        whenNotPaused \r\n    {\r\n        address owner = ownerOf(tokenId);\r\n        address spender = _msgSender();\r\n        \r\n        require(\r\n            spender == owner || \r\n            isApprovedForAll(owner, spender) ||\r\n            getApproved(tokenId) == spender,\r\n            \"Caller is not owner or approved\"\r\n        );\r\n        \r\n        // Remove token URI before burning\r\n        _setTokenURI(tokenId, \"\");\r\n        \r\n        // Mark token as burned\r\n        _burnedTokenIds[tokenId] = true;\r\n        \r\n        // Burn the token\r\n        _burn(tokenId);\r\n        \r\n        emit TokenBurned(spender, tokenId);\r\n    }\r\n\r\n    function nonces(address owner) public view returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    function updateVerifier(address newVerifier) external onlyOwner {\r\n        require(newVerifier != address(0), \"Invalid verifier address\");\r\n        address oldVerifier = _verifier;\r\n        _verifier = newVerifier;\r\n        emit VerifierUpdated(oldVerifier, newVerifier);\r\n    }\r\n\r\n    // Optional: Add a function to invalidate nonce if needed\r\n    function invalidateNonce(address user) external onlyOwner {\r\n        require(user != address(0), \"Invalid user address\");\r\n        uint256 currentNonce = _nonces[user];\r\n        _nonces[user] = type(uint256).max; // Effectively invalidates all pending signatures\r\n        emit NonceInvalidated(user, currentNonce);\r\n    }\r\n}\r\n\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1694],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1695,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1694],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3278]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":3279,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3278],"IERC4906":[175],"IERC721":[1415]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":205,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3278,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,1415,3278],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1314,1323,1332]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[200]},"id":201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":200,"linearizedBaseContracts":[200],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":180,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":199,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":183,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":199,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":185,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":199,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":199,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":199,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":199,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":199,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":200,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":201,"src":"133:605:3","usedErrors":[],"usedEvents":[180]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1415]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":202,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":205,"sourceUnit":1416,"src":"132:52:4","symbolAliases":[{"foreign":{"id":203,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"140:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[341],"IERC20Errors":[246],"IERC721Errors":[294]},"id":342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":216,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":216,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":216,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":216,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":221,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":221,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":226,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":226,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":235,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":235,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":235,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":235,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":240,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":240,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":245,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":245,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":342,"src":"280:1764:5","usedErrors":[216,221,226,235,240,245],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":294,"linearizedBaseContracts":[294],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":252,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":252,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":257,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":257,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":266,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":266,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":266,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":266,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":271,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":271,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":276,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":276,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":283,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":283,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":283,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":288,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":288,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":293,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":293,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":342,"src":"2190:2092:5","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":341,"linearizedBaseContracts":[341],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":306,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":311,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":311,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":316,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":316,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":323,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":323,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":323,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":328,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":328,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":333,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":333,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":340,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":340,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":340,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":342,"src":"4430:2107:5","usedErrors":[306,311,316,323,328,333,340],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1694],"ERC165":[3266],"ERC721":[1298],"ERC721Utils":[1664],"IERC165":[3278],"IERC721":[1415],"IERC721Errors":[294],"IERC721Metadata":[1587],"Strings":[2593]},"id":1299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1416,"src":"133:38:6","symbolAliases":[{"foreign":{"id":344,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"141:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1588,"src":"172:65:6","symbolAliases":[{"foreign":{"id":346,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"180:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1665,"src":"238:52:6","symbolAliases":[{"foreign":{"id":348,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"246:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1695,"src":"291:48:6","symbolAliases":[{"foreign":{"id":350,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"299:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":2594,"src":"340:48:6","symbolAliases":[{"foreign":{"id":352,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"348:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":3267,"src":"389:69:6","symbolAliases":[{"foreign":{"id":354,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"397:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":355,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"406:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":342,"src":"459:66:6","symbolAliases":[{"foreign":{"id":357,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"467:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":360,"name":"Context","nameLocations":["803:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"803:7:6"},"id":361,"nodeType":"InheritanceSpecifier","src":"803:7:6"},{"baseName":{"id":362,"name":"ERC165","nameLocations":["812:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"812:6:6"},"id":363,"nodeType":"InheritanceSpecifier","src":"812:6:6"},{"baseName":{"id":364,"name":"IERC721","nameLocations":["820:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"820:7:6"},"id":365,"nodeType":"InheritanceSpecifier","src":"820:7:6"},{"baseName":{"id":366,"name":"IERC721Metadata","nameLocations":["829:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1587,"src":"829:15:6"},"id":367,"nodeType":"InheritanceSpecifier","src":"829:15:6"},{"baseName":{"id":368,"name":"IERC721Errors","nameLocations":["846:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":294,"src":"846:13:6"},"id":369,"nodeType":"InheritanceSpecifier","src":"846:13:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"527:247:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1298,"linearizedBaseContracts":[1298,294,1587,1415,3266,3278,1694],"name":"ERC721","nameLocation":"793:6:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":372,"libraryName":{"id":370,"name":"Strings","nameLocations":["872:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"872:7:6"},"nodeType":"UsingForDirective","src":"866:26:6","typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":374,"mutability":"mutable","name":"_name","nameLocation":"931:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"916:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":376,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"963:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":375,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":380,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"992:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":379,"keyName":"tokenId","keyNameLocation":"1008:7:6","keyType":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":384,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:6","nodeType":"VariableDeclaration","scope":1298,"src":"1050:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":383,"keyName":"owner","keyNameLocation":"1066:5:6","keyType":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":388,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:6","nodeType":"VariableDeclaration","scope":1298,"src":"1108:59:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":387,"keyName":"tokenId","keyNameLocation":"1124:7:6","keyType":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":394,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:6","nodeType":"VariableDeclaration","scope":1298,"src":"1174:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":393,"keyName":"owner","keyNameLocation":"1190:5:6","keyType":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":392,"keyName":"operator","keyNameLocation":"1215:8:6","keyType":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":410,"nodeType":"Block","src":"1436:57:6","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":402,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1446:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1454:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":405,"nodeType":"ExpressionStatement","src":"1446:13:6"},{"expression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":406,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1469:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":407,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":409,"nodeType":"ExpressionStatement","src":"1469:17:6"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"1267:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":411,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"name_","nameLocation":"1406:5:6","nodeType":"VariableDeclaration","scope":411,"src":"1392:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:6","nodeType":"VariableDeclaration","scope":411,"src":"1413:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":398,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:6"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"1436:0:6"},"scope":1298,"src":"1380:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3265,3277],"body":{"id":441,"nodeType":"Block","src":"1668:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1697:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":424,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1717:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1415_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1415_$","typeString":"type(contract IERC721)"}],"id":423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1415","typeString":"type(contract IERC721)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":428,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1753:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":430,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1773:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1587_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1587_$","typeString":"type(contract IERC721Metadata)"}],"id":429,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1587","typeString":"type(contract IERC721Metadata)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":437,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1841:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":435,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1298_$","typeString":"type(contract super ERC721)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"1817:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":440,"nodeType":"Return","src":"1678:175:6"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"1499:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":442,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:6","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[{"id":416,"name":"ERC165","nameLocations":["1636:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"1636:6:6"},{"id":417,"name":"IERC165","nameLocations":["1644:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3278,"src":"1644:7:6"}],"src":"1627:25:6"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:6","nodeType":"VariableDeclaration","scope":442,"src":"1587:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":413,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:6"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"1662:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:6"},"scope":1298,"src":"1560:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1340],"body":{"id":469,"nodeType":"Block","src":"1991:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2005:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:6","typeDescriptions":{}}},"id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"2001:87:6","trueBody":{"id":463,"nodeType":"Block","src":"2026:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:6","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2047:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"RevertStatement","src":"2040:37:6"}]}},{"expression":{"baseExpression":{"id":465,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2104:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":467,"indexExpression":{"id":466,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2114:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":449,"id":468,"nodeType":"Return","src":"2097:23:6"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"1866:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":470,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:6","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"owner","nameLocation":"1946:5:6","nodeType":"VariableDeclaration","scope":470,"src":"1938:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:6"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"1982:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:6"},"scope":1298,"src":"1919:208:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":482,"nodeType":"Block","src":"2256:46:6","statements":[{"expression":{"arguments":[{"id":479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2287:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2273:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":477,"id":481,"nodeType":"Return","src":"2266:29:6"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"2133:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:6","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:6","nodeType":"VariableDeclaration","scope":483,"src":"2201:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:6"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2247:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:6"},"scope":1298,"src":"2184:118:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1572],"body":{"id":491,"nodeType":"Block","src":"2424:29:6","statements":[{"expression":{"id":489,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2441:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":488,"id":490,"nodeType":"Return","src":"2434:12:6"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2308:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":492,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:6","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2377:2:6"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"2409:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":486,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:6"},"scope":1298,"src":"2364:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1578],"body":{"id":500,"nodeType":"Block","src":"2579:31:6","statements":[{"expression":{"id":498,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2596:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":497,"id":499,"nodeType":"Return","src":"2589:14:6"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"2459:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":501,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:6","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"2532:2:6"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"2564:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":495,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:6"},"scope":1298,"src":"2517:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1586],"body":{"id":536,"nodeType":"Block","src":"2755:176:6","statements":[{"expression":{"arguments":[{"id":510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":509,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2765:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":512,"nodeType":"ExpressionStatement","src":"2765:22:6"},{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:6","nodeType":"VariableDeclaration","scope":536,"src":"2798:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":517,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":515,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2822:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":520,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2855:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":518,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:6","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:6","memberName":"length","nodeType":"MemberAccess","src":"2849:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:6","trueExpression":{"arguments":[{"id":528,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2891:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"2900:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:6","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:6","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":508,"id":535,"nodeType":"Return","src":"2842:82:6"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"2616:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:6","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:6","nodeType":"VariableDeclaration","scope":537,"src":"2694:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:6"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"2740:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:6"},"scope":1298,"src":"2676:255:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":545,"nodeType":"Block","src":"3239:26:6","statements":[{"expression":{"hexValue":"","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":542,"id":544,"nodeType":"Return","src":"3249:9:6"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"2937:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:6","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"3190:2:6"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"3224:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":540,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:6"},"scope":1298,"src":"3173:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1388],"body":{"id":561,"nodeType":"Block","src":"3383:52:6","statements":[{"expression":{"arguments":[{"id":555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3402:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3406:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3415:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1165,"src":"3393:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"3393:35:6"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"3271:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:6","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"to","nameLocation":"3347:2:6","nodeType":"VariableDeclaration","scope":562,"src":"3339:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:6","nodeType":"VariableDeclaration","scope":562,"src":"3351:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:6"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"3383:0:6"},"scope":1298,"src":"3322:113:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1404],"body":{"id":578,"nodeType":"Block","src":"3572:78:6","statements":[{"expression":{"arguments":[{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3582:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":573,"nodeType":"ExpressionStatement","src":"3582:22:6"},{"expression":{"arguments":[{"id":575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"3635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":574,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3622:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":569,"id":577,"nodeType":"Return","src":"3615:28:6"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"3441:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:6","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:6","nodeType":"VariableDeclaration","scope":579,"src":"3517:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:6"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"3563:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:6"},"scope":1298,"src":"3496:154:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1396],"body":{"id":594,"nodeType":"Block","src":"3792:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":588,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3821:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3835:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"3845:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":587,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3802:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"3802:52:6"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"3656:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:6","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"operator","nameLocation":"3752:8:6","nodeType":"VariableDeclaration","scope":595,"src":"3744:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"approved","nameLocation":"3767:8:6","nodeType":"VariableDeclaration","scope":595,"src":"3762:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":583,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:6"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"3792:0:6"},"scope":1298,"src":"3717:144:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1414],"body":{"id":611,"nodeType":"Block","src":"4021:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":605,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4038:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":607,"indexExpression":{"id":606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4057:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":609,"indexExpression":{"id":608,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4064:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"4031:42:6"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"3867:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:6","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"owner","nameLocation":"3961:5:6","nodeType":"VariableDeclaration","scope":612,"src":"3953:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"operator","nameLocation":"3976:8:6","nodeType":"VariableDeclaration","scope":612,"src":"3968:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:6"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"4015:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:6"},"scope":1298,"src":"3927:153:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1380],"body":{"id":657,"nodeType":"Block","src":"4222:498:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4236:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"4232:87:6","trueBody":{"id":635,"nodeType":"Block","src":"4254:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4275:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"4268:40:6"}]}},{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:6","nodeType":"VariableDeclaration","scope":657,"src":"4537:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":645,"initialValue":{"arguments":[{"id":640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4569:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4573:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":642,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"4582:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":639,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4561:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4609:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4626:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"4605:109:6","trueBody":{"id":655,"nodeType":"Block","src":"4632:82:6","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4674:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4689:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":649,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4653:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"4646:57:6"}]}}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"4086:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:6","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"from","nameLocation":"4172:4:6","nodeType":"VariableDeclaration","scope":658,"src":"4164:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"to","nameLocation":"4186:2:6","nodeType":"VariableDeclaration","scope":658,"src":"4178:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:6","nodeType":"VariableDeclaration","scope":658,"src":"4190:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:6"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"4222:0:6"},"scope":1298,"src":"4142:578:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1370],"body":{"id":675,"nodeType":"Block","src":"4862:56:6","statements":[{"expression":{"arguments":[{"id":669,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4889:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"4895:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4899:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":668,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[676,706],"referencedDeclaration":706,"src":"4872:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"4872:39:6"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"4726:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":676,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:6","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"from","nameLocation":"4820:4:6","nodeType":"VariableDeclaration","scope":676,"src":"4812:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"to","nameLocation":"4834:2:6","nodeType":"VariableDeclaration","scope":676,"src":"4826:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:6","nodeType":"VariableDeclaration","scope":676,"src":"4838:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:6"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"4862:0:6"},"scope":1298,"src":"4786:132:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":705,"nodeType":"Block","src":"5087:130:6","statements":[{"expression":{"arguments":[{"id":689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5110:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5116:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5097:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"5097:31:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":697,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"5172:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5186:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5192:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5196:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5205:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":694,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"5138:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1664_$","typeString":"type(library ERC721Utils)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"5138:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"5138:72:6"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"4924:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:6","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"5018:4:6","nodeType":"VariableDeclaration","scope":706,"src":"5010:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"5032:2:6","nodeType":"VariableDeclaration","scope":706,"src":"5024:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:6","nodeType":"VariableDeclaration","scope":706,"src":"5036:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"data","nameLocation":"5066:4:6","nodeType":"VariableDeclaration","scope":706,"src":"5053:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"5087:0:6"},"scope":1298,"src":"4984:233:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":718,"nodeType":"Block","src":"5807:40:6","statements":[{"expression":{"baseExpression":{"id":714,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5824:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":716,"indexExpression":{"id":715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5832:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":713,"id":717,"nodeType":"Return","src":"5817:23:6"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"5223:504:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:6","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:6","nodeType":"VariableDeclaration","scope":719,"src":"5750:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:6"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"5798:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:6"},"scope":1298,"src":"5732:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"6042:48:6","statements":[{"expression":{"baseExpression":{"id":727,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6059:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":729,"indexExpression":{"id":728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":726,"id":730,"nodeType":"Return","src":"6052:31:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"5853:105:6","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:6","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:6","nodeType":"VariableDeclaration","scope":732,"src":"5985:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:6"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":732,"src":"6033:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:6"},"scope":1298,"src":"5963:127:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"6510:163:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6539:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6577:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":751,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6586:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6614:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6621:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6597:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":758,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6633:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6658:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":743,"id":766,"nodeType":"Return","src":"6520:146:6"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"6096:300:6","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:6","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"owner","nameLocation":"6432:5:6","nodeType":"VariableDeclaration","scope":768,"src":"6424:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"spender","nameLocation":"6447:7:6","nodeType":"VariableDeclaration","scope":768,"src":"6439:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:6","nodeType":"VariableDeclaration","scope":768,"src":"6456:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:6"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"6504:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:6"},"scope":1298,"src":"6401:272:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"7202:271:6","statements":[{"condition":{"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:6","subExpression":{"arguments":[{"id":779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7231:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7238:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7217:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":803,"nodeType":"IfStatement","src":"7212:255:6","trueBody":{"id":802,"nodeType":"Block","src":"7257:210:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7275:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:6","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":800,"nodeType":"Block","src":"7373:84:6","statements":[{"errorCall":{"arguments":[{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7425:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7434:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":795,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7398:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"RevertStatement","src":"7391:51:6"}]},"id":801,"nodeType":"IfStatement","src":"7271:186:6","trueBody":{"id":794,"nodeType":"Block","src":"7296:71:6","statements":[{"errorCall":{"arguments":[{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"7321:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"RevertStatement","src":"7314:38:6"}]}}]}}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"6679:421:6","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:6","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"owner","nameLocation":"7139:5:6","nodeType":"VariableDeclaration","scope":805,"src":"7131:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"spender","nameLocation":"7154:7:6","nodeType":"VariableDeclaration","scope":805,"src":"7146:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:6","nodeType":"VariableDeclaration","scope":805,"src":"7163:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"7202:0:6"},"scope":1298,"src":"7105:368:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"8190:78:6","statements":[{"id":819,"nodeType":"UncheckedBlock","src":"8200:62:6","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":813,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8224:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":815,"indexExpression":{"id":814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"8234:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"8246:5:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"8224:27:6"}]}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"7479:631:6","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:6","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"account","nameLocation":"8149:7:6","nodeType":"VariableDeclaration","scope":821,"src":"8141:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"value","nameLocation":"8166:5:6","nodeType":"VariableDeclaration","scope":821,"src":"8158:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":809,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:6"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"8190:0:6"},"scope":1298,"src":"8115:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"8956:700:6","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"from","nameLocation":"8974:4:6","nodeType":"VariableDeclaration","scope":910,"src":"8966:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"id":836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8981:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":839,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"9058:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:6","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":852,"nodeType":"IfStatement","src":"9054:86:6","trueBody":{"id":851,"nodeType":"Block","src":"9078:62:6","statements":[{"expression":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9109:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"9115:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9121:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"9092:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"9092:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9184:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:6","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"9180:256:6","trueBody":{"id":879,"nodeType":"Block","src":"9204:232:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:6","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9321:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:6","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":859,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1231,"src":"9300:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"9300:48:6"},{"id":878,"nodeType":"UncheckedBlock","src":"9363:63:6","statements":[{"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":872,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9391:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":874,"indexExpression":{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9401:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ExpressionStatement","src":"9391:20:6"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9450:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:6","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"IfStatement","src":"9446:107:6","trueBody":{"id":894,"nodeType":"Block","src":"9468:85:6","statements":[{"id":893,"nodeType":"UncheckedBlock","src":"9482:61:6","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":887,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9510:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":889,"indexExpression":{"id":888,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9520:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"9510:18:6"}]}]}},{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":896,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"9563:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":898,"indexExpression":{"id":897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9571:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9582:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":901,"nodeType":"ExpressionStatement","src":"9563:21:6"},{"eventCall":{"arguments":[{"id":903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9609:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9615:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"9600:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"EmitStatement","src":"9595:32:6"},{"expression":{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9645:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":832,"id":909,"nodeType":"Return","src":"9638:11:6"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"8274:582:6","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:6","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"8886:2:6","nodeType":"VariableDeclaration","scope":911,"src":"8878:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:6","nodeType":"VariableDeclaration","scope":911,"src":"8890:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"auth","nameLocation":"8915:4:6","nodeType":"VariableDeclaration","scope":911,"src":"8907:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:6"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"8947:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:6"},"scope":1298,"src":"8861:795:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":960,"nodeType":"Block","src":"10031:274:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"10045:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:6","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"10041:87:6","trueBody":{"id":932,"nodeType":"Block","src":"10063:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:6","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"10084:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"RevertStatement","src":"10077:40:6"}]}},{"assignments":[935],"declarations":[{"constant":false,"id":935,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:6","nodeType":"VariableDeclaration","scope":960,"src":"10137:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":944,"initialValue":{"arguments":[{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"10169:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:6","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":936,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"10161:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"10207:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:6","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":959,"nodeType":"IfStatement","src":"10203:96:6","trueBody":{"id":958,"nodeType":"Block","src":"10236:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:6","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":951,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"10257:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"RevertStatement","src":"10250:38:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"9662:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"to","nameLocation":"10001:2:6","nodeType":"VariableDeclaration","scope":961,"src":"9993:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:6","nodeType":"VariableDeclaration","scope":961,"src":"10005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"10031:0:6"},"scope":1298,"src":"9978:327:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"10713:43:6","statements":[{"expression":{"arguments":[{"id":970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10733:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"10737:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":969,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[976,1006],"referencedDeclaration":1006,"src":"10723:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"10723:26:6"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"10311:340:6","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:6","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"to","nameLocation":"10683:2:6","nodeType":"VariableDeclaration","scope":976,"src":"10675:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:6","nodeType":"VariableDeclaration","scope":976,"src":"10687:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"10713:0:6"},"scope":1298,"src":"10656:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"11061:123:6","statements":[{"expression":{"arguments":[{"id":987,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"11077:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"11071:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"11071:18:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":994,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"11133:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:6","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"11159:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11172:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":991,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"11099:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1664_$","typeString":"type(library ERC721Utils)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"11099:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"11099:78:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"10762:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:6","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"to","nameLocation":"11004:2:6","nodeType":"VariableDeclaration","scope":1006,"src":"10996:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:6","nodeType":"VariableDeclaration","scope":1006,"src":"11008:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"data","nameLocation":"11038:4:6","nodeType":"VariableDeclaration","scope":1006,"src":"11025:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:6"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"11061:0:6"},"scope":1298,"src":"10977:207:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"11551:186:6","statements":[{"assignments":[1013],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:6","nodeType":"VariableDeclaration","scope":1038,"src":"11561:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:6","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11605:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:6","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"11585:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11639:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:6","typeDescriptions":{}}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1037,"nodeType":"IfStatement","src":"11635:96:6","trueBody":{"id":1036,"nodeType":"Block","src":"11668:63:6","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11712:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"11689:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"RevertStatement","src":"11682:38:6"}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"11190:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:6","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:6","nodeType":"VariableDeclaration","scope":1039,"src":"11525:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:6"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"11551:0:6"},"scope":1298,"src":"11510:227:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"12132:389:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"12146:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:6","typeDescriptions":{}}},"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"12142:87:6","trueBody":{"id":1062,"nodeType":"Block","src":"12164:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:6","typeDescriptions":{}}},"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"12185:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"RevertStatement","src":"12178:40:6"}]}},{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:6","nodeType":"VariableDeclaration","scope":1098,"src":"12238:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[{"id":1067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"12270:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:6","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"12262:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12308:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:6","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1086,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12410:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"12427:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1096,"nodeType":"IfStatement","src":"12406:109:6","trueBody":{"id":1095,"nodeType":"Block","src":"12433:82:6","statements":[{"errorCall":{"arguments":[{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"12475:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12481:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1092,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12490:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1089,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"12454:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"RevertStatement","src":"12447:57:6"}]}},"id":1097,"nodeType":"IfStatement","src":"12304:211:6","trueBody":{"id":1085,"nodeType":"Block","src":"12337:63:6","statements":[{"errorCall":{"arguments":[{"id":1082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12381:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"12358:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"RevertStatement","src":"12351:38:6"}]}}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"11743:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:6","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"from","nameLocation":"12088:4:6","nodeType":"VariableDeclaration","scope":1099,"src":"12080:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"to","nameLocation":"12102:2:6","nodeType":"VariableDeclaration","scope":1099,"src":"12094:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:6","nodeType":"VariableDeclaration","scope":1099,"src":"12106:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:6"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"12132:0:6"},"scope":1298,"src":"12061:460:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"13530:53:6","statements":[{"expression":{"arguments":[{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"13554:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"13560:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"13564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1109,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1117,1147],"referencedDeclaration":1147,"src":"13540:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"13540:36:6"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"12527:923:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:6","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"13486:4:6","nodeType":"VariableDeclaration","scope":1117,"src":"13478:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"13500:2:6","nodeType":"VariableDeclaration","scope":1117,"src":"13492:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:6","nodeType":"VariableDeclaration","scope":1117,"src":"13504:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:6"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"13530:0:6"},"scope":1298,"src":"13455:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"13922:127:6","statements":[{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"13942:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"13948:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13952:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13932:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"ExpressionStatement","src":"13932:28:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1138,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"14004:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"14018:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"14024:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"14028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1143,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"14037:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1135,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"13970:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1664_$","typeString":"type(library ERC721Utils)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"13970:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"13970:72:6"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"13589:226:6","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:6","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"from","nameLocation":"13851:4:6","nodeType":"VariableDeclaration","scope":1147,"src":"13843:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"to","nameLocation":"13865:2:6","nodeType":"VariableDeclaration","scope":1147,"src":"13857:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:6","nodeType":"VariableDeclaration","scope":1147,"src":"13869:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"data","nameLocation":"13899:4:6","nodeType":"VariableDeclaration","scope":1147,"src":"13886:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:6"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"13922:0:6"},"scope":1298,"src":"13820:229:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1164,"nodeType":"Block","src":"14562:50:6","statements":[{"expression":{"arguments":[{"id":1158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"14581:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"14585:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1160,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"14594:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1231,"src":"14572:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"14572:33:6"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"14055:432:6","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"to","nameLocation":"14518:2:6","nodeType":"VariableDeclaration","scope":1165,"src":"14510:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:6","nodeType":"VariableDeclaration","scope":1165,"src":"14522:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"auth","nameLocation":"14547:4:6","nodeType":"VariableDeclaration","scope":1165,"src":"14539:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:6"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"14562:0:6"},"scope":1298,"src":"14492:120:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"14888:568:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14954:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14967:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:6","typeDescriptions":{}}},"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"IfStatement","src":"14950:460:6","trueBody":{"id":1222,"nodeType":"Block","src":"14987:423:6","statements":[{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"owner","nameLocation":"15009:5:6","nodeType":"VariableDeclaration","scope":1222,"src":"15001:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1190,"initialValue":{"arguments":[{"id":1188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15031:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1187,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"15017:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15167:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:6","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15189:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15198:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:6","subExpression":{"arguments":[{"id":1202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15224:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15231:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"15207:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"15163:142:6","trueBody":{"id":1211,"nodeType":"Block","src":"15238:67:6","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15285:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1207,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"15263:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"RevertStatement","src":"15256:34:6"}]}},{"condition":{"id":1213,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"15323:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"15319:81:6","trueBody":{"id":1220,"nodeType":"Block","src":"15334:66:6","statements":[{"eventCall":{"arguments":[{"id":1215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15366:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"15373:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15377:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"15357:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"EmitStatement","src":"15352:33:6"}]}}]}},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1224,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"15420:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1226,"indexExpression":{"id":1225,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15436:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"15447:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1229,"nodeType":"ExpressionStatement","src":"15420:29:6"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"14618:171:6","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:6","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"to","nameLocation":"14820:2:6","nodeType":"VariableDeclaration","scope":1231,"src":"14812:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:6","nodeType":"VariableDeclaration","scope":1231,"src":"14824:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"auth","nameLocation":"14849:4:6","nodeType":"VariableDeclaration","scope":1231,"src":"14841:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:6","nodeType":"VariableDeclaration","scope":1231,"src":"14855:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"14888:0:6"},"scope":1298,"src":"14794:662:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1267,"nodeType":"Block","src":"15758:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15772:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:6","typeDescriptions":{}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"15768:91:6","trueBody":{"id":1251,"nodeType":"Block","src":"15796:63:6","statements":[{"errorCall":{"arguments":[{"id":1248,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15839:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1247,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"15817:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"RevertStatement","src":"15810:38:6"}]}},{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1253,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"15868:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1256,"indexExpression":{"id":1254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"15887:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1257,"indexExpression":{"id":1255,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15894:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1258,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"15906:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"ExpressionStatement","src":"15868:46:6"},{"eventCall":{"arguments":[{"id":1262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"15944:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15951:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"15961:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1261,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15929:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"EmitStatement","src":"15924:46:6"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"15462:198:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:6","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"owner","nameLocation":"15701:5:6","nodeType":"VariableDeclaration","scope":1268,"src":"15693:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"operator","nameLocation":"15716:8:6","nodeType":"VariableDeclaration","scope":1268,"src":"15708:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"approved","nameLocation":"15731:8:6","nodeType":"VariableDeclaration","scope":1268,"src":"15726:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:6"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"15758:0:6"},"scope":1298,"src":"15665:312:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"16284:169:6","statements":[{"assignments":[1277],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"owner","nameLocation":"16302:5:6","nodeType":"VariableDeclaration","scope":1296,"src":"16294:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"id":1279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"16319:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"16310:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"16341:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:6","typeDescriptions":{}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1293,"nodeType":"IfStatement","src":"16337:88:6","trueBody":{"id":1292,"nodeType":"Block","src":"16362:63:6","statements":[{"errorCall":{"arguments":[{"id":1289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"16406:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"16383:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"RevertStatement","src":"16376:38:6"}]}},{"expression":{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"16441:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1275,"id":1295,"nodeType":"Return","src":"16434:12:6"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"15983:224:6","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:6","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:6","nodeType":"VariableDeclaration","scope":1297,"src":"16235:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:6"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"16275:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:6"},"scope":1298,"src":"16212:241:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1299,"src":"775:15680:6","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[1314,1323,1332]}],"src":"107:16349:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3278],"IERC721":[1415]},"id":1416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1300,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1416,"sourceUnit":3279,"src":"134:62:7","symbolAliases":[{"foreign":{"id":1301,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1304,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3278,"src":"288:7:7"},"id":1305,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1415,"linearizedBaseContracts":[1415,3278],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1314,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":1314,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":1314,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":1314,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1323,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":1323,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":1323,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":1323,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1332,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":1332,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":1332,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":1332,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1329,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1340,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1340,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1340,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":1415,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":1348,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":1348,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":1415,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":1360,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":1360,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":1360,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":1360,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":1415,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1370,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":1370,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":1370,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":1415,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":1380,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":1380,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":1380,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":1415,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1388,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":1388,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":1388,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":1415,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":1396,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":1396,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":1415,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1404,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":1404,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":1404,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":1415,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":1414,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":1414,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":1415,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1416,"src":"267:4661:7","usedErrors":[],"usedEvents":[1314,1323,1332]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1433]},"id":1434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"142:154:8","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1433,"linearizedBaseContracts":[1433],"name":"IERC721Receiver","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"329:500:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1432,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:8","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"operator","nameLocation":"877:8:8","nodeType":"VariableDeclaration","scope":1432,"src":"869:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"from","nameLocation":"903:4:8","nodeType":"VariableDeclaration","scope":1432,"src":"895:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:8","nodeType":"VariableDeclaration","scope":1432,"src":"917:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"data","nameLocation":"957:4:8","nodeType":"VariableDeclaration","scope":1432,"src":"942:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1426,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:8"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"986:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1429,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:8"},"scope":1433,"src":"834:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1434,"src":"297:699:8","usedErrors":[],"usedEvents":[]}],"src":"116:881:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1298],"ERC721URIStorage":[1559],"IERC165":[3278],"IERC4906":[175],"Strings":[2593]},"id":1560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":1299,"src":"154:37:9","symbolAliases":[{"foreign":{"id":1436,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"162:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":2594,"src":"192:51:9","symbolAliases":[{"foreign":{"id":1438,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"200:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":176,"src":"244:58:9","symbolAliases":[{"foreign":{"id":1440,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":152,"src":"303:56:9","symbolAliases":[{"foreign":{"id":1442,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"311:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1445,"name":"IERC4906","nameLocations":["470:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:9"},"id":1446,"nodeType":"InheritanceSpecifier","src":"470:8:9"},{"baseName":{"id":1447,"name":"ERC721","nameLocations":["480:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"480:6:9"},"id":1448,"nodeType":"InheritanceSpecifier","src":"480:6:9"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"361:70:9","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1559,"linearizedBaseContracts":[1559,1298,294,1587,175,1415,3266,3278,1694],"name":"ERC721URIStorage","nameLocation":"450:16:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1451,"libraryName":{"id":1449,"name":"Strings","nameLocations":["499:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"499:7:9"},"nodeType":"UsingForDirective","src":"493:26:9","typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1457,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:9","nodeType":"VariableDeclaration","scope":1559,"src":"707:65:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1452,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1453,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:9","typeDescriptions":{}}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1461,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:9","nodeType":"VariableDeclaration","scope":1559,"src":"818:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1460,"keyName":"tokenId","keyNameLocation":"834:7:9","keyType":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1459,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[442,3277],"body":{"id":1481,"nodeType":"Block","src":"1046:99:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1472,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1063:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1473,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1078:20:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1477,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1126:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1475,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1559_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":442,"src":"1102:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1471,"id":1480,"nodeType":"Return","src":"1056:82:9"}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"878:55:9","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1482,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:9","nodeType":"FunctionDefinition","overrides":{"id":1468,"nodeType":"OverrideSpecifier","overrides":[{"id":1466,"name":"ERC721","nameLocations":["1014:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"1014:6:9"},{"id":1467,"name":"IERC165","nameLocations":["1022:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3278,"src":"1022:7:9"}],"src":"1005:25:9"},"parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:9","nodeType":"VariableDeclaration","scope":1482,"src":"965:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1463,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:9"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1482,"src":"1040:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1469,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:9"},"scope":1559,"src":"938:207:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":1538,"nodeType":"Block","src":"1299:505:9","statements":[{"expression":{"arguments":[{"id":1492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1491,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"1309:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1494,"nodeType":"ExpressionStatement","src":"1309:22:9"},{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:9","nodeType":"VariableDeclaration","scope":1538,"src":"1342:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1500,"initialValue":{"baseExpression":{"id":1497,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1368:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1499,"indexExpression":{"id":1498,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1379:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:9"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"base","nameLocation":"1411:4:9","nodeType":"VariableDeclaration","scope":1538,"src":"1397:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1501,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1505,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1503,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1418:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1508,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1507:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1506,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:9","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:9","memberName":"length","nodeType":"MemberAccess","src":"1501:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1516,"nodeType":"IfStatement","src":"1497:70:9","trueBody":{"id":1515,"nodeType":"Block","src":"1526:41:9","statements":[{"expression":{"id":1513,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1547:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1490,"id":1514,"nodeType":"Return","src":"1540:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1519,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1672:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1517,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:9","typeDescriptions":{}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:9","memberName":"length","nodeType":"MemberAccess","src":"1666:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"1662:95:9","trueBody":{"id":1531,"nodeType":"Block","src":"1695:62:9","statements":[{"expression":{"arguments":[{"id":1527,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1730:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1528,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1736:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1524,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:9","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1490,"id":1530,"nodeType":"Return","src":"1709:37:9"}]}},{"expression":{"arguments":[{"id":1535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1789:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1533,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1559_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:9","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":537,"src":"1774:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1490,"id":1537,"nodeType":"Return","src":"1767:30:9"}]},"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"1151:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:9","nodeType":"FunctionDefinition","overrides":{"id":1487,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:9"},"parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:9","nodeType":"VariableDeclaration","scope":1539,"src":"1229:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:9"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"1284:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:9"},"scope":1559,"src":"1211:593:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1557,"nodeType":"Block","src":"2004:86:9","statements":[{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1547,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2014:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1549,"indexExpression":{"id":1548,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"2025:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1550,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2036:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1552,"nodeType":"ExpressionStatement","src":"2014:31:9"},{"eventCall":{"arguments":[{"id":1554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"2075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1553,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"EmitStatement","src":"2055:28:9"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"1810:108:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:9","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:9","nodeType":"VariableDeclaration","scope":1558,"src":"1945:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:9","nodeType":"VariableDeclaration","scope":1558,"src":"1962:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:9"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[],"src":"2004:0:9"},"scope":1559,"src":"1923:167:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1560,"src":"432:1660:9","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[167,174,1314,1323,1332]}],"src":"128:1965:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1415],"IERC721Metadata":[1587]},"id":1588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1561,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1563,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1588,"sourceUnit":1416,"src":"153:39:10","symbolAliases":[{"foreign":{"id":1562,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1565,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"357:7:10"},"id":1566,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1587,"linearizedBaseContracts":[1587,1415,3278],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1572,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1569,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":1587,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1578,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":1587,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1586,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":1586,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1583,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":1587,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1588,"src":"328:463:10","usedErrors":[],"usedEvents":[1314,1323,1332]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1664],"IERC721Errors":[294],"IERC721Receiver":[1433]},"id":1665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1589,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1665,"sourceUnit":1434,"src":"144:55:11","symbolAliases":[{"foreign":{"id":1590,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1665,"sourceUnit":342,"src":"200:69:11","symbolAliases":[{"foreign":{"id":1592,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1664,"linearizedBaseContracts":[1664],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1662,"nodeType":"Block","src":"1151:758:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1165:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:11","memberName":"code","nodeType":"MemberAccess","src":"1165:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:11","memberName":"length","nodeType":"MemberAccess","src":"1165:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"1161:742:11","trueBody":{"id":1660,"nodeType":"Block","src":"1185:718:11","statements":[{"clauses":[{"block":{"id":1638,"nodeType":"Block","src":"1295:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1317:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1626,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1327:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1433_$","typeString":"type(contract IERC721Receiver)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"1327:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1637,"nodeType":"IfStatement","src":"1313:182:11","trueBody":{"id":1636,"nodeType":"Block","src":"1370:125:11","statements":[{"errorCall":{"arguments":[{"id":1633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1473:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1630,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1437:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1437:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"RevertStatement","src":"1430:46:11"}]}}]},"errorName":"","id":1639,"nodeType":"TryCatchClause","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"retval","nameLocation":"1287:6:11","nodeType":"VariableDeclaration","scope":1639,"src":"1280:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1622,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:11"},"src":"1271:238:11"},{"block":{"id":1657,"nodeType":"Block","src":"1538:355:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1560:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:11","memberName":"length","nodeType":"MemberAccess","src":"1560:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1655,"nodeType":"Block","src":"1728:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:11","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:11"},"nodeType":"YulFunctionCall","src":"1808:15:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:11"},"nodeType":"YulFunctionCall","src":"1825:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:11"},"nodeType":"YulFunctionCall","src":"1801:38:11"},"nodeType":"YulExpressionStatement","src":"1801:38:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1641,"isOffset":false,"isSlot":false,"src":"1816:6:11","valueSize":1},{"declaration":1641,"isOffset":false,"isSlot":false,"src":"1831:6:11","valueSize":1}],"flags":["memory-safe"],"id":1654,"nodeType":"InlineAssembly","src":"1750:111:11"}]},"id":1656,"nodeType":"IfStatement","src":"1556:323:11","trueBody":{"id":1653,"nodeType":"Block","src":"1580:142:11","statements":[{"errorCall":{"arguments":[{"id":1650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1700:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1647,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1664:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1664:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"RevertStatement","src":"1657:46:11"}]}}]},"errorName":"","id":1658,"nodeType":"TryCatchClause","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"reason","nameLocation":"1530:6:11","nodeType":"VariableDeclaration","scope":1658,"src":"1517:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:11"},"src":"1510:383:11"}],"externalCall":{"arguments":[{"id":1617,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1240:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1250:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"1265:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1219:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1613,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1203:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1433_$","typeString":"type(contract IERC721Receiver)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1433","typeString":"contract IERC721Receiver"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"1203:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1659,"nodeType":"TryStatement","src":"1199:694:11"}]}}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"457:523:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:11","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"operator","nameLocation":"1033:8:11","nodeType":"VariableDeclaration","scope":1663,"src":"1025:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"from","nameLocation":"1059:4:11","nodeType":"VariableDeclaration","scope":1663,"src":"1051:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"to","nameLocation":"1081:2:11","nodeType":"VariableDeclaration","scope":1663,"src":"1073:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:11","nodeType":"VariableDeclaration","scope":1663,"src":"1093:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"data","nameLocation":"1131:4:11","nodeType":"VariableDeclaration","scope":1663,"src":"1118:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:11"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"1151:0:11"},"scope":1664,"src":"985:924:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1665,"src":"431:1480:11","usedErrors":[],"usedEvents":[]}],"src":"118:1794:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1694]},"id":1695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1666,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1694,"linearizedBaseContracts":[1694],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1675,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":1672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1671,"id":1674,"nodeType":"Return","src":"728:17:12"}]},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":1694,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":1681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1680,"id":1683,"nodeType":"Return","src":"835:15:12"}]},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":1694,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1689,"id":1691,"nodeType":"Return","src":"945:8:12"}]},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":1694,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1695,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1746]},"id":1747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1696,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1746,"linearizedBaseContracts":[1746],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1701,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1746,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1705,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1746,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1709,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1746,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1713,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1746,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1717,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1746,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1721,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1746,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1725,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1746,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1729,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1746,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1733,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1746,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1737,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1746,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1744,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:13"},"nodeType":"YulFunctionCall","src":"1868:24:13"},"nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:13"},"nodeType":"YulFunctionCall","src":"1905:18:13"},"nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:13"},"nodeType":"YulFunctionCall","src":"1936:18:13"},"nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1740,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1743,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1745,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1746,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1747,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1694],"Pausable":[1863]},"id":1864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":1695,"src":"128:45:14","symbolAliases":[{"foreign":{"id":1749,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"136:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1752,"name":"Context","nameLocations":["645:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"645:7:14"},"id":1753,"nodeType":"InheritanceSpecifier","src":"645:7:14"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"175:439:14","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1863,"linearizedBaseContracts":[1863,1694],"name":"Pausable","nameLocation":"633:8:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1755,"mutability":"mutable","name":"_paused","nameLocation":"672:7:14","nodeType":"VariableDeclaration","scope":1863,"src":"659:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1754,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"686:73:14","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1760,"name":"Paused","nameLocation":"770:6:14","nodeType":"EventDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:14","nodeType":"VariableDeclaration","scope":1760,"src":"777:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:14"},"src":"764:30:14"},{"anonymous":false,"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"800:70:14","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1765,"name":"Unpaused","nameLocation":"881:8:14","nodeType":"EventDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:14","nodeType":"VariableDeclaration","scope":1765,"src":"890:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:14"},"src":"875:32:14"},{"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"913:76:14","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1768,"name":"EnforcedPause","nameLocation":"1000:13:14","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"1013:2:14"},"src":"994:22:14"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"1022:80:14","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1771,"name":"ExpectedPause","nameLocation":"1113:13:14","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"1126:2:14"},"src":"1107:22:14"},{"body":{"id":1779,"nodeType":"Block","src":"1221:32:14","statements":[{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1775,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"1231:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"nodeType":"ExpressionStatement","src":"1231:15:14"}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1135:67:14","text":" @dev Initializes the contract in unpaused state."},"id":1780,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[],"src":"1218:2:14"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"1221:0:14"},"scope":1863,"src":"1207:46:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"1464:47:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1783,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1474:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1785,"nodeType":"ExpressionStatement","src":"1474:19:14"},{"id":1786,"nodeType":"PlaceholderStatement","src":"1503:1:14"}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"1259:175:14","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1788,"name":"whenNotPaused","nameLocation":"1448:13:14","nodeType":"ModifierDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[],"src":"1461:2:14"},"src":"1439:72:14","virtual":false,"visibility":"internal"},{"body":{"id":1795,"nodeType":"Block","src":"1711:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1791,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1721:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"1721:16:14"},{"id":1794,"nodeType":"PlaceholderStatement","src":"1747:1:14"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"1517:167:14","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1796,"name":"whenPaused","nameLocation":"1698:10:14","nodeType":"ModifierDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[],"src":"1708:2:14"},"src":"1689:66:14","virtual":false,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"1903:31:14","statements":[{"expression":{"id":1802,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"1920:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1801,"id":1803,"nodeType":"Return","src":"1913:14:14"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"1761:84:14","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:14","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[],"src":"1865:2:14"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"1897:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1799,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:14"},"scope":1863,"src":"1850:84:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1816,"nodeType":"Block","src":"2053:77:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1809,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2067:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"2063:61:14","trueBody":{"id":1814,"nodeType":"Block","src":"2077:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1811,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2098:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"RevertStatement","src":"2091:22:14"}]}}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1940:57:14","text":" @dev Throws if the contract is paused."},"id":1817,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:14","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"2028:2:14"},"returnParameters":{"id":1808,"nodeType":"ParameterList","parameters":[],"src":"2053:0:14"},"scope":1863,"src":"2002:128:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"2250:78:14","statements":[{"condition":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1821,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2265:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"IfStatement","src":"2260:62:14","trueBody":{"id":1827,"nodeType":"Block","src":"2275:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1824,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2296:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1826,"nodeType":"RevertStatement","src":"2289:22:14"}]}}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"2136:61:14","text":" @dev Throws if the contract is not paused."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:14","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"2225:2:14"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"2250:0:14"},"scope":1863,"src":"2202:126:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"2512:66:14","statements":[{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1836,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2522:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"ExpressionStatement","src":"2522:14:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1841,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2558:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1840,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"2551:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"EmitStatement","src":"2546:25:14"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"2334:124:14","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1846,"implemented":true,"kind":"function","modifiers":[{"id":1834,"kind":"modifierInvocation","modifierName":{"id":1833,"name":"whenNotPaused","nameLocations":["2498:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"2498:13:14"},"nodeType":"ModifierInvocation","src":"2498:13:14"}],"name":"_pause","nameLocation":"2472:6:14","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"2478:2:14"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"2512:0:14"},"scope":1863,"src":"2463:115:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"2758:69:14","statements":[{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2768:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"ExpressionStatement","src":"2768:15:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1857,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2807:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1856,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"2798:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"EmitStatement","src":"2793:27:14"}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"2584:121:14","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1862,"implemented":true,"kind":"function","modifiers":[{"id":1850,"kind":"modifierInvocation","modifierName":{"id":1849,"name":"whenPaused","nameLocations":["2747:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1796,"src":"2747:10:14"},"nodeType":"ModifierInvocation","src":"2747:10:14"}],"name":"_unpause","nameLocation":"2719:8:14","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"2727:2:14"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"2758:0:14"},"scope":1863,"src":"2710:117:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1864,"src":"615:2214:14","usedErrors":[1768,1771],"usedEvents":[1760,1765]}],"src":"102:2728:14"},"id":14},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1932]},"id":1933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"135:894:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1932,"linearizedBaseContracts":[1932],"name":"ReentrancyGuard","nameLocation":"1048:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1869,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:15","nodeType":"VariableDeclaration","scope":1932,"src":"1818:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1872,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:15","nodeType":"VariableDeclaration","scope":1932,"src":"1864:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1874,"mutability":"mutable","name":"_status","nameLocation":"1923:7:15","nodeType":"VariableDeclaration","scope":1932,"src":"1907:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"1937:52:15","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1877,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:15","nodeType":"ErrorDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[],"src":"2028:2:15"},"src":"1994:37:15"},{"body":{"id":1884,"nodeType":"Block","src":"2051:38:15","statements":[{"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1881,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2071:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ExpressionStatement","src":"2061:21:15"}]},"id":1885,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"2048:2:15"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"2051:0:15"},"scope":1932,"src":"2037:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1895,"nodeType":"Block","src":"2490:79:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1888,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2500:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"2500:21:15"},{"id":1891,"nodeType":"PlaceholderStatement","src":"2531:1:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2542:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"ExpressionStatement","src":"2542:20:15"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"2095:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1896,"name":"nonReentrant","nameLocation":"2475:12:15","nodeType":"ModifierDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"2487:2:15"},"src":"2466:103:15","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"2614:268:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1900,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"2698:86:15","trueBody":{"id":1905,"nodeType":"Block","src":"2722:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1902,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2743:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"RevertStatement","src":"2736:37:15"}]}},{"expression":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1907,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1908,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1910,"nodeType":"ExpressionStatement","src":"2858:17:15"}]},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:15","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"2614:0:15"},"scope":1932,"src":"2575:307:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1919,"nodeType":"Block","src":"2926:170:15","statements":[{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1915,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1916,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"nodeType":"ExpressionStatement","src":"3068:21:15"}]},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:15","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[],"src":"2915:2:15"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"2926:0:15"},"scope":1932,"src":"2888:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1930,"nodeType":"Block","src":"3339:42:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1927,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1925,"id":1929,"nodeType":"Return","src":"3349:25:15"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"3102:168:15","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:15","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[],"src":"3307:2:15"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"3333:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:15"},"scope":1932,"src":"3275:106:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1933,"src":"1030:2353:15","usedErrors":[1877],"usedEvents":[]}],"src":"109:3275:15"},"id":15},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1938],"ShortStrings":[2149],"StorageSlot":[2273]},"id":2150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2150,"sourceUnit":2274,"src":"132:46:16","symbolAliases":[{"foreign":{"id":1935,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"140:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1938,"name":"ShortString","nameLocation":"353:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:16","underlyingType":{"id":1937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"378:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2149,"linearizedBaseContracts":[2149],"name":"ShortStrings","nameLocation":"1263:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1942,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:16","nodeType":"VariableDeclaration","scope":2149,"src":"1345:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1946,"name":"StringTooLong","nameLocation":"1469:13:16","nodeType":"ErrorDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"str","nameLocation":"1490:3:16","nodeType":"VariableDeclaration","scope":1946,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1943,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:16"},"src":"1463:32:16"},{"errorSelector":"b3512b0c","id":1948,"name":"InvalidShortString","nameLocation":"1506:18:16","nodeType":"ErrorDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"1524:2:16"},"src":"1500:27:16"},{"body":{"id":1991,"nodeType":"Block","src":"1786:208:16","statements":[{"assignments":[1958],"declarations":[{"constant":false,"id":1958,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:16","nodeType":"VariableDeclaration","scope":1991,"src":"1796:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1963,"initialValue":{"arguments":[{"id":1961,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1822:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1959,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:16","typeDescriptions":{}}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1964,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1840:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:16","memberName":"length","nodeType":"MemberAccess","src":"1840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"1836:72:16","trueBody":{"id":1972,"nodeType":"Block","src":"1858:50:16","statements":[{"errorCall":{"arguments":[{"id":1969,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1893:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1968,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1879:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"RevertStatement","src":"1872:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1982,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:16","typeDescriptions":{}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1985,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1974:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:16","memberName":"length","nodeType":"MemberAccess","src":"1974:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:16","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1974,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1924:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"type(ShortString)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"functionReturnParameters":1956,"id":1990,"nodeType":"Return","src":"1917:70:16"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"1533:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:16","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"str","nameLocation":"1745:3:16","nodeType":"VariableDeclaration","scope":1992,"src":"1731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:16"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"1773:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":1954,"nodeType":"UserDefinedTypeName","pathNode":{"id":1953,"name":"ShortString","nameLocations":["1773:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"1773:11:16"},"referencedDeclaration":1938,"src":"1773:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:16"},"scope":2149,"src":"1708:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2017,"nodeType":"Block","src":"2152:304:16","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"len","nameLocation":"2170:3:16","nodeType":"VariableDeclaration","scope":2017,"src":"2162:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2006,"initialValue":{"arguments":[{"id":2004,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"id":2003,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:16"},{"assignments":[2008],"declarations":[{"constant":false,"id":2008,"mutability":"mutable","name":"str","nameLocation":"2294:3:16","nodeType":"VariableDeclaration","scope":2017,"src":"2280:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2013,"initialValue":{"arguments":[{"hexValue":"3332","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:16"},{"AST":{"nodeType":"YulBlock","src":"2349:81:16","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:16"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:16"},"nodeType":"YulFunctionCall","src":"2363:16:16"},"nodeType":"YulExpressionStatement","src":"2363:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:16"},"nodeType":"YulFunctionCall","src":"2399:14:16"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:16"},"nodeType":"YulFunctionCall","src":"2392:28:16"},"nodeType":"YulExpressionStatement","src":"2392:28:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2002,"isOffset":false,"isSlot":false,"src":"2375:3:16","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"2415:4:16","valueSize":1},{"declaration":2008,"isOffset":false,"isSlot":false,"src":"2370:3:16","valueSize":1},{"declaration":2008,"isOffset":false,"isSlot":false,"src":"2403:3:16","valueSize":1}],"flags":["memory-safe"],"id":2014,"nodeType":"InlineAssembly","src":"2324:106:16"},{"expression":{"id":2015,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2446:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2000,"id":2016,"nodeType":"Return","src":"2439:10:16"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2000:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:16","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":2018,"src":"2096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":1995,"nodeType":"UserDefinedTypeName","pathNode":{"id":1994,"name":"ShortString","nameLocations":["2096:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"2096:11:16"},"referencedDeclaration":1938,"src":"2096:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:16"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2018,"src":"2137:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:16"},"scope":2149,"src":"2078:378:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"2598:175:16","statements":[{"assignments":[2028],"declarations":[{"constant":false,"id":2028,"mutability":"mutable","name":"result","nameLocation":"2616:6:16","nodeType":"VariableDeclaration","scope":2049,"src":"2608:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2038,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2033,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"2652:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"expression":{"id":2031,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2633:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"type(ShortString)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:16","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2679:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"2675:69:16","trueBody":{"id":2045,"nodeType":"Block","src":"2692:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2042,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2713:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"RevertStatement","src":"2706:27:16"}]}},{"expression":{"id":2047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2760:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2026,"id":2048,"nodeType":"Return","src":"2753:13:16"}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"2462:61:16","text":" @dev Return the length of a `ShortString`."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:16","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:16","nodeType":"VariableDeclaration","scope":2050,"src":"2548:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"ShortString","nameLocations":["2548:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"2548:11:16"},"referencedDeclaration":1938,"src":"2548:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:16"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"2589:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:16"},"scope":2149,"src":"2528:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"2996:231:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3016:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2061,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:16","typeDescriptions":{}}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3010:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2087,"nodeType":"Block","src":"3094:127:16","statements":[{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2076,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3134:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2073,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"3108:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2273_$","typeString":"type(library StorageSlot)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2250,"src":"3108:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2170_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2170_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"3108:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3149:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2081,"nodeType":"ExpressionStatement","src":"3108:46:16"},{"expression":{"arguments":[{"id":2084,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3192:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2082,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3175:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"type(ShortString)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"functionReturnParameters":2060,"id":2086,"nodeType":"Return","src":"3168:42:16"}]},"id":2088,"nodeType":"IfStatement","src":"3006:215:16","trueBody":{"id":2072,"nodeType":"Block","src":"3036:52:16","statements":[{"expression":{"arguments":[{"id":2069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3071:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2068,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3057:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"functionReturnParameters":2060,"id":2071,"nodeType":"Return","src":"3050:27:16"}]}}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"2779:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:16","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"value","nameLocation":"2936:5:16","nodeType":"VariableDeclaration","scope":2090,"src":"2922:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2052,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"store","nameLocation":"2958:5:16","nodeType":"VariableDeclaration","scope":2090,"src":"2943:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2054,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:16"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"2983:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"ShortString","nameLocations":["2983:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"2983:11:16"},"referencedDeclaration":1938,"src":"2983:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:16"},"scope":2149,"src":"2887:340:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"3467:158:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"3500:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"expression":{"id":2101,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3481:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"type(ShortString)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2105,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3510:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2114,"nodeType":"Block","src":"3582:37:16","statements":[{"expression":{"id":2112,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3603:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2100,"id":2113,"nodeType":"Return","src":"3596:12:16"}]},"id":2115,"nodeType":"IfStatement","src":"3477:142:16","trueBody":{"id":2111,"nodeType":"Block","src":"3529:47:16","statements":[{"expression":{"arguments":[{"id":2108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"3559:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"id":2107,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3550:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2100,"id":2110,"nodeType":"Return","src":"3543:22:16"}]}}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"3233:120:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:16","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"value","nameLocation":"3400:5:16","nodeType":"VariableDeclaration","scope":2117,"src":"3388:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2093,"nodeType":"UserDefinedTypeName","pathNode":{"id":2092,"name":"ShortString","nameLocations":["3388:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"3388:11:16"},"referencedDeclaration":1938,"src":"3388:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"store","nameLocation":"3422:5:16","nodeType":"VariableDeclaration","scope":2117,"src":"3407:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:16"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"3452:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:16"},"scope":2149,"src":"3358:267:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2147,"nodeType":"Block","src":"4105:174:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4138:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"expression":{"id":2128,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4119:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"type(ShortString)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2132,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4148:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2145,"nodeType":"Block","src":"4222:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2141,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"4249:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:16","typeDescriptions":{}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:16","memberName":"length","nodeType":"MemberAccess","src":"4243:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2127,"id":2144,"nodeType":"Return","src":"4236:26:16"}]},"id":2146,"nodeType":"IfStatement","src":"4115:158:16","trueBody":{"id":2138,"nodeType":"Block","src":"4167:49:16","statements":[{"expression":{"arguments":[{"id":2135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4199:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}],"id":2134,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4188:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1938_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2127,"id":2137,"nodeType":"Return","src":"4181:24:16"}]}}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"3631:364:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2148,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:16","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"4044:5:16","nodeType":"VariableDeclaration","scope":2148,"src":"4032:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"ShortString","nameLocations":["4032:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"4032:11:16"},"referencedDeclaration":1938,"src":"4032:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"store","nameLocation":"4066:5:16","nodeType":"VariableDeclaration","scope":2148,"src":"4051:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:16"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"4096:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:16"},"scope":2149,"src":"4000:279:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2150,"src":"1255:3026:16","usedErrors":[1946,1948],"usedEvents":[]}],"src":"106:4176:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2273]},"id":2274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2151,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2273,"linearizedBaseContracts":[2273],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2155,"members":[{"constant":false,"id":2154,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":2155,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":2273,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2158,"members":[{"constant":false,"id":2157,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":2158,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2156,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":2273,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2161,"members":[{"constant":false,"id":2160,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":2161,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":2273,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2164,"members":[{"constant":false,"id":2163,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":2164,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":2273,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2167,"members":[{"constant":false,"id":2166,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":2167,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2165,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":2273,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2170,"members":[{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":2170,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":2273,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2173,"members":[{"constant":false,"id":2172,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":2173,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2171,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":2273,"src":"1756:45:17","visibility":"public"},{"body":{"id":2183,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:17","statements":[{"nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2180,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":2176,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":2182,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":2184,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":2184,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2155_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2179,"nodeType":"UserDefinedTypeName","pathNode":{"id":2178,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2155,"src":"1960:11:17"},"referencedDeclaration":2155,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2155_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":2273,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2194,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:17","statements":[{"nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2191,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":2193,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2195,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":2195,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":2195,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2158_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2190,"nodeType":"UserDefinedTypeName","pathNode":{"id":2189,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2158,"src":"2220:11:17"},"referencedDeclaration":2158,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2158_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":2273,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:17","statements":[{"nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2202,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":2204,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":2206,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":2206,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2161_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2201,"nodeType":"UserDefinedTypeName","pathNode":{"id":2200,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2161,"src":"2480:11:17"},"referencedDeclaration":2161,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2161_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":2273,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2216,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:17","statements":[{"nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2213,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":2209,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":2215,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2217,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":2217,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":2217,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2164_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2212,"nodeType":"UserDefinedTypeName","pathNode":{"id":2211,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2164,"src":"2740:11:17"},"referencedDeclaration":2164,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2164_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":2273,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2227,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:17","statements":[{"nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2224,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":2220,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":2226,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":2228,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":2228,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2167_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2223,"nodeType":"UserDefinedTypeName","pathNode":{"id":2222,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2167,"src":"2998:10:17"},"referencedDeclaration":2167,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2167_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":2273,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:17","statements":[{"nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2235,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":2231,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":2237,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":2239,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":2239,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2170_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2234,"nodeType":"UserDefinedTypeName","pathNode":{"id":2233,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2170,"src":"3255:10:17"},"referencedDeclaration":2170,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2170_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":2273,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:17","statements":[{"nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2246,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":2242,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2248,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":2250,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2241,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":2250,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2170_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2245,"nodeType":"UserDefinedTypeName","pathNode":{"id":2244,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2170,"src":"3536:10:17"},"referencedDeclaration":2170,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2170_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":2273,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2260,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:17","statements":[{"nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2257,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":2253,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":2259,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":2261,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":2261,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2173_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2256,"nodeType":"UserDefinedTypeName","pathNode":{"id":2255,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2173,"src":"3797:9:17"},"referencedDeclaration":2173,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2173_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":2273,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:17","statements":[{"nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2268,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":2264,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2270,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":2272,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2263,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":2272,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2173_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2267,"nodeType":"UserDefinedTypeName","pathNode":{"id":2266,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2173,"src":"4073:9:17"},"referencedDeclaration":2173,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2173_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":2273,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2274,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4884],"SignedMath":[6793],"Strings":[2593]},"id":2594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2594,"sourceUnit":4885,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2276,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2594,"sourceUnit":6794,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2278,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2593,"linearizedBaseContracts":[2593],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2283,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2593,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2281,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2286,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2593,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2284,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2293,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2293,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2293,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2340,"nodeType":"Block","src":"708:561:18","statements":[{"id":2339,"nodeType":"UncheckedBlock","src":"718:545:18","statements":[{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2339,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2303,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4884_$","typeString":"type(library Math)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4656,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2339,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2310,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2316,"initialValue":{"arguments":[{"id":2314,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2312,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2318],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2339,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nodeType":"YulBlock","src":"899:67:18","statements":[{"nodeType":"YulAssignment","src":"917:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:18"},"nodeType":"YulFunctionCall","src":"936:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:18"},"nodeType":"YulFunctionCall","src":"924:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2311,"isOffset":false,"isSlot":false,"src":"928:6:18","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"944:6:18","valueSize":1},{"declaration":2318,"isOffset":false,"isSlot":false,"src":"917:3:18","valueSize":1}],"flags":["memory-safe"],"id":2320,"nodeType":"InlineAssembly","src":"874:92:18"},{"body":{"id":2335,"nodeType":"Block","src":"992:234:18","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:18","subExpression":{"id":2322,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1010:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"1010:5:18"},{"AST":{"nodeType":"YulBlock","src":"1058:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:18"},"nodeType":"YulFunctionCall","src":"1098:14:18"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:18"},"nodeType":"YulFunctionCall","src":"1093:32:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:18"},"nodeType":"YulFunctionCall","src":"1080:46:18"},"nodeType":"YulExpressionStatement","src":"1080:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2283,"isOffset":false,"isSlot":false,"src":"1114:10:18","valueSize":1},{"declaration":2318,"isOffset":false,"isSlot":false,"src":"1088:3:18","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"1102:5:18","valueSize":1}],"flags":["memory-safe"],"id":2325,"nodeType":"InlineAssembly","src":"1033:111:18"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"1161:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"1161:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"1194:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2334,"nodeType":"IfStatement","src":"1190:21:18","trueBody":{"id":2333,"nodeType":"Break","src":"1206:5:18"}}]},"condition":{"hexValue":"74727565","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2336,"nodeType":"WhileStatement","src":"979:247:18"},{"expression":{"id":2337,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1246:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2300,"id":2338,"nodeType":"Return","src":"1239:13:18"}]}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2341,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2298,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2593,"src":"637:632:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"1445:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1476:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:18","trueExpression":{"hexValue":"2d","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1522:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2359,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"1507:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6793_$","typeString":"type(library SignedMath)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6792,"src":"1507:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"1498:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2349,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:18","typeDescriptions":{}}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2348,"id":2365,"nodeType":"Return","src":"1455:75:18"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"1275:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:18","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"value","nameLocation":"1400:5:18","nodeType":"VariableDeclaration","scope":2367,"src":"1393:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2343,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:18"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"1430:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2346,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:18"},"scope":2593,"src":"1369:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2386,"nodeType":"Block","src":"1716:100:18","statements":[{"id":2385,"nodeType":"UncheckedBlock","src":"1726:84:18","statements":[{"expression":{"arguments":[{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"1769:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"1788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2377,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1776:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4884_$","typeString":"type(library Math)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4827,"src":"1776:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2387,2470,2490],"referencedDeclaration":2470,"src":"1757:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2374,"id":2384,"nodeType":"Return","src":"1750:49:18"}]}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"1543:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:18","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"value","nameLocation":"1671:5:18","nodeType":"VariableDeclaration","scope":2387,"src":"1663:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:18"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2387,"src":"1701:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2372,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:18"},"scope":2593,"src":"1642:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"2029:435:18","statements":[{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:18","nodeType":"VariableDeclaration","scope":2469,"src":"2039:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2400,"initialValue":{"id":2399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2060:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:18"},{"assignments":[2402],"declarations":[{"constant":false,"id":2402,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:18","nodeType":"VariableDeclaration","scope":2469,"src":"2075:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2411,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2406,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2111:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:18"},{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2412,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2132:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2414,"indexExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2417,"nodeType":"ExpressionStatement","src":"2132:15:18"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2418,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2157:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2420,"indexExpression":{"hexValue":"31","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2423,"nodeType":"ExpressionStatement","src":"2157:15:18"},{"body":{"id":2452,"nodeType":"Block","src":"2227:95:18","statements":[{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2438,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2241:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2440,"indexExpression":{"id":2439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2248:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2441,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2253:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2445,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2264:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2447,"nodeType":"ExpressionStatement","src":"2241:40:18"},{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2448,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2295:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2451,"nodeType":"ExpressionStatement","src":"2295:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"initializationExpression":{"assignments":[2425],"declarations":[{"constant":false,"id":2425,"mutability":"mutable","name":"i","nameLocation":"2195:1:18","nodeType":"VariableDeclaration","scope":2453,"src":"2187:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2427,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2203:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:18"},"loopExpression":{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:18","subExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2224:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"2222:3:18"},"nodeType":"ForStatement","src":"2182:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2454,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2335:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2463,"nodeType":"IfStatement","src":"2331:96:18","trueBody":{"id":2462,"nodeType":"Block","src":"2352:75:18","statements":[{"errorCall":{"arguments":[{"id":2458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2402:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2459,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2409:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2457,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2373:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"RevertStatement","src":"2366:50:18"}]}},{"expression":{"arguments":[{"id":2466,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2450:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2464,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:18","typeDescriptions":{}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2396,"id":2468,"nodeType":"Return","src":"2436:21:18"}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"1822:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:18","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"value","nameLocation":"1968:5:18","nodeType":"VariableDeclaration","scope":2470,"src":"1960:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"length","nameLocation":"1983:6:18","nodeType":"VariableDeclaration","scope":2470,"src":"1975:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:18"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"2014:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:18"},"scope":2593,"src":"1939:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2489,"nodeType":"Block","src":"2696:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2483,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"2741:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2481,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:18","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:18","typeDescriptions":{}}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2486,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2749:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2478,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2387,2470,2490],"referencedDeclaration":2470,"src":"2713:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2477,"id":2488,"nodeType":"Return","src":"2706:58:18"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"2470:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:18","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"addr","nameLocation":"2652:4:18","nodeType":"VariableDeclaration","scope":2490,"src":"2644:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:18"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"2681:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2475,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:18"},"scope":2593,"src":"2623:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2554,"nodeType":"Block","src":"3028:642:18","statements":[{"assignments":[2499],"declarations":[{"constant":false,"id":2499,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:18","nodeType":"VariableDeclaration","scope":2554,"src":"3038:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2498,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2506,"initialValue":{"arguments":[{"arguments":[{"id":2503,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"3078:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2502,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2387,2470,2490],"referencedDeclaration":2490,"src":"3066:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:18","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:18"},{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:18","nodeType":"VariableDeclaration","scope":2554,"src":"3169:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2509,"nodeType":"VariableDeclarationStatement","src":"3169:17:18"},{"AST":{"nodeType":"YulBlock","src":"3221:78:18","statements":[{"nodeType":"YulAssignment","src":"3235:54:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:18"},"nodeType":"YulFunctionCall","src":"3266:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:18"},"nodeType":"YulFunctionCall","src":"3256:32:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:18"},"nodeType":"YulFunctionCall","src":"3248:41:18"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2499,"isOffset":false,"isSlot":false,"src":"3270:6:18","valueSize":1},{"declaration":2508,"isOffset":false,"isSlot":false,"src":"3235:9:18","valueSize":1}],"flags":["memory-safe"],"id":2510,"nodeType":"InlineAssembly","src":"3196:103:18"},{"body":{"id":2547,"nodeType":"Block","src":"3342:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3448:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2528,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3477:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2530,"indexExpression":{"id":2529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3484:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2526,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:18","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"3444:150:18","trueBody":{"id":2541,"nodeType":"Block","src":"3494:100:18","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2535,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3562:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2537,"indexExpression":{"id":2536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3569:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2540,"nodeType":"ExpressionStatement","src":"3562:17:18"}]}},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2543,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3607:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"3607:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2548,"initializationExpression":{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"i","nameLocation":"3322:1:18","nodeType":"VariableDeclaration","scope":2548,"src":"3314:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2514,"initialValue":{"hexValue":"3431","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:18"},"loopExpression":{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:18","subExpression":{"id":2518,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ExpressionStatement","src":"3337:3:18"},"nodeType":"ForStatement","src":"3309:324:18"},{"expression":{"arguments":[{"id":2551,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3656:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2549,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:18","typeDescriptions":{}}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2497,"id":2553,"nodeType":"Return","src":"3642:21:18"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"2777:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:18","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"addr","nameLocation":"2984:4:18","nodeType":"VariableDeclaration","scope":2555,"src":"2976:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:18"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2555,"src":"3013:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2495,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:18"},"scope":2593,"src":"2947:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"3825:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"3848:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2565,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:18","typeDescriptions":{}}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:18","memberName":"length","nodeType":"MemberAccess","src":"3842:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"3867:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2570,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:18","typeDescriptions":{}}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:18","memberName":"length","nodeType":"MemberAccess","src":"3861:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"3896:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:18","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2576,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"3919:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:18","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2564,"id":2590,"nodeType":"Return","src":"3835:87:18"}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"3676:66:18","text":" @dev Returns true if the two strings are equal."},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:18","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"a","nameLocation":"3776:1:18","nodeType":"VariableDeclaration","scope":2592,"src":"3762:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"b","nameLocation":"3793:1:18","nodeType":"VariableDeclaration","scope":2592,"src":"3779:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2559,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:18"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"3819:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2562,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:18"},"scope":2593,"src":"3747:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2594,"src":"251:3680:18","usedErrors":[2293],"usedEvents":[]}],"src":"101:3831:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2941]},"id":2942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2595,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2941,"linearizedBaseContracts":[2941],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2601,"members":[{"id":2597,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2598,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2599,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2600,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2604,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2609,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2609,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2614,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2614,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2666,"nodeType":"Block","src":"2285:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2629,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2299:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:19","memberName":"length","nodeType":"MemberAccess","src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2664,"nodeType":"Block","src":"2793:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2655,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"2827:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2659,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2872:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:19","memberName":"length","nodeType":"MemberAccess","src":"2872:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:19","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2628,"id":2663,"nodeType":"Return","src":"2807:83:19"}]},"id":2665,"nodeType":"IfStatement","src":"2295:606:19","trueBody":{"id":2650,"nodeType":"Block","src":"2323:464:19","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"r","nameLocation":"2345:1:19","nodeType":"VariableDeclaration","scope":2650,"src":"2337:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2635,"nodeType":"VariableDeclarationStatement","src":"2337:9:19"},{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"s","nameLocation":"2368:1:19","nodeType":"VariableDeclaration","scope":2650,"src":"2360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2638,"nodeType":"VariableDeclarationStatement","src":"2360:9:19"},{"assignments":[2640],"declarations":[{"constant":false,"id":2640,"mutability":"mutable","name":"v","nameLocation":"2389:1:19","nodeType":"VariableDeclaration","scope":2650,"src":"2383:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2639,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2641,"nodeType":"VariableDeclarationStatement","src":"2383:7:19"},{"AST":{"nodeType":"YulBlock","src":"2560:171:19","statements":[{"nodeType":"YulAssignment","src":"2578:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:19"},"nodeType":"YulFunctionCall","src":"2589:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:19"},"nodeType":"YulFunctionCall","src":"2583:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:19"}]},{"nodeType":"YulAssignment","src":"2627:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:19"},"nodeType":"YulFunctionCall","src":"2638:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:19"},"nodeType":"YulFunctionCall","src":"2632:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:19"}]},{"nodeType":"YulAssignment","src":"2676:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:19"},"nodeType":"YulFunctionCall","src":"2695:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:19"},"nodeType":"YulFunctionCall","src":"2689:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:19"},"nodeType":"YulFunctionCall","src":"2681:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2634,"isOffset":false,"isSlot":false,"src":"2578:1:19","valueSize":1},{"declaration":2637,"isOffset":false,"isSlot":false,"src":"2627:1:19","valueSize":1},{"declaration":2619,"isOffset":false,"isSlot":false,"src":"2593:9:19","valueSize":1},{"declaration":2619,"isOffset":false,"isSlot":false,"src":"2642:9:19","valueSize":1},{"declaration":2619,"isOffset":false,"isSlot":false,"src":"2699:9:19","valueSize":1},{"declaration":2640,"isOffset":false,"isSlot":false,"src":"2676:1:19","valueSize":1}],"flags":["memory-safe"],"id":2642,"nodeType":"InlineAssembly","src":"2535:196:19"},{"expression":{"arguments":[{"id":2644,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"2762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2645,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2768:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2646,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"2771:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2647,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2774:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2643,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2667,2747,2855],"referencedDeclaration":2855,"src":"2751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2628,"id":2649,"nodeType":"Return","src":"2744:32:19"}]}}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"hash","nameLocation":"2166:4:19","nodeType":"VariableDeclaration","scope":2667,"src":"2158:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"signature","nameLocation":"2193:9:19","nodeType":"VariableDeclaration","scope":2667,"src":"2180:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2618,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:19"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:19","nodeType":"VariableDeclaration","scope":2667,"src":"2232:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"err","nameLocation":"2264:3:19","nodeType":"VariableDeclaration","scope":2667,"src":"2251:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2624,"nodeType":"UserDefinedTypeName","pathNode":{"id":2623,"name":"RecoverError","nameLocations":["2251:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"2251:12:19"},"referencedDeclaration":2601,"src":"2251:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:19","nodeType":"VariableDeclaration","scope":2667,"src":"2269:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:19"},"scope":2941,"src":"2129:778:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"3801:168:19","statements":[{"assignments":[2678,2681,2683],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:19","nodeType":"VariableDeclaration","scope":2696,"src":"3812:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"error","nameLocation":"3844:5:19","nodeType":"VariableDeclaration","scope":2696,"src":"3831:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2680,"nodeType":"UserDefinedTypeName","pathNode":{"id":2679,"name":"RecoverError","nameLocations":["3831:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"3831:12:19"},"referencedDeclaration":2601,"src":"3831:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:19","nodeType":"VariableDeclaration","scope":2696,"src":"3851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"id":2685,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3882:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2686,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"3888:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2684,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2667,2747,2855],"referencedDeclaration":2667,"src":"3871:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:19"},{"expression":{"arguments":[{"id":2690,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3920:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"id":2691,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3927:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2689,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3908:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2601_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"3908:28:19"},{"expression":{"id":2694,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3953:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2676,"id":2695,"nodeType":"Return","src":"3946:16:19"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"2913:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:19","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"hash","nameLocation":"3739:4:19","nodeType":"VariableDeclaration","scope":2697,"src":"3731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"signature","nameLocation":"3758:9:19","nodeType":"VariableDeclaration","scope":2697,"src":"3745:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:19"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"3792:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:19"},"scope":2941,"src":"3714:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"4348:342:19","statements":[{"id":2745,"nodeType":"UncheckedBlock","src":"4358:326:19","statements":[{"assignments":[2715],"declarations":[{"constant":false,"id":2715,"mutability":"mutable","name":"s","nameLocation":"4390:1:19","nodeType":"VariableDeclaration","scope":2745,"src":"4382:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2722,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4394:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:19"},{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"v","nameLocation":"4591:1:19","nodeType":"VariableDeclaration","scope":2745,"src":"4585:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2723,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2729,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4610:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:19","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2725,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:19","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:19"},{"expression":{"arguments":[{"id":2739,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2740,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"4665:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2741,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2742,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"4671:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2738,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2667,2747,2855],"referencedDeclaration":2855,"src":"4648:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2713,"id":2744,"nodeType":"Return","src":"4641:32:19"}]}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"3975:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:19","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"hash","nameLocation":"4222:4:19","nodeType":"VariableDeclaration","scope":2747,"src":"4214:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"r","nameLocation":"4244:1:19","nodeType":"VariableDeclaration","scope":2747,"src":"4236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"vs","nameLocation":"4263:2:19","nodeType":"VariableDeclaration","scope":2747,"src":"4255:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:19"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:19","nodeType":"VariableDeclaration","scope":2747,"src":"4295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"err","nameLocation":"4327:3:19","nodeType":"VariableDeclaration","scope":2747,"src":"4314:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"RecoverError","nameLocations":["4314:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"4314:12:19"},"referencedDeclaration":2601,"src":"4314:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:19","nodeType":"VariableDeclaration","scope":2747,"src":"4332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:19"},"scope":2941,"src":"4185:505:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"4903:164:19","statements":[{"assignments":[2760,2763,2765],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:19","nodeType":"VariableDeclaration","scope":2779,"src":"4914:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"error","nameLocation":"4946:5:19","nodeType":"VariableDeclaration","scope":2779,"src":"4933:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"RecoverError","nameLocations":["4933:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"4933:12:19"},"referencedDeclaration":2601,"src":"4933:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:19","nodeType":"VariableDeclaration","scope":2779,"src":"4953:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2771,"initialValue":{"arguments":[{"id":2767,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2768,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"4990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2769,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"4993:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2766,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2667,2747,2855],"referencedDeclaration":2747,"src":"4973:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:19"},{"expression":{"arguments":[{"id":2773,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"id":2774,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"5025:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2772,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"5006:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2601_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2776,"nodeType":"ExpressionStatement","src":"5006:28:19"},{"expression":{"id":2777,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"5051:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2758,"id":2778,"nodeType":"Return","src":"5044:16:19"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"4696:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:19","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"hash","nameLocation":"4842:4:19","nodeType":"VariableDeclaration","scope":2780,"src":"4834:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"r","nameLocation":"4856:1:19","nodeType":"VariableDeclaration","scope":2780,"src":"4848:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"vs","nameLocation":"4867:2:19","nodeType":"VariableDeclaration","scope":2780,"src":"4859:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:19"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"4894:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:19"},"scope":2941,"src":"4817:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"5382:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2801,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6278:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:19","typeDescriptions":{}}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2815,"nodeType":"IfStatement","src":"6266:164:19","trueBody":{"id":2814,"nodeType":"Block","src":"6351:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:19","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2809,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"6385:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"6385:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"id":2811,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6417:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2798,"id":2813,"nodeType":"Return","src":"6365:54:19"}]}},{"assignments":[2817],"declarations":[{"constant":false,"id":2817,"mutability":"mutable","name":"signer","nameLocation":"6532:6:19","nodeType":"VariableDeclaration","scope":2854,"src":"6524:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2824,"initialValue":{"arguments":[{"id":2819,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"6551:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2820,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6557:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2821,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2822,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2818,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6579:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:19","typeDescriptions":{}}},"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2844,"nodeType":"IfStatement","src":"6575:113:19","trueBody":{"id":2843,"nodeType":"Block","src":"6601:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:19","typeDescriptions":{}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2835,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"6635:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"6635:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:19","typeDescriptions":{}}},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2798,"id":2842,"nodeType":"Return","src":"6615:62:19"}]}},{"expression":{"components":[{"id":2845,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6706:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2846,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"6714:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"6714:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:19","typeDescriptions":{}}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2798,"id":2853,"nodeType":"Return","src":"6698:49:19"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"5073:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:19","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"hash","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":2855,"src":"5232:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"v","nameLocation":"5260:1:19","nodeType":"VariableDeclaration","scope":2855,"src":"5254:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"r","nameLocation":"5279:1:19","nodeType":"VariableDeclaration","scope":2855,"src":"5271:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"s","nameLocation":"5298:1:19","nodeType":"VariableDeclaration","scope":2855,"src":"5290:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:19"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:19","nodeType":"VariableDeclaration","scope":2855,"src":"5329:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"err","nameLocation":"5361:3:19","nodeType":"VariableDeclaration","scope":2855,"src":"5348:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2794,"nodeType":"UserDefinedTypeName","pathNode":{"id":2793,"name":"RecoverError","nameLocations":["5348:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"5348:12:19"},"referencedDeclaration":2601,"src":"5348:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:19","nodeType":"VariableDeclaration","scope":2855,"src":"5366:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:19"},"scope":2941,"src":"5203:1551:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2890,"nodeType":"Block","src":"6981:166:19","statements":[{"assignments":[2870,2873,2875],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:19","nodeType":"VariableDeclaration","scope":2890,"src":"6992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"error","nameLocation":"7024:5:19","nodeType":"VariableDeclaration","scope":2890,"src":"7011:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"RecoverError","nameLocations":["7011:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"7011:12:19"},"referencedDeclaration":2601,"src":"7011:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:19","nodeType":"VariableDeclaration","scope":2890,"src":"7031:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2882,"initialValue":{"arguments":[{"id":2877,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"7062:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2878,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"7068:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2879,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7071:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2880,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7074:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2876,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2667,2747,2855],"referencedDeclaration":2855,"src":"7051:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2601_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:19"},{"expression":{"arguments":[{"id":2884,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"7098:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},{"id":2885,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"7105:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2883,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"7086:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2601_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2887,"nodeType":"ExpressionStatement","src":"7086:28:19"},{"expression":{"id":2888,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"7131:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2868,"id":2889,"nodeType":"Return","src":"7124:16:19"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"6760:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:19","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"hash","nameLocation":"6912:4:19","nodeType":"VariableDeclaration","scope":2891,"src":"6904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"v","nameLocation":"6924:1:19","nodeType":"VariableDeclaration","scope":2891,"src":"6918:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2859,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"r","nameLocation":"6935:1:19","nodeType":"VariableDeclaration","scope":2891,"src":"6927:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"s","nameLocation":"6946:1:19","nodeType":"VariableDeclaration","scope":2891,"src":"6938:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:19"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"6972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:19"},"scope":2941,"src":"6887:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2939,"nodeType":"Block","src":"7352:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7366:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2901,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7375:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"7375:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7462:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2907,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"7471:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2914,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7567:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2915,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7576:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"7576:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7701:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2927,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7710:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2601_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"7710:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"IfStatement","src":"7697:109:19","trueBody":{"id":2934,"nodeType":"Block","src":"7742:64:19","statements":[{"errorCall":{"arguments":[{"id":2931,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"7786:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2930,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"7763:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"RevertStatement","src":"7756:39:19"}]}},"id":2936,"nodeType":"IfStatement","src":"7563:243:19","trueBody":{"id":2925,"nodeType":"Block","src":"7613:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2921,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"7670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:19","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7634:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"RevertStatement","src":"7627:53:19"}]}},"id":2937,"nodeType":"IfStatement","src":"7458:348:19","trueBody":{"id":2913,"nodeType":"Block","src":"7502:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2910,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"7523:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2912,"nodeType":"RevertStatement","src":"7516:30:19"}]}},"id":2938,"nodeType":"IfStatement","src":"7362:444:19","trueBody":{"id":2905,"nodeType":"Block","src":"7397:55:19","statements":[{"functionReturnParameters":2899,"id":2904,"nodeType":"Return","src":"7411:7:19"}]}}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"7153:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2940,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:19","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"error","nameLocation":"7314:5:19","nodeType":"VariableDeclaration","scope":2940,"src":"7301:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2894,"nodeType":"UserDefinedTypeName","pathNode":{"id":2893,"name":"RecoverError","nameLocations":["7301:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2601,"src":"7301:12:19"},"referencedDeclaration":2601,"src":"7301:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2601","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:19","nodeType":"VariableDeclaration","scope":2940,"src":"7321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:19"},"returnParameters":{"id":2899,"nodeType":"ParameterList","parameters":[],"src":"7352:0:19"},"scope":2941,"src":"7280:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2942,"src":"344:7470:19","usedErrors":[2604,2609,2614],"usedEvents":[]}],"src":"112:7703:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3168],"IERC5267":[200],"MessageHashUtils":[3242],"ShortString":[1938],"ShortStrings":[2149]},"id":3169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2943,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3169,"sourceUnit":3243,"src":"139:56:20","symbolAliases":[{"foreign":{"id":2944,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3169,"sourceUnit":2150,"src":"196:62:20","symbolAliases":[{"foreign":{"id":2946,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2947,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3169,"sourceUnit":201,"src":"259:55:20","symbolAliases":[{"foreign":{"id":2949,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2952,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":200,"src":"1988:8:20"},"id":2953,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3168,"linearizedBaseContracts":[3168,200],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2955,"libraryName":{"id":2954,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2149,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":2960,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":3168,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2962,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":3168,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2964,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":3168,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2966,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":3168,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2968,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":3168,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2970,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":3168,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2973,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":3168,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2972,"nodeType":"UserDefinedTypeName","pathNode":{"id":2971,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"2607:11:20"},"referencedDeclaration":1938,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2976,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":3168,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"},"typeName":{"id":2975,"nodeType":"UserDefinedTypeName","pathNode":{"id":2974,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1938,"src":"2648:11:20"},"referencedDeclaration":1938,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2978,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:20","nodeType":"VariableDeclaration","scope":3168,"src":"2692:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2977,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2980,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:20","nodeType":"VariableDeclaration","scope":3168,"src":"2726:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2979,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3037,"nodeType":"Block","src":"3383:376:20","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"3393:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2991,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"3432:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2989,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"3401:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2090,"src":"3401:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1938_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"src":"3393:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"id":2994,"nodeType":"ExpressionStatement","src":"3393:53:20"},{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2995,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"3456:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2998,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"3501:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2996,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3467:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2090,"src":"3467:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1938_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"src":"3456:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"id":3001,"nodeType":"ExpressionStatement","src":"3456:62:20"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3002,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3528:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3006,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"3558:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:20","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3003,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3010,"nodeType":"ExpressionStatement","src":"3528:36:20"},{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3011,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"3574:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3015,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3607:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3013,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:20","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3019,"nodeType":"ExpressionStatement","src":"3574:42:20"},{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3020,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3627:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3021,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"3627:30:20"},{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"3667:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3026,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"3692:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3029,"nodeType":"ExpressionStatement","src":"3667:48:20"},{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3030,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:20","typeDescriptions":{}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3036,"nodeType":"ExpressionStatement","src":"3725:27:20"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"2764:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3038,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"name","nameLocation":"3354:4:20","nodeType":"VariableDeclaration","scope":3038,"src":"3340:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2982,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"version","nameLocation":"3374:7:20","nodeType":"VariableDeclaration","scope":3038,"src":"3360:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2984,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:20"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"3383:0:20"},"scope":3168,"src":"3328:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"3907:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3046,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}],"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:20","typeDescriptions":{}}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3048,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3938:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3050,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3052,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3970:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3061,"nodeType":"Block","src":"4046:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3058,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4067:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3043,"id":3060,"nodeType":"Return","src":"4060:30:20"}]},"id":3062,"nodeType":"IfStatement","src":"3917:184:20","trueBody":{"id":3057,"nodeType":"Block","src":"3986:54:20","statements":[{"expression":{"id":3055,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"4007:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3043,"id":3056,"nodeType":"Return","src":"4000:29:20"}]}}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"3765:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:20","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[],"src":"3872:2:20"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3064,"src":"3898:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:20"},"scope":3168,"src":"3845:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"4177:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3072,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"4215:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3073,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"4226:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3074,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"4239:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3075,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3079,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:20","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3070,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3069,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3068,"id":3083,"nodeType":"Return","src":"4187:98:20"}]},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:20","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[],"src":"4143:2:20"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"4168:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:20"},"scope":3168,"src":"4113:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3100,"nodeType":"Block","src":"5003:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3095,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5053:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3097,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5075:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3093,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5020:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3242_$","typeString":"type(library MessageHashUtils)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"5020:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3092,"id":3099,"nodeType":"Return","src":"5013:73:20"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"4298:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3101,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:20","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:20","nodeType":"VariableDeclaration","scope":3101,"src":"4943:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:20"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3101,"src":"4994:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:20"},"scope":3168,"src":"4917:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[199],"body":{"id":3142,"nodeType":"Block","src":"5472:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3121,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"5533:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3123,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5560:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3125,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3129,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3168","typeString":"contract EIP712"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:20","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:20","typeDescriptions":{}}},"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3136,"nodeType":"ArrayTypeName","src":"5672:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3119,"id":3141,"nodeType":"Return","src":"5482:212:20"}]},"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"5099:40:20","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:20","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[],"src":"5165:2:20"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"fields","nameLocation":"5249:6:20","nodeType":"VariableDeclaration","scope":3143,"src":"5242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3104,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"name","nameLocation":"5283:4:20","nodeType":"VariableDeclaration","scope":3143,"src":"5269:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3106,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"version","nameLocation":"5315:7:20","nodeType":"VariableDeclaration","scope":3143,"src":"5301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3108,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:20","nodeType":"VariableDeclaration","scope":3143,"src":"5336:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:20","nodeType":"VariableDeclaration","scope":3143,"src":"5365:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"salt","nameLocation":"5412:4:20","nodeType":"VariableDeclaration","scope":3143,"src":"5404:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:20","nodeType":"VariableDeclaration","scope":3143,"src":"5430:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ArrayTypeName","src":"5430:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:20"},"scope":3168,"src":"5144:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3154,"nodeType":"Block","src":"6082:65:20","statements":[{"expression":{"arguments":[{"id":3151,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"6126:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3149,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"6099:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2117,"src":"6099:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1938_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3148,"id":3153,"nodeType":"Return","src":"6092:48:20"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"5707:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:20","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[],"src":"6041:2:20"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"6067:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3146,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:20"},"scope":3168,"src":"6021:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3166,"nodeType":"Block","src":"6537:71:20","statements":[{"expression":{"arguments":[{"id":3163,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"6584:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3161,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"6554:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1938","typeString":"ShortString"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2117,"src":"6554:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1938_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1938_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3160,"id":3165,"nodeType":"Return","src":"6547:54:20"}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"6153:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:20","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[],"src":"6496:2:20"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"6522:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3158,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:20"},"scope":3168,"src":"6473:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3169,"src":"1960:4650:20","usedErrors":[1946,1948],"usedEvents":[180]}],"src":"113:6498:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3242],"Strings":[2593]},"id":3243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3170,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3243,"sourceUnit":2594,"src":"149:39:21","symbolAliases":[{"foreign":{"id":3171,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3242,"linearizedBaseContracts":[3242],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3182,"nodeType":"Block","src":"1314:341:21","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:21"},"nodeType":"YulFunctionCall","src":"1363:48:21"},"nodeType":"YulExpressionStatement","src":"1363:48:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:21","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:21"},"nodeType":"YulFunctionCall","src":"1465:25:21"},"nodeType":"YulExpressionStatement","src":"1465:25:21"},{"nodeType":"YulAssignment","src":"1544:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:21"},"nodeType":"YulFunctionCall","src":"1554:21:21"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3179,"isOffset":false,"isSlot":false,"src":"1544:6:21","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"1478:11:21","valueSize":1}],"flags":["memory-safe"],"id":3181,"nodeType":"InlineAssembly","src":"1324:325:21"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"552:665:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:21","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:21","nodeType":"VariableDeclaration","scope":3183,"src":"1254:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:21"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"digest","nameLocation":"1306:6:21","nodeType":"VariableDeclaration","scope":3183,"src":"1298:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:21"},"scope":3242,"src":"1222:433:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"2207:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3200,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2316:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:21","memberName":"length","nodeType":"MemberAccess","src":"2316:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3198,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2299:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2593_$","typeString":"type(library Strings)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"2299:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3196,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:21","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3204,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2334:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3192,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:21","typeDescriptions":{}}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3191,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3190,"id":3207,"nodeType":"Return","src":"2217:126:21"}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"1661:455:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:21","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"message","nameLocation":"2166:7:21","nodeType":"VariableDeclaration","scope":3209,"src":"2153:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:21"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"2198:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:21"},"scope":3242,"src":"2121:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3228,"nodeType":"Block","src":"2804:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3223,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2860:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3224,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"2871:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3220,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3219,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3218,"id":3227,"nodeType":"Return","src":"2814:63:21"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"2356:332:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:21","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"validator","nameLocation":"2742:9:21","nodeType":"VariableDeclaration","scope":3229,"src":"2734:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"data","nameLocation":"2766:4:21","nodeType":"VariableDeclaration","scope":3229,"src":"2753:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3213,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:21"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"2795:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:21"},"scope":3242,"src":"2693:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"3435:265:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:21"},"nodeType":"YulFunctionCall","src":"3495:11:21"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:21"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:21"},"nodeType":"YulFunctionCall","src":"3519:23:21"},"nodeType":"YulExpressionStatement","src":"3519:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:21"},"nodeType":"YulFunctionCall","src":"3562:14:21"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:21"},"nodeType":"YulFunctionCall","src":"3555:39:21"},"nodeType":"YulExpressionStatement","src":"3555:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:21"},"nodeType":"YulFunctionCall","src":"3614:14:21"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:21"},"nodeType":"YulFunctionCall","src":"3607:34:21"},"nodeType":"YulExpressionStatement","src":"3607:34:21"},{"nodeType":"YulAssignment","src":"3654:30:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:21"},"nodeType":"YulFunctionCall","src":"3664:20:21"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3237,"isOffset":false,"isSlot":false,"src":"3654:6:21","valueSize":1},{"declaration":3232,"isOffset":false,"isSlot":false,"src":"3578:15:21","valueSize":1},{"declaration":3234,"isOffset":false,"isSlot":false,"src":"3630:10:21","valueSize":1}],"flags":["memory-safe"],"id":3239,"nodeType":"InlineAssembly","src":"3445:249:21"}]},"documentation":{"id":3230,"nodeType":"StructuredDocumentation","src":"2890:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:21","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:21","nodeType":"VariableDeclaration","scope":3241,"src":"3351:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:21","nodeType":"VariableDeclaration","scope":3241,"src":"3376:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:21"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"digest","nameLocation":"3427:6:21","nodeType":"VariableDeclaration","scope":3241,"src":"3419:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:21"},"scope":3242,"src":"3326:374:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3243,"src":"521:3181:21","usedErrors":[],"usedEvents":[]}],"src":"123:3580:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3266],"IERC165":[3278]},"id":3267,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3267,"sourceUnit":3279,"src":"140:38:22","symbolAliases":[{"foreign":{"id":3245,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3248,"name":"IERC165","nameLocations":["688:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3278,"src":"688:7:22"},"id":3249,"nodeType":"InheritanceSpecifier","src":"688:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"180:479:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3266,"linearizedBaseContracts":[3266,3278],"name":"ERC165","nameLocation":"678:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3277],"body":{"id":3264,"nodeType":"Block","src":"845:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"862:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3259,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"882:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3278_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3278_$","typeString":"type(contract IERC165)"}],"id":3258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3278","typeString":"type(contract IERC165)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3256,"id":3263,"nodeType":"Return","src":"855:47:22"}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"702:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:22","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:22","nodeType":"VariableDeclaration","scope":3265,"src":"790:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3251,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:22"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"839:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3254,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:22"},"scope":3266,"src":"763:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3267,"src":"660:251:22","usedErrors":[],"usedEvents":[]}],"src":"114:798:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3278]},"id":3279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3268,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"141:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3278,"linearizedBaseContracts":[3278],"name":"IERC165","nameLocation":"432:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"446:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3277,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:23","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:23","nodeType":"VariableDeclaration","scope":3277,"src":"818:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:23"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"861:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3274,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:23"},"scope":3278,"src":"791:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3279,"src":"422:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:755:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4884],"Panic":[1746],"SafeCast":[6649]},"id":4885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3280,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4885,"sourceUnit":1747,"src":"129:35:24","symbolAliases":[{"foreign":{"id":3281,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4885,"sourceUnit":6650,"src":"165:40:24","symbolAliases":[{"foreign":{"id":3283,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4884,"linearizedBaseContracts":[4884],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3290,"members":[{"id":3286,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":3287,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":3288,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":3289,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":3321,"nodeType":"Block","src":"677:140:24","statements":[{"id":3320,"nodeType":"UncheckedBlock","src":"687:124:24","statements":[{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"c","nameLocation":"719:1:24","nodeType":"VariableDeclaration","scope":3320,"src":"711:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3307,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"727:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"746:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"750:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3315,"nodeType":"IfStatement","src":"742:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3301,"id":3314,"nodeType":"Return","src":"753:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3317,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"798:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3301,"id":3319,"nodeType":"Return","src":"784:16:24"}]}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"475:106:24","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:24","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"a","nameLocation":"610:1:24","nodeType":"VariableDeclaration","scope":3322,"src":"602:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"b","nameLocation":"621:1:24","nodeType":"VariableDeclaration","scope":3322,"src":"613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:24"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"success","nameLocation":"652:7:24","nodeType":"VariableDeclaration","scope":3322,"src":"647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3297,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"result","nameLocation":"669:6:24","nodeType":"VariableDeclaration","scope":3322,"src":"661:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:24"},"scope":4884,"src":"586:231:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3349,"nodeType":"Block","src":"1028:113:24","statements":[{"id":3348,"nodeType":"UncheckedBlock","src":"1038:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"1070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"1062:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3333,"id":3340,"nodeType":"Return","src":"1073:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"1118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1122:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3333,"id":3347,"nodeType":"Return","src":"1104:20:24"}]}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"823:109:24","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:24","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"a","nameLocation":"961:1:24","nodeType":"VariableDeclaration","scope":3350,"src":"953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"b","nameLocation":"972:1:24","nodeType":"VariableDeclaration","scope":3350,"src":"964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:24"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"success","nameLocation":"1003:7:24","nodeType":"VariableDeclaration","scope":3350,"src":"998:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3329,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"result","nameLocation":"1020:6:24","nodeType":"VariableDeclaration","scope":3350,"src":"1012:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:24"},"scope":4884,"src":"937:204:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"1355:417:24","statements":[{"id":3390,"nodeType":"UncheckedBlock","src":"1365:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1623:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"1619:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3361,"id":3368,"nodeType":"Return","src":"1631:16:24"}},{"assignments":[3371],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"c","nameLocation":"1669:1:24","nodeType":"VariableDeclaration","scope":3390,"src":"1661:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3375,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1673:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1677:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"1696:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1700:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1705:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3385,"nodeType":"IfStatement","src":"1692:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3361,"id":3384,"nodeType":"Return","src":"1708:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3387,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"1753:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3361,"id":3389,"nodeType":"Return","src":"1739:16:24"}]}]},"documentation":{"id":3351,"nodeType":"StructuredDocumentation","src":"1147:112:24","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:24","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"a","nameLocation":"1288:1:24","nodeType":"VariableDeclaration","scope":3392,"src":"1280:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"b","nameLocation":"1299:1:24","nodeType":"VariableDeclaration","scope":3392,"src":"1291:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:24"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"success","nameLocation":"1330:7:24","nodeType":"VariableDeclaration","scope":3392,"src":"1325:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3357,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"result","nameLocation":"1347:6:24","nodeType":"VariableDeclaration","scope":3392,"src":"1339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:24"},"scope":4884,"src":"1264:508:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3419,"nodeType":"Block","src":"1987:114:24","statements":[{"id":3418,"nodeType":"UncheckedBlock","src":"1997:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"2025:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"nodeType":"IfStatement","src":"2021:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3403,"id":3410,"nodeType":"Return","src":"2033:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"2078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"2082:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3403,"id":3417,"nodeType":"Return","src":"2064:20:24"}]}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"1778:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:24","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"a","nameLocation":"1920:1:24","nodeType":"VariableDeclaration","scope":3420,"src":"1912:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"b","nameLocation":"1931:1:24","nodeType":"VariableDeclaration","scope":3420,"src":"1923:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:24"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"success","nameLocation":"1962:7:24","nodeType":"VariableDeclaration","scope":3420,"src":"1957:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3399,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"result","nameLocation":"1979:6:24","nodeType":"VariableDeclaration","scope":3420,"src":"1971:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:24"},"scope":4884,"src":"1896:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3447,"nodeType":"Block","src":"2326:114:24","statements":[{"id":3446,"nodeType":"UncheckedBlock","src":"2336:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2364:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"2360:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3431,"id":3438,"nodeType":"Return","src":"2372:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"2417:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2421:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3431,"id":3445,"nodeType":"Return","src":"2403:20:24"}]}]},"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"2107:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:24","nodeType":"FunctionDefinition","parameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"a","nameLocation":"2259:1:24","nodeType":"VariableDeclaration","scope":3448,"src":"2251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"b","nameLocation":"2270:1:24","nodeType":"VariableDeclaration","scope":3448,"src":"2262:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:24"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"success","nameLocation":"2301:7:24","nodeType":"VariableDeclaration","scope":3448,"src":"2296:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3427,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"result","nameLocation":"2318:6:24","nodeType":"VariableDeclaration","scope":3448,"src":"2310:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:24"},"scope":4884,"src":"2235:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"2912:207:24","statements":[{"id":3473,"nodeType":"UncheckedBlock","src":"2922:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"3060:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"3066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"3070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3467,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"3091:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3465,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"3075:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"3075:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3459,"id":3472,"nodeType":"Return","src":"3053:49:24"}]}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"2446:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:24","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"condition","nameLocation":"2847:9:24","nodeType":"VariableDeclaration","scope":3475,"src":"2842:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3450,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"a","nameLocation":"2866:1:24","nodeType":"VariableDeclaration","scope":3475,"src":"2858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"b","nameLocation":"2877:1:24","nodeType":"VariableDeclaration","scope":3475,"src":"2869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:24"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"2903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:24"},"scope":4884,"src":"2825:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3493,"nodeType":"Block","src":"3256:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3281:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"3285:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"3291:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3273:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3484,"id":3492,"nodeType":"Return","src":"3266:27:24"}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"3125:59:24","text":" @dev Returns the largest of two numbers."},"id":3494,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:24","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"a","nameLocation":"3210:1:24","nodeType":"VariableDeclaration","scope":3494,"src":"3202:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"b","nameLocation":"3221:1:24","nodeType":"VariableDeclaration","scope":3494,"src":"3213:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:24"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3494,"src":"3247:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:24"},"scope":4884,"src":"3189:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"3438:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"3463:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"3470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3473:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3504,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3503,"id":3511,"nodeType":"Return","src":"3448:27:24"}]},"documentation":{"id":3495,"nodeType":"StructuredDocumentation","src":"3306:60:24","text":" @dev Returns the smallest of two numbers."},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:24","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"a","nameLocation":"3392:1:24","nodeType":"VariableDeclaration","scope":3513,"src":"3384:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"b","nameLocation":"3403:1:24","nodeType":"VariableDeclaration","scope":3513,"src":"3395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:24"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3513,"src":"3429:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:24"},"scope":4884,"src":"3371:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3535,"nodeType":"Block","src":"3666:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"3721:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"3725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"3731:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"3735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3522,"id":3534,"nodeType":"Return","src":"3713:28:24"}]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"3488:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:24","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"a","nameLocation":"3620:1:24","nodeType":"VariableDeclaration","scope":3536,"src":"3612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"b","nameLocation":"3631:1:24","nodeType":"VariableDeclaration","scope":3536,"src":"3623:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:24"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"3657:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:24"},"scope":4884,"src":"3595:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"4040:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"4054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3557,"nodeType":"IfStatement","src":"4050:150:24","trueBody":{"id":3556,"nodeType":"Block","src":"4062:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":3552,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4166:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"4166:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3549,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4154:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"4154:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"ExpressionStatement","src":"4154:35:24"}]}},{"id":3575,"nodeType":"UncheckedBlock","src":"4583:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"4630:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"4614:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"4614:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"4641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"4650:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3545,"id":3574,"nodeType":"Return","src":"4607:49:24"}]}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"3754:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:24","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"a","nameLocation":"3994:1:24","nodeType":"VariableDeclaration","scope":3577,"src":"3986:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"b","nameLocation":"4005:1:24","nodeType":"VariableDeclaration","scope":3577,"src":"3997:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:24"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"4031:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:24"},"scope":4884,"src":"3969:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3713,"nodeType":"Block","src":"5094:4128:24","statements":[{"id":3712,"nodeType":"UncheckedBlock","src":"5104:4112:24","statements":[{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:24","nodeType":"VariableDeclaration","scope":3712,"src":"5433:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5449:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3592,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:24"},{"assignments":[3596],"declarations":[{"constant":false,"id":3596,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:24","nodeType":"VariableDeclaration","scope":3712,"src":"5513:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3597,"nodeType":"VariableDeclarationStatement","src":"5513:13:24"},{"AST":{"nodeType":"YulBlock","src":"5593:122:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:24"},"nodeType":"YulFunctionCall","src":"5634:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:24"},"nodeType":"YulFunctionCall","src":"5621:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:24","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:24"},"nodeType":"YulFunctionCall","src":"5671:14:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:24"},"nodeType":"YulFunctionCall","src":"5687:13:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:24"},"nodeType":"YulFunctionCall","src":"5667:34:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3590,"isOffset":false,"isSlot":false,"src":"5679:5:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"5694:5:24","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"5658:5:24","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"5628:1:24","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"5631:1:24","valueSize":1}],"id":3598,"nodeType":"InlineAssembly","src":"5584:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"5796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3607,"nodeType":"IfStatement","src":"5792:368:24","trueBody":{"id":3606,"nodeType":"Block","src":"5808:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"6126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3603,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"6134:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3588,"id":3605,"nodeType":"Return","src":"6119:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"6270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3609,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"6285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3626,"nodeType":"IfStatement","src":"6266:143:24","trueBody":{"id":3625,"nodeType":"Block","src":"6292:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"6330:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3618,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6348:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"6348:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3620,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6372:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"6372:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3614,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"6322:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3611,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6310:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"6310:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3624,"nodeType":"ExpressionStatement","src":"6310:84:24"}]}},{"assignments":[3628],"declarations":[{"constant":false,"id":3628,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:24","nodeType":"VariableDeclaration","scope":3712,"src":"6664:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3629,"nodeType":"VariableDeclarationStatement","src":"6664:17:24"},{"AST":{"nodeType":"YulBlock","src":"6704:291:24","statements":[{"nodeType":"YulAssignment","src":"6773:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:24"},"nodeType":"YulFunctionCall","src":"6786:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:24"}]},{"nodeType":"YulAssignment","src":"6893:41:24","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:24"},"nodeType":"YulFunctionCall","src":"6913:20:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:24"},"nodeType":"YulFunctionCall","src":"6902:32:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:24"}]},{"nodeType":"YulAssignment","src":"6951:30:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:24"},"nodeType":"YulFunctionCall","src":"6960:21:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3584,"isOffset":false,"isSlot":false,"src":"6799:11:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"6927:5:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"6951:5:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"6964:5:24","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"6893:5:24","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"6906:5:24","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"6773:9:24","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"6916:9:24","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"6971:9:24","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"6793:1:24","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"6796:1:24","valueSize":1}],"id":3630,"nodeType":"InlineAssembly","src":"6695:300:24"},{"assignments":[3632],"declarations":[{"constant":false,"id":3632,"mutability":"mutable","name":"twos","nameLocation":"7207:4:24","nodeType":"VariableDeclaration","scope":3712,"src":"7199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3639,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3633,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"7214:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3635,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"7233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:24"},{"AST":{"nodeType":"YulBlock","src":"7268:366:24","statements":[{"nodeType":"YulAssignment","src":"7333:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:24"},"nodeType":"YulFunctionCall","src":"7348:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:24"}]},{"nodeType":"YulAssignment","src":"7437:25:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:24"},"nodeType":"YulFunctionCall","src":"7446:16:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:24"}]},{"nodeType":"YulAssignment","src":"7581:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:24"},"nodeType":"YulFunctionCall","src":"7597:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:24"},"nodeType":"YulFunctionCall","src":"7593:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:24"},"nodeType":"YulFunctionCall","src":"7589:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3584,"isOffset":false,"isSlot":false,"src":"7333:11:24","valueSize":1},{"declaration":3584,"isOffset":false,"isSlot":false,"src":"7352:11:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"7437:5:24","valueSize":1},{"declaration":3590,"isOffset":false,"isSlot":false,"src":"7450:5:24","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"7365:4:24","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"7457:4:24","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"7581:4:24","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"7604:4:24","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"7611:4:24","valueSize":1}],"id":3640,"nodeType":"InlineAssembly","src":"7259:375:24"},{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3641,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7700:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"7709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3643,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"7717:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3646,"nodeType":"ExpressionStatement","src":"7700:21:24"},{"assignments":[3648],"declarations":[{"constant":false,"id":3648,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:24","nodeType":"VariableDeclaration","scope":3712,"src":"8056:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3650,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8079:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:24"},{"expression":{"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8327:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3659,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8341:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3663,"nodeType":"ExpressionStatement","src":"8312:36:24"},{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3664,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8397:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3667,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8411:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3671,"nodeType":"ExpressionStatement","src":"8382:36:24"},{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8454:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8469:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3675,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8483:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3679,"nodeType":"ExpressionStatement","src":"8454:36:24"},{"expression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3680,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8525:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3683,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8554:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3687,"nodeType":"ExpressionStatement","src":"8525:36:24"},{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3688,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8613:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3691,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8627:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"8598:36:24"},{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"8687:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3699,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"nodeType":"ExpressionStatement","src":"8672:36:24"},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"9154:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9163:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3706,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"9171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"9154:24:24"},{"expression":{"id":3710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"9199:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3588,"id":3711,"nodeType":"Return","src":"9192:13:24"}]}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"4679:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:24","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"x","nameLocation":"5020:1:24","nodeType":"VariableDeclaration","scope":3714,"src":"5012:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"y","nameLocation":"5031:1:24","nodeType":"VariableDeclaration","scope":3714,"src":"5023:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:24","nodeType":"VariableDeclaration","scope":3714,"src":"5034:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:24"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"result","nameLocation":"5086:6:24","nodeType":"VariableDeclaration","scope":3714,"src":"5078:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:24"},"scope":4884,"src":"4996:4226:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"9461:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3730,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9485:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3731,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"9488:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"9491:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3729,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3714,3751],"referencedDeclaration":3714,"src":"9478:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3737,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"9539:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":3736,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"9522:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3290_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3740,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9559:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3741,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"9562:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3742,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"9565:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3739,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"9506:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"9506:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3728,"id":3749,"nodeType":"Return","src":"9471:111:24"}]},"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"9228:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:24","nodeType":"FunctionDefinition","parameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"x","nameLocation":"9375:1:24","nodeType":"VariableDeclaration","scope":3751,"src":"9367:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"y","nameLocation":"9386:1:24","nodeType":"VariableDeclaration","scope":3751,"src":"9378:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:24","nodeType":"VariableDeclaration","scope":3751,"src":"9389:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:24","nodeType":"VariableDeclaration","scope":3751,"src":"9410:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":3723,"nodeType":"UserDefinedTypeName","pathNode":{"id":3722,"name":"Rounding","nameLocations":["9410:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"9410:8:24"},"referencedDeclaration":3290,"src":"9410:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:24"},"returnParameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"9452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:24"},"scope":4884,"src":"9351:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"10223:1849:24","statements":[{"id":3846,"nodeType":"UncheckedBlock","src":"10233:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"10261:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3766,"nodeType":"IfStatement","src":"10257:20:24","trueBody":{"expression":{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3760,"id":3765,"nodeType":"Return","src":"10269:8:24"}},{"assignments":[3768],"declarations":[{"constant":false,"id":3768,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:24","nodeType":"VariableDeclaration","scope":3846,"src":"10748:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3772,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10768:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3770,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"10772:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:24"},{"assignments":[3774],"declarations":[{"constant":false,"id":3774,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:24","nodeType":"VariableDeclaration","scope":3846,"src":"10787:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3776,"initialValue":{"id":3775,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"10801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:24"},{"assignments":[3778],"declarations":[{"constant":false,"id":3778,"mutability":"mutable","name":"x","nameLocation":"10945:1:24","nodeType":"VariableDeclaration","scope":3846,"src":"10938:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3777,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3780,"initialValue":{"hexValue":"30","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:24"},{"assignments":[3782],"declarations":[{"constant":false,"id":3782,"mutability":"mutable","name":"y","nameLocation":"10971:1:24","nodeType":"VariableDeclaration","scope":3846,"src":"10964:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3781,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3784,"initialValue":{"hexValue":"31","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:24"},{"body":{"id":3821,"nodeType":"Block","src":"11014:882:24","statements":[{"assignments":[3789],"declarations":[{"constant":false,"id":3789,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:24","nodeType":"VariableDeclaration","scope":3821,"src":"11032:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3793,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"11051:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3791,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"11057:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:24"},{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3794,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"11086:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3795,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"11091:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3796,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3797,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"11436:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"11442:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3800,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"11454:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3805,"nodeType":"ExpressionStatement","src":"11085:395:24"},{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"11500:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3807,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11503:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3809,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11585:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"11839:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11843:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3814,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"11854:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3812,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"ExpressionStatement","src":"11499:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"10998:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3822,"nodeType":"WhileStatement","src":"10991:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"11914:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3828,"nodeType":"IfStatement","src":"11910:22:24","trueBody":{"expression":{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3760,"id":3827,"nodeType":"Return","src":"11924:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"11983:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:24","subExpression":{"id":3836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"12003:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:24","typeDescriptions":{}}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"12015:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:24","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3829,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"11975:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3760,"id":3845,"nodeType":"Return","src":"11968:50:24"}]}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"9595:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:24","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"a","nameLocation":"10177:1:24","nodeType":"VariableDeclaration","scope":3848,"src":"10169:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"n","nameLocation":"10188:1:24","nodeType":"VariableDeclaration","scope":3848,"src":"10180:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:24"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3848,"src":"10214:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:24"},"scope":4884,"src":"10153:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3868,"nodeType":"Block","src":"12672:82:24","statements":[{"id":3867,"nodeType":"UncheckedBlock","src":"12682:66:24","statements":[{"expression":{"arguments":[{"id":3860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"12725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3864,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3858,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"12713:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4884_$","typeString":"type(library Math)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"12713:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3857,"id":3866,"nodeType":"Return","src":"12706:31:24"}]}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"12078:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3869,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:24","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"a","nameLocation":"12626:1:24","nodeType":"VariableDeclaration","scope":3869,"src":"12618:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"p","nameLocation":"12637:1:24","nodeType":"VariableDeclaration","scope":3869,"src":"12629:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:24"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"12663:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:24"},"scope":4884,"src":"12597:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"13524:174:24","statements":[{"assignments":[3882,3884],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"success","nameLocation":"13540:7:24","nodeType":"VariableDeclaration","scope":3904,"src":"13535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"result","nameLocation":"13557:6:24","nodeType":"VariableDeclaration","scope":3904,"src":"13549:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3890,"initialValue":{"arguments":[{"id":3886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"13577:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3887,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13580:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3888,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"13583:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3885,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3929,4011],"referencedDeclaration":3929,"src":"13567:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:24"},{"condition":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:24","subExpression":{"id":3891,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"13600:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3901,"nodeType":"IfStatement","src":"13595:74:24","trueBody":{"id":3900,"nodeType":"Block","src":"13609:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":3896,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"13635:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"13635:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3893,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"13623:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"13623:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3899,"nodeType":"ExpressionStatement","src":"13623:35:24"}]}},{"expression":{"id":3902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"13685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3880,"id":3903,"nodeType":"Return","src":"13678:13:24"}]},"documentation":{"id":3870,"nodeType":"StructuredDocumentation","src":"12760:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:24","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"b","nameLocation":"13467:1:24","nodeType":"VariableDeclaration","scope":3905,"src":"13459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"e","nameLocation":"13478:1:24","nodeType":"VariableDeclaration","scope":3905,"src":"13470:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"m","nameLocation":"13489:1:24","nodeType":"VariableDeclaration","scope":3905,"src":"13481:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:24"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"13515:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:24"},"scope":4884,"src":"13443:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3928,"nodeType":"Block","src":"14552:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"14566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3926,"nodeType":"IfStatement","src":"14562:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3918,"id":3925,"nodeType":"Return","src":"14574:17:24"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:24"},"nodeType":"YulFunctionCall","src":"14651:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:24"},"nodeType":"YulFunctionCall","src":"15563:17:24"},"nodeType":"YulExpressionStatement","src":"15563:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:24"},"nodeType":"YulFunctionCall","src":"15600:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:24"},"nodeType":"YulFunctionCall","src":"15593:28:24"},"nodeType":"YulExpressionStatement","src":"15593:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:24"},"nodeType":"YulFunctionCall","src":"15641:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:24"},"nodeType":"YulFunctionCall","src":"15634:28:24"},"nodeType":"YulExpressionStatement","src":"15634:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:24"},"nodeType":"YulFunctionCall","src":"15682:14:24"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:24"},"nodeType":"YulFunctionCall","src":"15675:25:24"},"nodeType":"YulExpressionStatement","src":"15675:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:24"},"nodeType":"YulFunctionCall","src":"15720:14:24"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:24"},"nodeType":"YulFunctionCall","src":"15713:25:24"},"nodeType":"YulExpressionStatement","src":"15713:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:24"},"nodeType":"YulFunctionCall","src":"15758:14:24"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:24"},"nodeType":"YulFunctionCall","src":"15751:25:24"},"nodeType":"YulExpressionStatement","src":"15751:25:24"},{"nodeType":"YulAssignment","src":"15938:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:24"},"nodeType":"YulFunctionCall","src":"15960:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:24","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:24","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:24"},"nodeType":"YulFunctionCall","src":"15949:46:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:24"}]},{"nodeType":"YulAssignment","src":"16008:21:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:24"},"nodeType":"YulFunctionCall","src":"16018:11:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3908,"isOffset":false,"isSlot":false,"src":"15698:1:24","valueSize":1},{"declaration":3910,"isOffset":false,"isSlot":false,"src":"15736:1:24","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"15774:1:24","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"16008:6:24","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"15938:7:24","valueSize":1}],"flags":["memory-safe"],"id":3927,"nodeType":"InlineAssembly","src":"14601:1438:24"}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"13704:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:24","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"b","nameLocation":"14474:1:24","nodeType":"VariableDeclaration","scope":3929,"src":"14466:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"e","nameLocation":"14485:1:24","nodeType":"VariableDeclaration","scope":3929,"src":"14477:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"m","nameLocation":"14496:1:24","nodeType":"VariableDeclaration","scope":3929,"src":"14488:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:24"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"success","nameLocation":"14527:7:24","nodeType":"VariableDeclaration","scope":3929,"src":"14522:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3914,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"result","nameLocation":"14544:6:24","nodeType":"VariableDeclaration","scope":3929,"src":"14536:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:24"},"scope":4884,"src":"14447:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"16242:179:24","statements":[{"assignments":[3942,3944],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"success","nameLocation":"16258:7:24","nodeType":"VariableDeclaration","scope":3964,"src":"16253:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3941,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"result","nameLocation":"16280:6:24","nodeType":"VariableDeclaration","scope":3964,"src":"16267:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3943,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3950,"initialValue":{"arguments":[{"id":3946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"16300:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3947,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"16303:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3948,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"16306:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3945,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3929,4011],"referencedDeclaration":4011,"src":"16290:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:24"},{"condition":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:24","subExpression":{"id":3951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"16323:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"IfStatement","src":"16318:74:24","trueBody":{"id":3960,"nodeType":"Block","src":"16332:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":3956,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"16358:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"16358:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3953,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"16346:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1746_$","typeString":"type(library Panic)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"16346:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3959,"nodeType":"ExpressionStatement","src":"16346:35:24"}]}},{"expression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"16408:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3940,"id":3963,"nodeType":"Return","src":"16401:13:24"}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"16051:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:24","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"b","nameLocation":"16170:1:24","nodeType":"VariableDeclaration","scope":3965,"src":"16157:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3931,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"e","nameLocation":"16186:1:24","nodeType":"VariableDeclaration","scope":3965,"src":"16173:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3933,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"m","nameLocation":"16202:1:24","nodeType":"VariableDeclaration","scope":3965,"src":"16189:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3935,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:24"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"16228:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3938,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:24"},"scope":4884,"src":"16141:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"16675:771:24","statements":[{"condition":{"arguments":[{"id":3980,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"16700:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3979,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"16689:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3989,"nodeType":"IfStatement","src":"16685:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3983,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3978,"id":3988,"nodeType":"Return","src":"16704:28:24"}},{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:24","nodeType":"VariableDeclaration","scope":4010,"src":"16743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"expression":{"id":3992,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"16758:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:24","memberName":"length","nodeType":"MemberAccess","src":"16758:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:24"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"16848:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"16874:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:24","memberName":"length","nodeType":"MemberAccess","src":"16874:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4000,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:24","memberName":"length","nodeType":"MemberAccess","src":"16884:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4002,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"16894:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"16900:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4004,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16903:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4005,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"16906:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3996,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4008,"nodeType":"ExpressionStatement","src":"16848:60:24"},{"AST":{"nodeType":"YulBlock","src":"16944:496:24","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:24","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:24"},"nodeType":"YulFunctionCall","src":"16973:17:24"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:24","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:24"},"nodeType":"YulFunctionCall","src":"17102:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:24","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:24"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:24"},"nodeType":"YulFunctionCall","src":"17124:13:24"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:24"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:24"},"nodeType":"YulFunctionCall","src":"17091:62:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:24"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:24"},"nodeType":"YulFunctionCall","src":"17302:20:24"},"nodeType":"YulExpressionStatement","src":"17302:20:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:24"},"nodeType":"YulFunctionCall","src":"17411:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:24"},"nodeType":"YulFunctionCall","src":"17398:32:24"},"nodeType":"YulExpressionStatement","src":"17398:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3991,"isOffset":false,"isSlot":false,"src":"17148:4:24","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"17317:4:24","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"17424:4:24","valueSize":1},{"declaration":3977,"isOffset":false,"isSlot":false,"src":"16977:6:24","valueSize":1},{"declaration":3977,"isOffset":false,"isSlot":false,"src":"17130:6:24","valueSize":1},{"declaration":3977,"isOffset":false,"isSlot":false,"src":"17309:6:24","valueSize":1},{"declaration":3975,"isOffset":false,"isSlot":false,"src":"17080:7:24","valueSize":1}],"flags":["memory-safe"],"id":4009,"nodeType":"InlineAssembly","src":"16919:521:24"}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"16427:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:24","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"b","nameLocation":"16561:1:24","nodeType":"VariableDeclaration","scope":4011,"src":"16548:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3967,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"e","nameLocation":"16585:1:24","nodeType":"VariableDeclaration","scope":4011,"src":"16572:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3969,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"m","nameLocation":"16609:1:24","nodeType":"VariableDeclaration","scope":4011,"src":"16596:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3971,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:24"},"returnParameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"success","nameLocation":"16645:7:24","nodeType":"VariableDeclaration","scope":4011,"src":"16640:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3974,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"result","nameLocation":"16667:6:24","nodeType":"VariableDeclaration","scope":4011,"src":"16654:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3976,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:24"},"scope":4884,"src":"16520:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4043,"nodeType":"Block","src":"17601:176:24","statements":[{"body":{"id":4039,"nodeType":"Block","src":"17658:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4030,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"17676:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4032,"indexExpression":{"id":4031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"17686:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4038,"nodeType":"IfStatement","src":"17672:68:24","trueBody":{"id":4037,"nodeType":"Block","src":"17695:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4018,"id":4036,"nodeType":"Return","src":"17713:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"17631:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4024,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"17635:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:24","memberName":"length","nodeType":"MemberAccess","src":"17635:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"initializationExpression":{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"i","nameLocation":"17624:1:24","nodeType":"VariableDeclaration","scope":4040,"src":"17616:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"initialValue":{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:24"},"loopExpression":{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:24","subExpression":{"id":4027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"17655:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"17653:3:24"},"nodeType":"ForStatement","src":"17611:139:24"},{"expression":{"hexValue":"74727565","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4018,"id":4042,"nodeType":"Return","src":"17759:11:24"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"17452:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":4044,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:24","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:24","nodeType":"VariableDeclaration","scope":4044,"src":"17549:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4013,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:24"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4044,"src":"17595:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4016,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:24"},"scope":4884,"src":"17529:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4262,"nodeType":"Block","src":"18137:5124:24","statements":[{"id":4261,"nodeType":"UncheckedBlock","src":"18147:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"18241:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4058,"nodeType":"IfStatement","src":"18237:53:24","trueBody":{"id":4057,"nodeType":"Block","src":"18249:41:24","statements":[{"expression":{"id":4055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"18274:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4051,"id":4056,"nodeType":"Return","src":"18267:8:24"}]}},{"assignments":[4060],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"aa","nameLocation":"19225:2:24","nodeType":"VariableDeclaration","scope":4261,"src":"19217:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4062,"initialValue":{"id":4061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"19230:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:24"},{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"xn","nameLocation":"19253:2:24","nodeType":"VariableDeclaration","scope":4261,"src":"19245:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4066,"initialValue":{"hexValue":"31","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"19274:92:24","trueBody":{"id":4081,"nodeType":"Block","src":"19296:70:24","statements":[{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4073,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19314:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4076,"nodeType":"ExpressionStatement","src":"19314:10:24"},{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4077,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19342:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"19342:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19383:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4098,"nodeType":"IfStatement","src":"19379:90:24","trueBody":{"id":4097,"nodeType":"Block","src":"19400:69:24","statements":[{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19418:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"19418:9:24"},{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4093,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19445:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"19445:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19486:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"19482:90:24","trueBody":{"id":4113,"nodeType":"Block","src":"19503:69:24","statements":[{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19521:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"19521:9:24"},{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19548:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"nodeType":"ExpressionStatement","src":"19548:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19589:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4130,"nodeType":"IfStatement","src":"19585:89:24","trueBody":{"id":4129,"nodeType":"Block","src":"19606:68:24","statements":[{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4121,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19624:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4124,"nodeType":"ExpressionStatement","src":"19624:9:24"},{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19651:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4128,"nodeType":"ExpressionStatement","src":"19651:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19691:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"nodeType":"IfStatement","src":"19687:87:24","trueBody":{"id":4145,"nodeType":"Block","src":"19707:67:24","statements":[{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19725:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"19725:8:24"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19751:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4144,"nodeType":"ExpressionStatement","src":"19751:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19791:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4162,"nodeType":"IfStatement","src":"19787:87:24","trueBody":{"id":4161,"nodeType":"Block","src":"19807:67:24","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4153,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19825:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"19825:8:24"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19851:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"19851:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"19891:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"19887:61:24","trueBody":{"id":4173,"nodeType":"Block","src":"19907:41:24","statements":[{"expression":{"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"19925:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ExpressionStatement","src":"19925:8:24"}]}},{"expression":{"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"20368:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4177,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"20378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4183,"nodeType":"ExpressionStatement","src":"20368:18:24"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22273:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22279:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22284:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22288:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"22273:23:24"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22382:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22388:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22393:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4198,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22397:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"22382:23:24"},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22493:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22499:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22504:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4209,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22508:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"22493:23:24"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22602:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22608:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22613:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4220,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22617:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"22602:23:24"},{"expression":{"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22712:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22718:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4231,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22727:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4238,"nodeType":"ExpressionStatement","src":"22712:23:24"},{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4239,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22822:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22828:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"22833:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4242,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"22837:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"22822:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"23211:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"23232:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"23237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"23241:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4251,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"23216:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"23216:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4051,"id":4260,"nodeType":"Return","src":"23204:40:24"}]}]},"documentation":{"id":4045,"nodeType":"StructuredDocumentation","src":"17783:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:24","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"a","nameLocation":"18102:1:24","nodeType":"VariableDeclaration","scope":4263,"src":"18094:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:24"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"18128:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:24"},"scope":4884,"src":"18080:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4296,"nodeType":"Block","src":"23434:171:24","statements":[{"id":4295,"nodeType":"UncheckedBlock","src":"23444:155:24","statements":[{"assignments":[4275],"declarations":[{"constant":false,"id":4275,"mutability":"mutable","name":"result","nameLocation":"23476:6:24","nodeType":"VariableDeclaration","scope":4295,"src":"23468:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4279,"initialValue":{"arguments":[{"id":4277,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23490:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4276,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4263,4297],"referencedDeclaration":4263,"src":"23485:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"23513:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4284,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"23555:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":4283,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"23538:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3290_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"23568:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"23577:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23586:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4281,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"23522:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"23522:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4273,"id":4294,"nodeType":"Return","src":"23506:82:24"}]}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"23267:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4297,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:24","nodeType":"FunctionDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"a","nameLocation":"23380:1:24","nodeType":"VariableDeclaration","scope":4297,"src":"23372:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:24","nodeType":"VariableDeclaration","scope":4297,"src":"23383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":4268,"nodeType":"UserDefinedTypeName","pathNode":{"id":4267,"name":"Rounding","nameLocations":["23383:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"23383:8:24"},"referencedDeclaration":3290,"src":"23383:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:24"},"returnParameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4297,"src":"23425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:24"},"scope":4884,"src":"23358:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4492,"nodeType":"Block","src":"23796:981:24","statements":[{"assignments":[4306],"declarations":[{"constant":false,"id":4306,"mutability":"mutable","name":"result","nameLocation":"23814:6:24","nodeType":"VariableDeclaration","scope":4492,"src":"23806:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4308,"initialValue":{"hexValue":"30","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:24"},{"assignments":[4310],"declarations":[{"constant":false,"id":4310,"mutability":"mutable","name":"exp","nameLocation":"23842:3:24","nodeType":"VariableDeclaration","scope":4492,"src":"23834:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"nodeType":"VariableDeclarationStatement","src":"23834:11:24"},{"id":4489,"nodeType":"UncheckedBlock","src":"23855:893:24","statements":[{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"23879:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"23907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4314,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"23891:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"23891:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4327,"nodeType":"ExpressionStatement","src":"23879:51:24"},{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"23944:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4329,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"23954:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4331,"nodeType":"ExpressionStatement","src":"23944:13:24"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"23971:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4333,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"23981:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"nodeType":"ExpressionStatement","src":"23971:13:24"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"23999:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24026:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4338,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24010:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24010:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"23999:49:24"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24062:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4353,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24072:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"24062:13:24"},{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24089:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4357,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24099:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4359,"nodeType":"ExpressionStatement","src":"24089:13:24"},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24117:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24144:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4362,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24128:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24128:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"24117:49:24"},{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24180:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4377,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24190:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"24180:13:24"},{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24207:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4381,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24217:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"24207:13:24"},{"expression":{"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24235:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24262:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4386,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24246:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24246:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4399,"nodeType":"ExpressionStatement","src":"24235:49:24"},{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4401,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24308:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"24298:13:24"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24325:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4405,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24335:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"24325:13:24"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24353:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4410,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24363:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24363:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4423,"nodeType":"ExpressionStatement","src":"24353:47:24"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4425,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24424:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"24414:13:24"},{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24441:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4429,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24451:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"24441:13:24"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24469:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4434,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24479:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24479:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"24469:47:24"},{"expression":{"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24530:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4449,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24540:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"nodeType":"ExpressionStatement","src":"24530:13:24"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24557:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4453,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24567:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"24557:13:24"},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24585:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4458,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24595:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24595:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"24585:47:24"},{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24646:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4473,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24656:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4475,"nodeType":"ExpressionStatement","src":"24646:13:24"},{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24673:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4477,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"24683:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ExpressionStatement","src":"24673:13:24"},{"expression":{"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24701:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"24727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"24711:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"24711:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4488,"nodeType":"ExpressionStatement","src":"24701:36:24"}]},{"expression":{"id":4490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"24764:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4304,"id":4491,"nodeType":"Return","src":"24757:13:24"}]},"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"23611:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:24","nodeType":"FunctionDefinition","parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"value","nameLocation":"23757:5:24","nodeType":"VariableDeclaration","scope":4493,"src":"23749:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:24"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"23787:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:24"},"scope":4884,"src":"23735:1042:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"25010:175:24","statements":[{"id":4525,"nodeType":"UncheckedBlock","src":"25020:159:24","statements":[{"assignments":[4505],"declarations":[{"constant":false,"id":4505,"mutability":"mutable","name":"result","nameLocation":"25052:6:24","nodeType":"VariableDeclaration","scope":4525,"src":"25044:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4509,"initialValue":{"arguments":[{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"25066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4493,4527],"referencedDeclaration":4493,"src":"25061:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"25093:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4514,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"25135:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":4513,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"25118:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3290_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"25153:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"25162:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4511,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"25102:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"25102:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4503,"id":4524,"nodeType":"Return","src":"25086:82:24"}]}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"24783:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:24","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"value","nameLocation":"24952:5:24","nodeType":"VariableDeclaration","scope":4527,"src":"24944:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4499,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:24","nodeType":"VariableDeclaration","scope":4527,"src":"24959:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":4498,"nodeType":"UserDefinedTypeName","pathNode":{"id":4497,"name":"Rounding","nameLocations":["24959:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"24959:8:24"},"referencedDeclaration":3290,"src":"24959:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:24"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4527,"src":"25001:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:24"},"scope":4884,"src":"24930:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"25378:854:24","statements":[{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"result","nameLocation":"25396:6:24","nodeType":"VariableDeclaration","scope":4655,"src":"25388:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4538,"initialValue":{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:24"},{"id":4652,"nodeType":"UncheckedBlock","src":"25416:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25444:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4555,"nodeType":"IfStatement","src":"25440:103:24","trueBody":{"id":4554,"nodeType":"Block","src":"25463:80:24","statements":[{"expression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25481:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"nodeType":"ExpressionStatement","src":"25481:17:24"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"25516:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4553,"nodeType":"ExpressionStatement","src":"25516:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25560:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"25556:103:24","trueBody":{"id":4571,"nodeType":"Block","src":"25579:80:24","statements":[{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25597:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"25597:17:24"},{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"25632:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4570,"nodeType":"ExpressionStatement","src":"25632:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25676:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4589,"nodeType":"IfStatement","src":"25672:103:24","trueBody":{"id":4588,"nodeType":"Block","src":"25695:80:24","statements":[{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25713:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"25713:17:24"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"25748:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4587,"nodeType":"ExpressionStatement","src":"25748:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25792:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"25788:100:24","trueBody":{"id":4605,"nodeType":"Block","src":"25810:78:24","statements":[{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25828:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"25828:16:24"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"25862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"25862:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4623,"nodeType":"IfStatement","src":"25901:100:24","trueBody":{"id":4622,"nodeType":"Block","src":"25923:78:24","statements":[{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"25941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"25941:16:24"},{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"25975:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4621,"nodeType":"ExpressionStatement","src":"25975:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"26018:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"IfStatement","src":"26014:100:24","trueBody":{"id":4639,"nodeType":"Block","src":"26036:78:24","statements":[{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"26054:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"26054:16:24"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"26088:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4638,"nodeType":"ExpressionStatement","src":"26088:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"26131:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4651,"nodeType":"IfStatement","src":"26127:66:24","trueBody":{"id":4650,"nodeType":"Block","src":"26149:44:24","statements":[{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"26167:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"26167:11:24"}]}}]},{"expression":{"id":4653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"26219:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4534,"id":4654,"nodeType":"Return","src":"26212:13:24"}]},"documentation":{"id":4528,"nodeType":"StructuredDocumentation","src":"25191:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:24","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"value","nameLocation":"25339:5:24","nodeType":"VariableDeclaration","scope":4656,"src":"25331:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:24"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4656,"src":"25369:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:24"},"scope":4884,"src":"25316:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"26467:177:24","statements":[{"id":4688,"nodeType":"UncheckedBlock","src":"26477:161:24","statements":[{"assignments":[4668],"declarations":[{"constant":false,"id":4668,"mutability":"mutable","name":"result","nameLocation":"26509:6:24","nodeType":"VariableDeclaration","scope":4688,"src":"26501:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4672,"initialValue":{"arguments":[{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"26524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4669,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4656,4690],"referencedDeclaration":4656,"src":"26518:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"26551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4677,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"26593:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":4676,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"26576:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3290_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"26612:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"26621:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4674,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"26560:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"26560:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4666,"id":4687,"nodeType":"Return","src":"26544:83:24"}]}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"26238:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:24","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"26409:5:24","nodeType":"VariableDeclaration","scope":4690,"src":"26401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:24","nodeType":"VariableDeclaration","scope":4690,"src":"26416:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":4661,"nodeType":"UserDefinedTypeName","pathNode":{"id":4660,"name":"Rounding","nameLocations":["26416:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"26416:8:24"},"referencedDeclaration":3290,"src":"26416:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:24"},"returnParameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"26458:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:24"},"scope":4884,"src":"26386:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"26964:674:24","statements":[{"assignments":[4699],"declarations":[{"constant":false,"id":4699,"mutability":"mutable","name":"result","nameLocation":"26982:6:24","nodeType":"VariableDeclaration","scope":4826,"src":"26974:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4701,"initialValue":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:24"},{"assignments":[4703],"declarations":[{"constant":false,"id":4703,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:24","nodeType":"VariableDeclaration","scope":4826,"src":"27002:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4704,"nodeType":"VariableDeclarationStatement","src":"27002:12:24"},{"id":4823,"nodeType":"UncheckedBlock","src":"27024:585:24","statements":[{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27048:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27071:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4706,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27055:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27055:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"27048:46:24"},{"expression":{"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27108:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27118:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4724,"nodeType":"ExpressionStatement","src":"27108:20:24"},{"expression":{"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27142:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27152:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4730,"nodeType":"ExpressionStatement","src":"27142:19:24"},{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4731,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27176:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27183:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27183:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"27176:45:24"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27235:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27245:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"27235:19:24"},{"expression":{"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27268:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27278:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4756,"nodeType":"ExpressionStatement","src":"27268:18:24"},{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27301:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27324:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27308:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27308:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4770,"nodeType":"ExpressionStatement","src":"27301:45:24"},{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27360:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27370:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ExpressionStatement","src":"27360:19:24"},{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27403:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4782,"nodeType":"ExpressionStatement","src":"27393:18:24"},{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4783,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27426:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27433:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27433:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4796,"nodeType":"ExpressionStatement","src":"27426:45:24"},{"expression":{"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27485:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27495:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4802,"nodeType":"ExpressionStatement","src":"27485:19:24"},{"expression":{"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27518:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"27528:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4808,"nodeType":"ExpressionStatement","src":"27518:18:24"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4809,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"27577:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4810,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27561:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27561:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4822,"nodeType":"ExpressionStatement","src":"27551:47:24"}]},{"expression":{"id":4824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"27625:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4697,"id":4825,"nodeType":"Return","src":"27618:13:24"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"26650:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:24","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"26925:5:24","nodeType":"VariableDeclaration","scope":4827,"src":"26917:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:24"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"26955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:24"},"scope":4884,"src":"26901:737:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4863,"nodeType":"Block","src":"27875:184:24","statements":[{"id":4862,"nodeType":"UncheckedBlock","src":"27885:168:24","statements":[{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"result","nameLocation":"27917:6:24","nodeType":"VariableDeclaration","scope":4862,"src":"27909:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4843,"initialValue":{"arguments":[{"id":4841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"27933:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4840,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4827,4864],"referencedDeclaration":4827,"src":"27926:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"27960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4848,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"28002:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":4847,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27985:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3290_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"28021:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"28036:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4845,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"27969:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"27969:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4837,"id":4861,"nodeType":"Return","src":"27953:89:24"}]}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"27644:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:24","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"27817:5:24","nodeType":"VariableDeclaration","scope":4864,"src":"27809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:24","nodeType":"VariableDeclaration","scope":4864,"src":"27824:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":4832,"nodeType":"UserDefinedTypeName","pathNode":{"id":4831,"name":"Rounding","nameLocations":["27824:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"27824:8:24"},"referencedDeclaration":3290,"src":"27824:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:24"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4864,"src":"27866:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:24"},"scope":4884,"src":"27793:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4882,"nodeType":"Block","src":"28257:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4875,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"28280:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4873,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:24","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4872,"id":4881,"nodeType":"Return","src":"28267:31:24"}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"28065:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4883,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:24","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:24","nodeType":"VariableDeclaration","scope":4883,"src":"28209:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"},"typeName":{"id":4867,"nodeType":"UserDefinedTypeName","pathNode":{"id":4866,"name":"Rounding","nameLocations":["28209:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"28209:8:24"},"referencedDeclaration":3290,"src":"28209:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3290","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:24"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4883,"src":"28251:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4870,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:24"},"scope":4884,"src":"28183:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4885,"src":"281:28026:24","usedErrors":[],"usedEvents":[]}],"src":"103:28205:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6649]},"id":6650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4886,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6649,"linearizedBaseContracts":[6649],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4888,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4894,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":4894,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4889,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4892,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":4894,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4899,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":4899,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4896,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4906,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":4906,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4901,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":4906,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4903,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4911,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":4911,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":4938,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4921,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":4931,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4930,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4933,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4918,"id":4937,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":4939,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4916,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":6649,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4949,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":4959,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4961,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4946,"id":4965,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":4967,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4944,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":6649,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4977,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":4987,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4986,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4989,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4974,"id":4993,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":4995,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4972,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":6649,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5022,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5005,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":5015,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5014,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5017,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5002,"id":5021,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":5023,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5023,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5000,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":6649,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5033,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":5043,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5045,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5030,"id":5049,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":5051,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5028,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":6649,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5061,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":5071,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5073,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5058,"id":5077,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":5079,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5056,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":6649,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5089,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":5099,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5098,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5101,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5086,"id":5105,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":5107,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5084,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":6649,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5117,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":5127,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5126,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5129,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5114,"id":5133,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":5135,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5112,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":6649,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5162,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5145,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":5155,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5157,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5142,"id":5161,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":5163,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5163,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5140,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":6649,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5173,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":5183,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5185,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5170,"id":5189,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":5191,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5168,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":6649,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5201,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5212,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":5211,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5213,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5198,"id":5217,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":5219,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5196,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":6649,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5229,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":5239,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5241,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5226,"id":5245,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":5247,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5224,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":6649,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5257,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":5267,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5266,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5269,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5254,"id":5273,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":5275,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5252,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":6649,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5285,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":5295,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5294,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5297,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5282,"id":5301,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":5303,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5280,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":6649,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5313,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5324,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":5323,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5322,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5325,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5310,"id":5329,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":5331,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5331,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5308,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":6649,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5341,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":5351,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5350,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5353,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5338,"id":5357,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":5359,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5359,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5336,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":6649,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5369,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":5379,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5378,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5381,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5366,"id":5385,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":5387,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5387,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5364,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":6649,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5397,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":5407,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5406,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5409,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5394,"id":5413,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":5415,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5392,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":6649,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5425,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5436,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":5435,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5434,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5437,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5422,"id":5441,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":5443,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5420,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":6649,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5470,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5453,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5464,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":5463,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5462,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":5467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5465,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5450,"id":5469,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":5471,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5448,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":6649,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5498,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5481,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5492,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":5491,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5490,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5493,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5478,"id":5497,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":5472,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":5499,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5499,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5476,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":6649,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5509,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":5519,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5521,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5506,"id":5525,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":5527,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5504,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":6649,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5554,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5537,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5548,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":5547,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5549,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5534,"id":5553,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":5555,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5555,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5532,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":6649,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5565,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5576,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":5575,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5570,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5574,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5577,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5562,"id":5581,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":5556,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5583,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":5583,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5583,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5560,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":6649,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5593,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":5603,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5602,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5605,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5590,"id":5609,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":5611,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5611,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5588,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":6649,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5621,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5632,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":5631,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5630,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5633,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5618,"id":5637,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":5639,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5639,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5616,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":6649,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5649,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5660,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":5659,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5661,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5646,"id":5665,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":5667,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5644,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":6649,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5677,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":5687,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5689,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5674,"id":5693,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":5695,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5695,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5672,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":6649,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5705,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":5715,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5717,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5702,"id":5721,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":5723,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5700,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":6649,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5733,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":5743,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5745,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5730,"id":5749,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":5751,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5751,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5728,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":6649,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5761,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":5771,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5770,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5773,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5758,"id":5777,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":5779,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5756,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":6649,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5801,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5795,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":5794,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5790,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5786,"id":5800,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":5802,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5781,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":6649,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5827,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5811,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5816,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":5825,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5824,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":5803,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":5828,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5804,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":5828,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5807,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":6649,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5853,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5837,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5842,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5852,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":5851,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5850,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":5854,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5830,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":5854,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5833,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":6649,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5879,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5863,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5868,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":5877,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":5880,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5856,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":5880,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5859,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":6649,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5905,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5889,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5894,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5904,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":5903,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5902,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":5881,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":5906,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5882,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":5906,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5885,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":6649,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5931,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5915,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5920,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5930,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":5929,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":5907,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":5932,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5908,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":5932,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5911,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":6649,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5957,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5941,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5946,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5956,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":5955,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5954,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":5933,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":5958,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5934,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":5958,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5937,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":6649,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5967,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5972,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5982,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":5981,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5980,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":5959,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":5984,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5960,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":5984,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5963,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":6649,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5993,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5998,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":6007,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":6010,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5986,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":6010,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5989,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":6649,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6019,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6024,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6034,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":6033,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6032,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":6036,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6012,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":6036,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6015,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":6649,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6061,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6045,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6050,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":6059,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6058,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":6062,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6038,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":6062,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6041,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":6649,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6087,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6071,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6076,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6086,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":6085,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6084,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":6063,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":6088,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6064,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":6088,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6067,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":6649,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6113,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6097,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6102,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6112,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":6111,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6110,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":6089,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":6114,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6090,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":6114,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6093,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":6649,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6139,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6123,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6128,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6138,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":6137,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6136,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":6115,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":6140,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6116,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":6140,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6119,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":6649,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6165,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6149,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6154,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":6163,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":6141,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":6166,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6142,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":6166,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6145,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":6649,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6191,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6175,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6180,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":6189,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":6167,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":6192,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6168,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":6192,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6171,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":6649,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6217,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6201,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6206,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6216,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":6215,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6214,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":6193,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":6218,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6194,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":6218,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6197,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":6649,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6243,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6227,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6232,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":6241,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6240,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":6219,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":6244,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6220,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":6244,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6223,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":6649,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6269,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6253,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6258,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6268,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":6267,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6266,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":6270,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6246,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":6270,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6249,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":6649,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6295,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6279,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6284,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6294,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":6293,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6292,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":6296,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6272,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":6296,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6275,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":6649,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6305,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6310,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":6319,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6318,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":6322,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6298,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":6322,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6301,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":6649,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6347,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6331,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6336,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6346,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":6345,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6344,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":6348,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6324,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":6348,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6327,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":6649,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6373,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6357,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6362,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6372,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":6371,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6370,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":6374,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6350,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":6374,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6353,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":6649,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6399,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6383,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6388,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6398,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":6397,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":6400,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6376,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":6400,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6379,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":6649,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6425,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6409,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6414,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":6423,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":6401,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":6426,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6402,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":6426,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6405,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":6649,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6451,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6435,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6440,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6450,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":6449,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6448,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":6427,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":6452,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6428,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":6452,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6431,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":6649,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6477,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6461,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6466,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6476,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":6475,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6474,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":6478,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6454,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":6478,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6457,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":6649,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6503,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6487,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6492,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6502,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":6501,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":6479,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":6504,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6480,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":6504,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6483,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":6649,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6513,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6518,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6528,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":6527,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":6530,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6506,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":6530,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6509,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":6649,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6555,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6539,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6544,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":6553,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6552,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":6556,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6532,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":6556,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6535,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":6649,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6565,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6570,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6580,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":6579,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6578,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":6582,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6558,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":6582,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6561,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":6649,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6607,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6591,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6596,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6606,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":6605,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6604,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":6608,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":6608,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6587,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":6649,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6637,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6620,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6631,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":6630,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6626,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6629,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6632,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6615,"id":6636,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":6609,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6638,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":6638,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6638,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6613,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":6649,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6647,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:25","statements":[{"nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:25"},"nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:25"},"nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6641,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":6644,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":6646,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":6639,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":6648,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6640,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":6648,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6643,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":6649,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6650,"src":"769:34173:25","usedErrors":[4894,4899,4906,4911],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6649],"SignedMath":[6793]},"id":6794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6651,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6794,"sourceUnit":6650,"src":"135:40:26","symbolAliases":[{"foreign":{"id":6652,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6654,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6793,"linearizedBaseContracts":[6793],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6683,"nodeType":"Block","src":"746:215:26","statements":[{"id":6682,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6668,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6675,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6673,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6649_$","typeString":"type(library SafeCast)"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6648,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6671,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6665,"id":6681,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6684,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":6684,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6656,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6659,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":6684,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6658,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6661,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":6684,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6660,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6684,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6663,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":6793,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6702,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6696,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6693,"id":6701,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":6685,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":6703,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":6703,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6686,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6689,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":6703,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6688,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6703,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6691,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":6793,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6713,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6712,"id":6720,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":6722,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6705,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6708,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":6722,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6707,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":6712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6722,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6710,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":6793,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6765,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[6733],"declarations":[{"constant":false,"id":6733,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":6765,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6732,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6746,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6748,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6731,"id":6764,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6766,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":6766,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6727,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":6766,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6766,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6729,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":6793,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6791,"nodeType":"Block","src":"1843:767:26","statements":[{"id":6790,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[6775],"declarations":[{"constant":false,"id":6775,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":6790,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6774,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6779,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6776,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6783,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6786,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6773,"id":6789,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":6767,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":6792,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6768,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6792,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":6793,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6794,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/CNFT.sol":{"ast":{"absolutePath":"contracts/CNFT.sol","exportedSymbols":{"Context":[1694],"CraftiaxNFT":[7283],"ECDSA":[2941],"EIP712":[3168],"ERC165":[3266],"ERC721":[1298],"ERC721URIStorage":[1559],"ERC721Utils":[1664],"IERC165":[3278],"IERC4906":[175],"IERC5267":[200],"IERC721":[1415],"IERC721Errors":[294],"IERC721Metadata":[1587],"MessageHashUtils":[3242],"Ownable":[147],"Pausable":[1863],"ReentrancyGuard":[1932],"ShortString":[1938],"ShortStrings":[2149],"Strings":[2593]},"id":7284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6795,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":1299,"src":"61:57:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":1560,"src":"120:78:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":148,"src":"200:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":1933,"src":"254:59:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":6800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":1864,"src":"315:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":2942,"src":"369:62:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":6802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7284,"sourceUnit":3169,"src":"433:63:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6803,"name":"ERC721URIStorage","nameLocations":["530:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1559,"src":"530:16:27"},"id":6804,"nodeType":"InheritanceSpecifier","src":"530:16:27"},{"baseName":{"id":6805,"name":"Ownable","nameLocations":["554:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"554:7:27"},"id":6806,"nodeType":"InheritanceSpecifier","src":"554:7:27"},{"baseName":{"id":6807,"name":"ReentrancyGuard","nameLocations":["569:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"569:15:27"},"id":6808,"nodeType":"InheritanceSpecifier","src":"569:15:27"},{"baseName":{"id":6809,"name":"Pausable","nameLocations":["592:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"592:8:27"},"id":6810,"nodeType":"InheritanceSpecifier","src":"592:8:27"},{"baseName":{"id":6811,"name":"EIP712","nameLocations":["607:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3168,"src":"607:6:27"},"id":6812,"nodeType":"InheritanceSpecifier","src":"607:6:27"}],"canonicalName":"CraftiaxNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7283,"linearizedBaseContracts":[7283,3168,200,1863,1932,147,1559,1298,294,1587,175,1415,3266,3278,1694],"name":"CraftiaxNFT","nameLocation":"509:11:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6815,"libraryName":{"id":6813,"name":"ECDSA","nameLocations":["629:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":2941,"src":"629:5:27"},"nodeType":"UsingForDirective","src":"623:24:27","typeName":{"id":6814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"639:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"id":6817,"mutability":"mutable","name":"_nextTokenId","nameLocation":"671:12:27","nodeType":"VariableDeclaration","scope":7283,"src":"655:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"df92894dc4675a7333caa5903b69cf5d8e8ec0d3f361c88207b6688e525703bb","id":6825,"name":"TokenMinted","nameLocation":"717:11:27","nodeType":"EventDefinition","parameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"745:2:27","nodeType":"VariableDeclaration","scope":6825,"src":"729:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6818,"name":"address","nodeType":"ElementaryTypeName","src":"729:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6821,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"765:7:27","nodeType":"VariableDeclaration","scope":6825,"src":"749:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6820,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6823,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"781:3:27","nodeType":"VariableDeclaration","scope":6825,"src":"774:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6822,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"728:57:27"},"src":"711:75:27"},{"anonymous":false,"eventSelector":"5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6","id":6829,"name":"BaseURIChanged","nameLocation":"798:14:27","nodeType":"EventDefinition","parameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"indexed":false,"mutability":"mutable","name":"newBaseURI","nameLocation":"820:10:27","nodeType":"VariableDeclaration","scope":6829,"src":"813:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6826,"name":"string","nodeType":"ElementaryTypeName","src":"813:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"812:19:27"},"src":"792:40:27"},{"anonymous":false,"eventSelector":"1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2","id":6835,"name":"TokenBurned","nameLocation":"844:11:27","nodeType":"EventDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"indexed":true,"mutability":"mutable","name":"burner","nameLocation":"872:6:27","nodeType":"VariableDeclaration","scope":6835,"src":"856:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6830,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6833,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"896:7:27","nodeType":"VariableDeclaration","scope":6835,"src":"880:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"855:49:27"},"src":"838:67:27"},{"anonymous":false,"eventSelector":"80170b5fcdd2bf1e0660ef4b8851f86685f64d41b1a19de1471947ece8725aac","id":6841,"name":"ContractPaused","nameLocation":"942:14:27","nodeType":"EventDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"973:8:27","nodeType":"VariableDeclaration","scope":6841,"src":"957:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6836,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6839,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"991:9:27","nodeType":"VariableDeclaration","scope":6841,"src":"983:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6838,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"956:45:27"},"src":"936:66:27"},{"anonymous":false,"eventSelector":"107553d8191d85b405879cf752997865edd48d94e20bda4dd27223c94b31a7cc","id":6847,"name":"ContractUnpaused","nameLocation":"1014:16:27","nodeType":"EventDefinition","parameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6843,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1047:8:27","nodeType":"VariableDeclaration","scope":6847,"src":"1031:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6842,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6845,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1065:9:27","nodeType":"VariableDeclaration","scope":6847,"src":"1057:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1030:45:27"},"src":"1008:68:27"},{"anonymous":false,"eventSelector":"0243549a92b2412f7a3caf7a2e56d65b8821b91345363faa5f57195384065fcc","id":6853,"name":"VerifierUpdated","nameLocation":"1088:15:27","nodeType":"EventDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"indexed":true,"mutability":"mutable","name":"oldVerifier","nameLocation":"1120:11:27","nodeType":"VariableDeclaration","scope":6853,"src":"1104:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6848,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6851,"indexed":true,"mutability":"mutable","name":"newVerifier","nameLocation":"1149:11:27","nodeType":"VariableDeclaration","scope":6853,"src":"1133:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6850,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:58:27"},"src":"1082:80:27"},{"anonymous":false,"eventSelector":"1800cd2301fbc20790ed94f3d55a28ef2306a9c31cd3c72b5b71b6e4cf5c6241","id":6859,"name":"NonceInvalidated","nameLocation":"1174:16:27","nodeType":"EventDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1207:4:27","nodeType":"VariableDeclaration","scope":6859,"src":"1191:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6854,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6857,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1221:5:27","nodeType":"VariableDeclaration","scope":6859,"src":"1213:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1190:37:27"},"src":"1168:60:27"},{"anonymous":false,"eventSelector":"219586a0d69510b7431e983b4ca8bad2719c9782509e4bdc1a38fe8afa727124","id":6867,"name":"BatchMintCompleted","nameLocation":"1240:18:27","nodeType":"EventDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"indexed":false,"mutability":"mutable","name":"startTokenId","nameLocation":"1267:12:27","nodeType":"VariableDeclaration","scope":6867,"src":"1259:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6863,"indexed":false,"mutability":"mutable","name":"endTokenId","nameLocation":"1289:10:27","nodeType":"VariableDeclaration","scope":6867,"src":"1281:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1281:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6865,"indexed":true,"mutability":"mutable","name":"minter","nameLocation":"1317:6:27","nodeType":"VariableDeclaration","scope":6867,"src":"1301:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6864,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1258:66:27"},"src":"1234:91:27"},{"constant":false,"id":6869,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1380:13:27","nodeType":"VariableDeclaration","scope":7283,"src":"1365:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6868,"name":"string","nodeType":"ElementaryTypeName","src":"1365:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":6873,"mutability":"mutable","name":"_burnedTokenIds","nameLocation":"1433:15:27","nodeType":"VariableDeclaration","scope":7283,"src":"1400:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":6872,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1400:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6871,"name":"bool","nodeType":"ElementaryTypeName","src":"1419:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":true,"id":6878,"mutability":"constant","name":"MINT_TYPEHASH","nameLocation":"1482:13:27","nodeType":"VariableDeclaration","scope":7283,"src":"1457:116:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1457:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"536166654d696e74286164647265737320746f2c737472696e67207572692c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1508:64:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce3829100355b953ccf0678623667f04f1ef312616e89358bc4973f327d3b68b","typeString":"literal_string \"SafeMint(address to,string uri,uint256 nonce,uint256 deadline)\""},"value":"SafeMint(address to,string uri,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ce3829100355b953ccf0678623667f04f1ef312616e89358bc4973f327d3b68b","typeString":"literal_string \"SafeMint(address to,string uri,uint256 nonce,uint256 deadline)\""}],"id":6875,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1498:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6882,"mutability":"mutable","name":"_nonces","nameLocation":"1616:7:27","nodeType":"VariableDeclaration","scope":7283,"src":"1580:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6881,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6879,"name":"address","nodeType":"ElementaryTypeName","src":"1588:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1580:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":6884,"mutability":"mutable","name":"_verifier","nameLocation":"1646:9:27","nodeType":"VariableDeclaration","scope":7283,"src":"1630:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6883,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":6887,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"1689:10:27","nodeType":"VariableDeclaration","scope":7283,"src":"1664:39:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1664:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":6915,"nodeType":"Block","src":"1922:73:27","statements":[{"expression":{"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6907,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1933:13:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6908,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"1949:7:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1933:23:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6910,"nodeType":"ExpressionStatement","src":"1933:23:27"},{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6911,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"1967:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6912,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"1979:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1967:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6914,"nodeType":"ExpressionStatement","src":"1967:20:27"}]},"id":6916,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43726166746961784e4654","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1828:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ad6d2773066f09f3e4e29cb35a3a03b510f648240d297575d7c313b32e08d64","typeString":"literal_string \"CraftiaxNFT\""},"value":"CraftiaxNFT"},{"hexValue":"434e4654","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1843:6:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_096a1fb21199f1d7032a96dc273c382f121d55e6707204fa3e4bb533e6e9cabe","typeString":"literal_string \"CNFT\""},"value":"CNFT"}],"id":6898,"kind":"baseConstructorSpecifier","modifierName":{"id":6895,"name":"ERC721","nameLocations":["1821:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"1821:6:27"},"nodeType":"ModifierInvocation","src":"1821:29:27"},{"arguments":[{"id":6900,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"1867:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6901,"kind":"baseConstructorSpecifier","modifierName":{"id":6899,"name":"Ownable","nameLocations":["1859:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1859:7:27"},"nodeType":"ModifierInvocation","src":"1859:21:27"},{"arguments":[{"hexValue":"43726166746961784e4654","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1896:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ad6d2773066f09f3e4e29cb35a3a03b510f648240d297575d7c313b32e08d64","typeString":"literal_string \"CraftiaxNFT\""},"value":"CraftiaxNFT"},{"hexValue":"31","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1911:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":6905,"kind":"baseConstructorSpecifier","modifierName":{"id":6902,"name":"EIP712","nameLocations":["1889:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3168,"src":"1889:6:27"},"nodeType":"ModifierInvocation","src":"1889:26:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"initialOwner","nameLocation":"1742:12:27","nodeType":"VariableDeclaration","scope":6916,"src":"1734:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6888,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6891,"mutability":"mutable","name":"baseURI","nameLocation":"1779:7:27","nodeType":"VariableDeclaration","scope":6916,"src":"1765:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6890,"name":"string","nodeType":"ElementaryTypeName","src":"1765:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6893,"mutability":"mutable","name":"verifier","nameLocation":"1805:8:27","nodeType":"VariableDeclaration","scope":6916,"src":"1797:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6892,"name":"address","nodeType":"ElementaryTypeName","src":"1797:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1723:97:27"},"returnParameters":{"id":6906,"nodeType":"ParameterList","parameters":[],"src":"1922:0:27"},"scope":7283,"src":"1712:283:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7038,"nodeType":"Block","src":"2213:921:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6932,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"2232:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6933,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"2247:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2232:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c792072656163686564","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:20:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""},"value":"Max supply reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""}],"id":6931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2224:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6937,"nodeType":"ExpressionStatement","src":"2224:56:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6939,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2299:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2305:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"2299:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6941,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"2318:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2299:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2328:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":6938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2291:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2291:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6945,"nodeType":"ExpressionStatement","src":"2291:57:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"2367:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2373:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6948,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:27","typeDescriptions":{}}},"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2367:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2385:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":6946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2359:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"ExpressionStatement","src":"2359:54:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6959,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"2438:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2432:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6957,"name":"bytes","nodeType":"ElementaryTypeName","src":"2432:5:27","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2443:6:27","memberName":"length","nodeType":"MemberAccess","src":"2432:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2452:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2432:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5552492063616e6e6f7420626520656d707479","id":6964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2455:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""},"value":"URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""}],"id":6956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2424:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6966,"nodeType":"ExpressionStatement","src":"2424:53:27"},{"assignments":[6968],"declarations":[{"constant":false,"id":6968,"mutability":"mutable","name":"structHash","nameLocation":"2527:10:27","nodeType":"VariableDeclaration","scope":7038,"src":"2519:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2519:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6987,"initialValue":{"arguments":[{"arguments":[{"id":6972,"name":"MINT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"2575:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"2603:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":6977,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"2636:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2630:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6975,"name":"bytes","nodeType":"ElementaryTypeName","src":"2630:5:27","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6974,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2620:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2656:13:27","subExpression":{"baseExpression":{"id":6980,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"2656:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6982,"indexExpression":{"id":6981,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"2664:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2656:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6984,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"2684:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6970,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2550:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2554:6:27","memberName":"encode","nodeType":"MemberAccess","src":"2550:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:153:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6969,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2540:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2540:164:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2519:185:27"},{"assignments":[6989],"declarations":[{"constant":false,"id":6989,"mutability":"mutable","name":"hash","nameLocation":"2725:4:27","nodeType":"VariableDeclaration","scope":7038,"src":"2717:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2717:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6993,"initialValue":{"arguments":[{"id":6991,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"2749:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6990,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"2732:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2717:43:27"},{"assignments":[6995],"declarations":[{"constant":false,"id":6995,"mutability":"mutable","name":"signer","nameLocation":"2779:6:27","nodeType":"VariableDeclaration","scope":7038,"src":"2771:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6994,"name":"address","nodeType":"ElementaryTypeName","src":"2771:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7001,"initialValue":{"arguments":[{"id":6998,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"2802:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6999,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"2808:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6996,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2788:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2941_$","typeString":"type(library ECDSA)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2794:7:27","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"2788:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2771:47:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7003,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"2837:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7004,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"2847:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2837:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2858:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2829:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2829:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7008,"nodeType":"ExpressionStatement","src":"2829:49:27"},{"assignments":[7010],"declarations":[{"constant":false,"id":7010,"mutability":"mutable","name":"tokenId","nameLocation":"2899:7:27","nodeType":"VariableDeclaration","scope":7038,"src":"2891:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7013,"initialValue":{"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2909:14:27","subExpression":{"id":7011,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"2909:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2891:32:27"},{"expression":{"arguments":[{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2942:25:27","subExpression":{"baseExpression":{"id":7015,"name":"_burnedTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"2943:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7017,"indexExpression":{"id":7016,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"2959:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2943:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20494420776173206275726e6564","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2969:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_988e2d3f8e6b36776351fc027ad241d4ba88f694364705255b0aa85f453113c4","typeString":"literal_string \"Token ID was burned\""},"value":"Token ID was burned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_988e2d3f8e6b36776351fc027ad241d4ba88f694364705255b0aa85f453113c4","typeString":"literal_string \"Token ID was burned\""}],"id":7014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2934:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2934:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7021,"nodeType":"ExpressionStatement","src":"2934:57:27"},{"expression":{"arguments":[{"id":7023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"3022:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"3026:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7022,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[976,1006],"referencedDeclaration":976,"src":"3012:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"ExpressionStatement","src":"3012:22:27"},{"expression":{"arguments":[{"id":7028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"3058:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7029,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"3067:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7027,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3045:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7031,"nodeType":"ExpressionStatement","src":"3045:26:27"},{"eventCall":{"arguments":[{"id":7033,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"3109:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"3113:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7035,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"3122:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7032,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"3097:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7037,"nodeType":"EmitStatement","src":"3092:34:27"}]},"functionSelector":"e5763b73","id":7039,"implemented":true,"kind":"function","modifiers":[{"id":6927,"kind":"modifierInvocation","modifierName":{"id":6926,"name":"nonReentrant","nameLocations":["2170:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1896,"src":"2170:12:27"},"nodeType":"ModifierInvocation","src":"2170:12:27"},{"id":6929,"kind":"modifierInvocation","modifierName":{"id":6928,"name":"whenNotPaused","nameLocations":["2193:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"2193:13:27"},"nodeType":"ModifierInvocation","src":"2193:13:27"}],"name":"safeMint","nameLocation":"2018:8:27","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"to","nameLocation":"2045:2:27","nodeType":"VariableDeclaration","scope":7039,"src":"2037:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6917,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6920,"mutability":"mutable","name":"uri","nameLocation":"2072:3:27","nodeType":"VariableDeclaration","scope":7039,"src":"2058:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6919,"name":"string","nodeType":"ElementaryTypeName","src":"2058:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6922,"mutability":"mutable","name":"deadline","nameLocation":"2094:8:27","nodeType":"VariableDeclaration","scope":7039,"src":"2086:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6924,"mutability":"mutable","name":"signature","nameLocation":"2126:9:27","nodeType":"VariableDeclaration","scope":7039,"src":"2113:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6923,"name":"bytes","nodeType":"ElementaryTypeName","src":"2113:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2026:116:27"},"returnParameters":{"id":6930,"nodeType":"ParameterList","parameters":[],"src":"2213:0:27"},"scope":7283,"src":"2009:1125:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7065,"nodeType":"Block","src":"3207:163:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7049,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"3232:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3226:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7047,"name":"bytes","nodeType":"ElementaryTypeName","src":"3226:5:27","typeDescriptions":{}}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3244:6:27","memberName":"length","nodeType":"MemberAccess","src":"3226:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3226:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617365205552492063616e6e6f7420626520656d707479","id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_09137e482b6b203228712b3a3778c204812f195c570565d3a641f9cfbfcae705","typeString":"literal_string \"Base URI cannot be empty\""},"value":"Base URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09137e482b6b203228712b3a3778c204812f195c570565d3a641f9cfbfcae705","typeString":"literal_string \"Base URI cannot be empty\""}],"id":7046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3218:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3218:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7056,"nodeType":"ExpressionStatement","src":"3218:65:27"},{"expression":{"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7057,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"3294:13:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7058,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"3310:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3294:26:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7060,"nodeType":"ExpressionStatement","src":"3294:26:27"},{"eventCall":{"arguments":[{"id":7062,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"3351:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7061,"name":"BaseURIChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3336:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7064,"nodeType":"EmitStatement","src":"3331:31:27"}]},"functionSelector":"55f804b3","id":7066,"implemented":true,"kind":"function","modifiers":[{"id":7044,"kind":"modifierInvocation","modifierName":{"id":7043,"name":"onlyOwner","nameLocations":["3197:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3197:9:27"},"nodeType":"ModifierInvocation","src":"3197:9:27"}],"name":"setBaseURI","nameLocation":"3151:10:27","nodeType":"FunctionDefinition","parameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"newBaseURI","nameLocation":"3176:10:27","nodeType":"VariableDeclaration","scope":7066,"src":"3162:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7040,"name":"string","nodeType":"ElementaryTypeName","src":"3162:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3161:26:27"},"returnParameters":{"id":7045,"nodeType":"ParameterList","parameters":[],"src":"3207:0:27"},"scope":7283,"src":"3142:228:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7081,"nodeType":"Block","src":"3414:88:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7071,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"3425:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"ExpressionStatement","src":"3425:8:27"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7075,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3464:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7077,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3478:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3478:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7074,"name":"ContractPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"3449:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3449:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7080,"nodeType":"EmitStatement","src":"3444:50:27"}]},"functionSelector":"8456cb59","id":7082,"implemented":true,"kind":"function","modifiers":[{"id":7069,"kind":"modifierInvocation","modifierName":{"id":7068,"name":"onlyOwner","nameLocations":["3404:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3404:9:27"},"nodeType":"ModifierInvocation","src":"3404:9:27"}],"name":"pause","nameLocation":"3387:5:27","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[],"src":"3392:2:27"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[],"src":"3414:0:27"},"scope":7283,"src":"3378:124:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7097,"nodeType":"Block","src":"3548:92:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7087,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3559:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7089,"nodeType":"ExpressionStatement","src":"3559:10:27"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7091,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3602:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3616:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3622:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3616:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"ContractUnpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"3585:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"EmitStatement","src":"3580:52:27"}]},"functionSelector":"3f4ba83a","id":7098,"implemented":true,"kind":"function","modifiers":[{"id":7085,"kind":"modifierInvocation","modifierName":{"id":7084,"name":"onlyOwner","nameLocations":["3538:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3538:9:27"},"nodeType":"ModifierInvocation","src":"3538:9:27"}],"name":"unpause","nameLocation":"3519:7:27","nodeType":"FunctionDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[],"src":"3526:2:27"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[],"src":"3548:0:27"},"scope":7283,"src":"3510:130:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[546],"body":{"id":7106,"nodeType":"Block","src":"3715:39:27","statements":[{"expression":{"id":7104,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"3733:13:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7103,"id":7105,"nodeType":"Return","src":"3726:20:27"}]},"id":7107,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3657:8:27","nodeType":"FunctionDefinition","overrides":{"id":7100,"nodeType":"OverrideSpecifier","overrides":[],"src":"3682:8:27"},"parameters":{"id":7099,"nodeType":"ParameterList","parameters":[],"src":"3665:2:27"},"returnParameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7107,"src":"3700:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7101,"name":"string","nodeType":"ElementaryTypeName","src":"3700:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3699:15:27"},"scope":7283,"src":"3648:106:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1539],"body":{"id":7125,"nodeType":"Block","src":"3973:76:27","statements":[{"expression":{"arguments":[{"id":7117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"3992:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7116,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3984:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3984:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7119,"nodeType":"ExpressionStatement","src":"3984:16:27"},{"expression":{"arguments":[{"id":7122,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"4033:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7120,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4018:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CraftiaxNFT_$7283_$","typeString":"type(contract super CraftiaxNFT)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4024:8:27","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1539,"src":"4018:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7115,"id":7124,"nodeType":"Return","src":"4011:30:27"}]},"functionSelector":"c87b56dd","id":7126,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3838:8:27","nodeType":"FunctionDefinition","overrides":{"id":7112,"nodeType":"OverrideSpecifier","overrides":[{"id":7111,"name":"ERC721URIStorage","nameLocations":["3915:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1559,"src":"3915:16:27"}],"src":"3906:26:27"},"parameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"tokenId","nameLocation":"3855:7:27","nodeType":"VariableDeclaration","scope":7126,"src":"3847:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3847:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3846:17:27"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7126,"src":"3952:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7113,"name":"string","nodeType":"ElementaryTypeName","src":"3952:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3951:15:27"},"scope":7283,"src":"3829:220:27","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1482],"body":{"id":7140,"nodeType":"Block","src":"4199:62:27","statements":[{"expression":{"arguments":[{"id":7137,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"4241:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7135,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4217:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CraftiaxNFT_$7283_$","typeString":"type(contract super CraftiaxNFT)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4223:17:27","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1482,"src":"4217:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4217:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7134,"id":7139,"nodeType":"Return","src":"4210:43:27"}]},"functionSelector":"01ffc9a7","id":7141,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4066:17:27","nodeType":"FunctionDefinition","overrides":{"id":7131,"nodeType":"OverrideSpecifier","overrides":[{"id":7130,"name":"ERC721URIStorage","nameLocations":["4152:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1559,"src":"4152:16:27"}],"src":"4143:26:27"},"parameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"interfaceId","nameLocation":"4091:11:27","nodeType":"VariableDeclaration","scope":7141,"src":"4084:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7127,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4084:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4083:20:27"},"returnParameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7141,"src":"4188:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7132,"name":"bool","nodeType":"ElementaryTypeName","src":"4188:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4187:6:27"},"scope":7283,"src":"4057:204:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7199,"nodeType":"Block","src":"4372:600:27","statements":[{"assignments":[7151],"declarations":[{"constant":false,"id":7151,"mutability":"mutable","name":"owner","nameLocation":"4391:5:27","nodeType":"VariableDeclaration","scope":7199,"src":"4383:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7150,"name":"address","nodeType":"ElementaryTypeName","src":"4383:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7155,"initialValue":{"arguments":[{"id":7153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4407:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7152,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"4399:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4383:32:27"},{"assignments":[7157],"declarations":[{"constant":false,"id":7157,"mutability":"mutable","name":"spender","nameLocation":"4434:7:27","nodeType":"VariableDeclaration","scope":7199,"src":"4426:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7156,"name":"address","nodeType":"ElementaryTypeName","src":"4426:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"4444:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4444:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4426:30:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7162,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"4499:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"4510:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4499:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7166,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"4550:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7167,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"4557:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7165,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"4533:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4499:66:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4594:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7170,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4582:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7173,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"4606:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4582:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4499:114:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f74206f776e6572206f7220617070726f766564","id":7176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4628:33:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_603f4022c7c9bca46ef8304cd6a88dd2e6d49898b43e3a9ed7aea6d1839c2f9e","typeString":"literal_string \"Caller is not owner or approved\""},"value":"Caller is not owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_603f4022c7c9bca46ef8304cd6a88dd2e6d49898b43e3a9ed7aea6d1839c2f9e","typeString":"literal_string \"Caller is not owner or approved\""}],"id":7161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4477:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4477:195:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7178,"nodeType":"ExpressionStatement","src":"4477:195:27"},{"expression":{"arguments":[{"id":7180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4750:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4759:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7179,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"4737:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4737:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7183,"nodeType":"ExpressionStatement","src":"4737:25:27"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7184,"name":"_burnedTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"4816:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7186,"indexExpression":{"id":7185,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4832:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4816:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4843:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4816:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7189,"nodeType":"ExpressionStatement","src":"4816:31:27"},{"expression":{"arguments":[{"id":7191,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4901:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7190,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4895:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7193,"nodeType":"ExpressionStatement","src":"4895:14:27"},{"eventCall":{"arguments":[{"id":7195,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"4947:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7196,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"4956:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7194,"name":"TokenBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"4935:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7198,"nodeType":"EmitStatement","src":"4930:34:27"}]},"functionSelector":"42966c68","id":7200,"implemented":true,"kind":"function","modifiers":[{"id":7146,"kind":"modifierInvocation","modifierName":{"id":7145,"name":"nonReentrant","nameLocations":["4329:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1896,"src":"4329:12:27"},"nodeType":"ModifierInvocation","src":"4329:12:27"},{"id":7148,"kind":"modifierInvocation","modifierName":{"id":7147,"name":"whenNotPaused","nameLocations":["4352:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"4352:13:27"},"nodeType":"ModifierInvocation","src":"4352:13:27"}],"name":"burn","nameLocation":"4278:4:27","nodeType":"FunctionDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"tokenId","nameLocation":"4291:7:27","nodeType":"VariableDeclaration","scope":7200,"src":"4283:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4282:17:27"},"returnParameters":{"id":7149,"nodeType":"ParameterList","parameters":[],"src":"4372:0:27"},"scope":7283,"src":"4269:703:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7211,"nodeType":"Block","src":"5041:40:27","statements":[{"expression":{"baseExpression":{"id":7207,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"5059:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7209,"indexExpression":{"id":7208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"5067:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5059:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7206,"id":7210,"nodeType":"Return","src":"5052:21:27"}]},"functionSelector":"7ecebe00","id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"4989:6:27","nodeType":"FunctionDefinition","parameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"owner","nameLocation":"5004:5:27","nodeType":"VariableDeclaration","scope":7212,"src":"4996:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7201,"name":"address","nodeType":"ElementaryTypeName","src":"4996:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4995:15:27"},"returnParameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7212,"src":"5032:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"5032:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5031:9:27"},"scope":7283,"src":"4980:101:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7242,"nodeType":"Block","src":"5153:214:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7220,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"5172:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5195:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5187:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7221,"name":"address","nodeType":"ElementaryTypeName","src":"5187:7:27","typeDescriptions":{}}},"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5172:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642076657269666965722061646472657373","id":7226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5199:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","typeString":"literal_string \"Invalid verifier address\""},"value":"Invalid verifier address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68","typeString":"literal_string \"Invalid verifier address\""}],"id":7219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5164:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5164:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7228,"nodeType":"ExpressionStatement","src":"5164:62:27"},{"assignments":[7230],"declarations":[{"constant":false,"id":7230,"mutability":"mutable","name":"oldVerifier","nameLocation":"5245:11:27","nodeType":"VariableDeclaration","scope":7242,"src":"5237:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7229,"name":"address","nodeType":"ElementaryTypeName","src":"5237:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7232,"initialValue":{"id":7231,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"5259:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5237:31:27"},{"expression":{"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7233,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"5279:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7234,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"5291:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5279:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7236,"nodeType":"ExpressionStatement","src":"5279:23:27"},{"eventCall":{"arguments":[{"id":7238,"name":"oldVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"5334:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7239,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"5347:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7237,"name":"VerifierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"5318:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7241,"nodeType":"EmitStatement","src":"5313:46:27"}]},"functionSelector":"97fc007c","id":7243,"implemented":true,"kind":"function","modifiers":[{"id":7217,"kind":"modifierInvocation","modifierName":{"id":7216,"name":"onlyOwner","nameLocations":["5143:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5143:9:27"},"nodeType":"ModifierInvocation","src":"5143:9:27"}],"name":"updateVerifier","nameLocation":"5098:14:27","nodeType":"FunctionDefinition","parameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"newVerifier","nameLocation":"5121:11:27","nodeType":"VariableDeclaration","scope":7243,"src":"5113:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7213,"name":"address","nodeType":"ElementaryTypeName","src":"5113:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5112:21:27"},"returnParameters":{"id":7218,"nodeType":"ParameterList","parameters":[],"src":"5153:0:27"},"scope":7283,"src":"5089:278:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7281,"nodeType":"Block","src":"5496:263:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"5515:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5531:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5523:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7252,"name":"address","nodeType":"ElementaryTypeName","src":"5523:7:27","typeDescriptions":{}}},"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5515:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420757365722061646472657373","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5535:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","typeString":"literal_string \"Invalid user address\""},"value":"Invalid user address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993","typeString":"literal_string \"Invalid user address\""}],"id":7250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5507:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5507:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7259,"nodeType":"ExpressionStatement","src":"5507:51:27"},{"assignments":[7261],"declarations":[{"constant":false,"id":7261,"mutability":"mutable","name":"currentNonce","nameLocation":"5577:12:27","nodeType":"VariableDeclaration","scope":7281,"src":"5569:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5569:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7265,"initialValue":{"baseExpression":{"id":7262,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"5592:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7264,"indexExpression":{"id":7263,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"5600:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5592:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5569:36:27"},{"expression":{"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7266,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"5616:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7268,"indexExpression":{"id":7267,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"5624:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5616:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":7271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5637:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5637:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":7269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5632:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5646:3:27","memberName":"max","nodeType":"MemberAccess","src":"5632:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5616:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7275,"nodeType":"ExpressionStatement","src":"5616:33:27"},{"eventCall":{"arguments":[{"id":7277,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"5732:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7278,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"5738:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7276,"name":"NonceInvalidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"5715:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7280,"nodeType":"EmitStatement","src":"5710:41:27"}]},"functionSelector":"53a78064","id":7282,"implemented":true,"kind":"function","modifiers":[{"id":7248,"kind":"modifierInvocation","modifierName":{"id":7247,"name":"onlyOwner","nameLocations":["5486:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5486:9:27"},"nodeType":"ModifierInvocation","src":"5486:9:27"}],"name":"invalidateNonce","nameLocation":"5447:15:27","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"user","nameLocation":"5471:4:27","nodeType":"VariableDeclaration","scope":7282,"src":"5463:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7244,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5462:14:27"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[],"src":"5496:0:27"},"scope":7283,"src":"5438:321:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7284,"src":"500:5262:27","usedErrors":[13,18,252,257,266,271,276,283,288,293,1768,1771,1877,1946,1948,2604,2609,2614],"usedEvents":[24,167,174,180,1314,1323,1332,1760,1765,6825,6829,6835,6841,6847,6853,6859,6867]}],"src":"33:5733:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7fbe01f72229cd5dd66329186bf7e3f13906be0b7250c861889d07fd5574aa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7FBE01F72229CD5DD66329186BF7E3F13906BE0B7250C861889D07FD SSTORE PUSH21 0xAA64736F6C63430008140033000000000000000000 ","sourceMap":"1255:3026:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3026:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7fbe01f72229cd5dd66329186bf7e3f13906be0b7250c861889d07fd5574aa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7FBE01F72229CD5DD66329186BF7E3F13906BE0B7250C861889D07FD SSTORE PUSH21 0xAA64736F6C63430008140033000000000000000000 ","sourceMap":"1255:3026:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c24fa96cd48ff807e5af1605bbf8c6e2496ded285145256d5aa9ddc2d1fab2964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 STATICCALL SWAP7 0xCD BASEFEE SELFDESTRUCT DUP1 PUSH31 0x5AF1605BBF8C6E2496DED285145256D5AA9DDC2D1FAB2964736F6C63430008 EQ STOP CALLER ","sourceMap":"251:3680:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:3680:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c24fa96cd48ff807e5af1605bbf8c6e2496ded285145256d5aa9ddc2d1fab2964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 STATICCALL SWAP7 0xCD BASEFEE SELFDESTRUCT DUP1 PUSH31 0x5AF1605BBF8C6E2496DED285145256D5AA9DDC2D1FAB2964736F6C63430008 EQ STOP CALLER ","sourceMap":"251:3680:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b281c1069fa543356d6f8747d0a9e292ad812e9ac3495b7870f5d53ceb84ff8c64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DUP2 0xC1 MOD SWAP16 0xA5 NUMBER CALLDATALOAD PUSH14 0x6F8747D0A9E292AD812E9AC3495B PUSH25 0x70F5D53CEB84FF8C64736F6C63430008140033000000000000 ","sourceMap":"521:3181:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b281c1069fa543356d6f8747d0a9e292ad812e9ac3495b7870f5d53ceb84ff8c64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DUP2 0xC1 MOD SWAP16 0xA5 NUMBER CALLDATALOAD PUSH14 0x6F8747D0A9E292AD812E9AC3495B PUSH25 0x70F5D53CEB84FF8C64736F6C63430008140033000000000000 ","sourceMap":"521:3181:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/CNFT.sol":{"CraftiaxNFT":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"address","name":"verifier","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newBaseURI","type":"string"}],"name":"BaseURIChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"minter","type":"address"}],"name":"BatchMintCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ContractPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ContractUnpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"NonceInvalidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"burner","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TokenBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVerifier","type":"address"},{"indexed":true,"internalType":"address","name":"newVerifier","type":"address"}],"name":"VerifierUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"invalidateNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newVerifier","type":"address"}],"name":"updateVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1780":{"entryPoint":null,"id":1780,"parameterSlots":0,"returnSlots":0},"@_1885":{"entryPoint":null,"id":1885,"parameterSlots":0,"returnSlots":0},"@_3038":{"entryPoint":null,"id":3038,"parameterSlots":2,"returnSlots":0},"@_411":{"entryPoint":null,"id":411,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6916":{"entryPoint":null,"id":6916,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3085":{"entryPoint":null,"id":3085,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":528,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2250":{"entryPoint":null,"id":2250,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2090":{"entryPoint":610,"id":2090,"parameterSlots":2,"returnSlots":1},"@toShortString_1992":{"entryPoint":667,"id":1992,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":734,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory":{"entryPoint":823,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1394,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1107,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1447,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1190,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":785,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1047,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":763,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5646:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:28","statements":[{"nodeType":"YulAssignment","src":"84:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:28"},"nodeType":"YulFunctionCall","src":"93:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:28"}]},{"body":{"nodeType":"YulBlock","src":"169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:28"},"nodeType":"YulFunctionCall","src":"171:12:28"},"nodeType":"YulExpressionStatement","src":"171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:28"},"nodeType":"YulFunctionCall","src":"150:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:28"},"nodeType":"YulFunctionCall","src":"146:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:28"},"nodeType":"YulFunctionCall","src":"135:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:28"},"nodeType":"YulFunctionCall","src":"125:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:28"},"nodeType":"YulFunctionCall","src":"118:50:28"},"nodeType":"YulIf","src":"115:70:28"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:28","type":""}],"src":"14:177:28"},{"body":{"nodeType":"YulBlock","src":"228:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:28"},"nodeType":"YulFunctionCall","src":"248:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:28"},"nodeType":"YulFunctionCall","src":"238:31:28"},"nodeType":"YulExpressionStatement","src":"238:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:28"},"nodeType":"YulFunctionCall","src":"278:15:28"},"nodeType":"YulExpressionStatement","src":"278:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:28"},"nodeType":"YulFunctionCall","src":"302:15:28"},"nodeType":"YulExpressionStatement","src":"302:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:28"},{"body":{"nodeType":"YulBlock","src":"394:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"404:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"413:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"408:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"473:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"498:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"503:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:28"},"nodeType":"YulFunctionCall","src":"494:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"517:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"522:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:28"},"nodeType":"YulFunctionCall","src":"513:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"507:5:28"},"nodeType":"YulFunctionCall","src":"507:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"487:6:28"},"nodeType":"YulFunctionCall","src":"487:39:28"},"nodeType":"YulExpressionStatement","src":"487:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"434:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"437:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"431:2:28"},"nodeType":"YulFunctionCall","src":"431:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"445:19:28","statements":[{"nodeType":"YulAssignment","src":"447:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"456:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"452:3:28"},"nodeType":"YulFunctionCall","src":"452:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"447:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"427:3:28","statements":[]},"src":"423:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"556:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"561:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:28"},"nodeType":"YulFunctionCall","src":"552:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"570:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"545:6:28"},"nodeType":"YulFunctionCall","src":"545:27:28"},"nodeType":"YulExpressionStatement","src":"545:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"372:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"377:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"382:6:28","type":""}],"src":"328:250:28"},{"body":{"nodeType":"YulBlock","src":"708:942:28","statements":[{"body":{"nodeType":"YulBlock","src":"754:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"763:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"766:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"756:6:28"},"nodeType":"YulFunctionCall","src":"756:12:28"},"nodeType":"YulExpressionStatement","src":"756:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"729:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"725:3:28"},"nodeType":"YulFunctionCall","src":"725:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"750:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"721:3:28"},"nodeType":"YulFunctionCall","src":"721:32:28"},"nodeType":"YulIf","src":"718:52:28"},{"nodeType":"YulAssignment","src":"779:50:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"789:29:28"},"nodeType":"YulFunctionCall","src":"789:40:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"779:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"838:39:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"873:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"858:3:28"},"nodeType":"YulFunctionCall","src":"858:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"852:5:28"},"nodeType":"YulFunctionCall","src":"852:25:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"842:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"886:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"904:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"908:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"900:3:28"},"nodeType":"YulFunctionCall","src":"900:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"912:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"896:3:28"},"nodeType":"YulFunctionCall","src":"896:18:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"890:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"941:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"950:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"953:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"943:6:28"},"nodeType":"YulFunctionCall","src":"943:12:28"},"nodeType":"YulExpressionStatement","src":"943:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"929:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"937:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"926:2:28"},"nodeType":"YulFunctionCall","src":"926:14:28"},"nodeType":"YulIf","src":"923:34:28"},{"nodeType":"YulVariableDeclaration","src":"966:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"980:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"991:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"976:3:28"},"nodeType":"YulFunctionCall","src":"976:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"970:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1046:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1058:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1048:6:28"},"nodeType":"YulFunctionCall","src":"1048:12:28"},"nodeType":"YulExpressionStatement","src":"1048:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1025:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1029:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1021:3:28"},"nodeType":"YulFunctionCall","src":"1021:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1036:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1017:3:28"},"nodeType":"YulFunctionCall","src":"1017:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1010:6:28"},"nodeType":"YulFunctionCall","src":"1010:35:28"},"nodeType":"YulIf","src":"1007:55:28"},{"nodeType":"YulVariableDeclaration","src":"1071:19:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1087:2:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1081:5:28"},"nodeType":"YulFunctionCall","src":"1081:9:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1075:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1113:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1115:16:28"},"nodeType":"YulFunctionCall","src":"1115:18:28"},"nodeType":"YulExpressionStatement","src":"1115:18:28"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1105:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1109:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1102:2:28"},"nodeType":"YulFunctionCall","src":"1102:10:28"},"nodeType":"YulIf","src":"1099:36:28"},{"nodeType":"YulVariableDeclaration","src":"1144:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1158:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1154:3:28"},"nodeType":"YulFunctionCall","src":"1154:7:28"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1148:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1170:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1190:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1184:5:28"},"nodeType":"YulFunctionCall","src":"1184:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1174:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1202:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1224:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1248:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1252:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1244:3:28"},"nodeType":"YulFunctionCall","src":"1244:13:28"},{"name":"_4","nodeType":"YulIdentifier","src":"1259:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1240:3:28"},"nodeType":"YulFunctionCall","src":"1240:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"1264:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1236:3:28"},"nodeType":"YulFunctionCall","src":"1236:31:28"},{"name":"_4","nodeType":"YulIdentifier","src":"1269:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1232:3:28"},"nodeType":"YulFunctionCall","src":"1232:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:28"},"nodeType":"YulFunctionCall","src":"1220:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1206:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1332:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1334:16:28"},"nodeType":"YulFunctionCall","src":"1334:18:28"},"nodeType":"YulExpressionStatement","src":"1334:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1291:10:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1303:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1288:2:28"},"nodeType":"YulFunctionCall","src":"1288:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1311:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1323:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1308:2:28"},"nodeType":"YulFunctionCall","src":"1308:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1285:2:28"},"nodeType":"YulFunctionCall","src":"1285:46:28"},"nodeType":"YulIf","src":"1282:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1374:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:28"},"nodeType":"YulFunctionCall","src":"1363:22:28"},"nodeType":"YulExpressionStatement","src":"1363:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1401:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"1409:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1394:6:28"},"nodeType":"YulFunctionCall","src":"1394:18:28"},"nodeType":"YulExpressionStatement","src":"1394:18:28"},{"body":{"nodeType":"YulBlock","src":"1458:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1467:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1470:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1460:6:28"},"nodeType":"YulFunctionCall","src":"1460:12:28"},"nodeType":"YulExpressionStatement","src":"1460:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1435:2:28"},{"name":"_3","nodeType":"YulIdentifier","src":"1439:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1431:3:28"},"nodeType":"YulFunctionCall","src":"1431:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1444:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1427:3:28"},"nodeType":"YulFunctionCall","src":"1427:20:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1449:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1424:2:28"},"nodeType":"YulFunctionCall","src":"1424:33:28"},"nodeType":"YulIf","src":"1421:53:28"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1522:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1526:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1518:3:28"},"nodeType":"YulFunctionCall","src":"1518:11:28"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1535:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1543:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:28"},"nodeType":"YulFunctionCall","src":"1531:15:28"},{"name":"_3","nodeType":"YulIdentifier","src":"1548:2:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1483:34:28"},"nodeType":"YulFunctionCall","src":"1483:68:28"},"nodeType":"YulExpressionStatement","src":"1483:68:28"},{"nodeType":"YulAssignment","src":"1560:16:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1570:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1560:6:28"}]},{"nodeType":"YulAssignment","src":"1585:59:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1629:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1625:3:28"},"nodeType":"YulFunctionCall","src":"1625:18:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1595:29:28"},"nodeType":"YulFunctionCall","src":"1595:49:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1585:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"658:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"669:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"681:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"689:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"697:6:28","type":""}],"src":"583:1067:28"},{"body":{"nodeType":"YulBlock","src":"1710:325:28","statements":[{"nodeType":"YulAssignment","src":"1720:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1734:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1737:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1730:3:28"},"nodeType":"YulFunctionCall","src":"1730:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1720:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1751:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1781:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1777:3:28"},"nodeType":"YulFunctionCall","src":"1777:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1755:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1828:31:28","statements":[{"nodeType":"YulAssignment","src":"1830:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1844:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1852:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1840:3:28"},"nodeType":"YulFunctionCall","src":"1840:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1830:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1808:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1801:6:28"},"nodeType":"YulFunctionCall","src":"1801:26:28"},"nodeType":"YulIf","src":"1798:61:28"},{"body":{"nodeType":"YulBlock","src":"1918:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1946:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1951:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1942:3:28"},"nodeType":"YulFunctionCall","src":"1942:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1932:6:28"},"nodeType":"YulFunctionCall","src":"1932:31:28"},"nodeType":"YulExpressionStatement","src":"1932:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1983:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1986:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1976:6:28"},"nodeType":"YulFunctionCall","src":"1976:15:28"},"nodeType":"YulExpressionStatement","src":"1976:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2011:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2014:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2004:6:28"},"nodeType":"YulFunctionCall","src":"2004:15:28"},"nodeType":"YulExpressionStatement","src":"2004:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1874:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1897:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1905:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1894:2:28"},"nodeType":"YulFunctionCall","src":"1894:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1871:2:28"},"nodeType":"YulFunctionCall","src":"1871:38:28"},"nodeType":"YulIf","src":"1868:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1690:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1699:6:28","type":""}],"src":"1655:380:28"},{"body":{"nodeType":"YulBlock","src":"2096:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2113:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2116:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2106:6:28"},"nodeType":"YulFunctionCall","src":"2106:14:28"},"nodeType":"YulExpressionStatement","src":"2106:14:28"},{"nodeType":"YulAssignment","src":"2129:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2147:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2150:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2137:9:28"},"nodeType":"YulFunctionCall","src":"2137:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2129:4:28"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2079:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2087:4:28","type":""}],"src":"2040:121:28"},{"body":{"nodeType":"YulBlock","src":"2247:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"2280:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2294:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2304:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2298:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2325:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"2329:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2318:6:28"},"nodeType":"YulFunctionCall","src":"2318:17:28"},"nodeType":"YulExpressionStatement","src":"2318:17:28"},{"nodeType":"YulVariableDeclaration","src":"2348:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2370:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2374:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2360:9:28"},"nodeType":"YulFunctionCall","src":"2360:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2352:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2392:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2415:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2425:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2432:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2444:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2428:3:28"},"nodeType":"YulFunctionCall","src":"2428:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2421:3:28"},"nodeType":"YulFunctionCall","src":"2421:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:28"},"nodeType":"YulFunctionCall","src":"2411:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2396:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2486:23:28","statements":[{"nodeType":"YulAssignment","src":"2488:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"2503:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2488:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2468:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2480:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2465:2:28"},"nodeType":"YulFunctionCall","src":"2465:20:28"},"nodeType":"YulIf","src":"2462:47:28"},{"nodeType":"YulVariableDeclaration","src":"2522:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2536:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2546:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2553:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2558:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:28"},"nodeType":"YulFunctionCall","src":"2549:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2542:3:28"},"nodeType":"YulFunctionCall","src":"2542:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2532:3:28"},"nodeType":"YulFunctionCall","src":"2532:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2526:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2576:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2589:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2580:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2674:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2683:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2690:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2676:6:28"},"nodeType":"YulFunctionCall","src":"2676:17:28"},"nodeType":"YulExpressionStatement","src":"2676:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2624:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2631:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2621:2:28"},"nodeType":"YulFunctionCall","src":"2621:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2635:26:28","statements":[{"nodeType":"YulAssignment","src":"2637:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2650:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2657:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2646:3:28"},"nodeType":"YulFunctionCall","src":"2646:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2637:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"2617:3:28","statements":[]},"src":"2613:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2263:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2268:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2260:2:28"},"nodeType":"YulFunctionCall","src":"2260:11:28"},"nodeType":"YulIf","src":"2257:448:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2219:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2226:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2231:10:28","type":""}],"src":"2166:545:28"},{"body":{"nodeType":"YulBlock","src":"2801:81:28","statements":[{"nodeType":"YulAssignment","src":"2811:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2826:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2847:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2840:3:28"},"nodeType":"YulFunctionCall","src":"2840:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2857:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2853:3:28"},"nodeType":"YulFunctionCall","src":"2853:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2836:3:28"},"nodeType":"YulFunctionCall","src":"2836:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2832:3:28"},"nodeType":"YulFunctionCall","src":"2832:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2822:3:28"},"nodeType":"YulFunctionCall","src":"2822:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2868:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2871:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2864:3:28"},"nodeType":"YulFunctionCall","src":"2864:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2819:2:28"},"nodeType":"YulFunctionCall","src":"2819:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2811:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2778:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2784:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2792:4:28","type":""}],"src":"2716:166:28"},{"body":{"nodeType":"YulBlock","src":"2983:1256:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3013:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:28"},"nodeType":"YulFunctionCall","src":"3007:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2997:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3060:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3062:16:28"},"nodeType":"YulFunctionCall","src":"3062:18:28"},"nodeType":"YulExpressionStatement","src":"3062:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3032:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3048:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3052:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3044:3:28"},"nodeType":"YulFunctionCall","src":"3044:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"3056:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3040:3:28"},"nodeType":"YulFunctionCall","src":"3040:18:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3029:2:28"},"nodeType":"YulFunctionCall","src":"3029:30:28"},"nodeType":"YulIf","src":"3026:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3135:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3173:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3167:5:28"},"nodeType":"YulFunctionCall","src":"3167:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3141:25:28"},"nodeType":"YulFunctionCall","src":"3141:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"3181:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3091:43:28"},"nodeType":"YulFunctionCall","src":"3091:97:28"},"nodeType":"YulExpressionStatement","src":"3091:97:28"},{"nodeType":"YulVariableDeclaration","src":"3197:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3214:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3201:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3224:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3243:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3228:11:28","type":""}]},{"nodeType":"YulAssignment","src":"3256:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3269:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3256:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3326:656:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3340:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3359:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3371:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3367:3:28"},"nodeType":"YulFunctionCall","src":"3367:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3355:3:28"},"nodeType":"YulFunctionCall","src":"3355:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3344:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3388:49:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3432:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3402:29:28"},"nodeType":"YulFunctionCall","src":"3402:35:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3392:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3450:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3459:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3454:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3537:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3562:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3580:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3585:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:28"},"nodeType":"YulFunctionCall","src":"3576:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3570:5:28"},"nodeType":"YulFunctionCall","src":"3570:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3555:6:28"},"nodeType":"YulFunctionCall","src":"3555:42:28"},"nodeType":"YulExpressionStatement","src":"3555:42:28"},{"nodeType":"YulAssignment","src":"3614:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3628:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3636:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3624:3:28"},"nodeType":"YulFunctionCall","src":"3624:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3614:6:28"}]},{"nodeType":"YulAssignment","src":"3655:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3672:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3683:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:28"},"nodeType":"YulFunctionCall","src":"3668:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3655:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3484:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3487:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3481:2:28"},"nodeType":"YulFunctionCall","src":"3481:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3496:28:28","statements":[{"nodeType":"YulAssignment","src":"3498:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3507:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3510:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3503:3:28"},"nodeType":"YulFunctionCall","src":"3503:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3498:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3477:3:28","statements":[]},"src":"3473:236:28"},{"body":{"nodeType":"YulBlock","src":"3757:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3775:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3802:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3807:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3798:3:28"},"nodeType":"YulFunctionCall","src":"3798:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3792:5:28"},"nodeType":"YulFunctionCall","src":"3792:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3779:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3842:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3854:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3881:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3884:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3877:3:28"},"nodeType":"YulFunctionCall","src":"3877:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"3893:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3873:3:28"},"nodeType":"YulFunctionCall","src":"3873:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3903:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3899:3:28"},"nodeType":"YulFunctionCall","src":"3899:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3869:3:28"},"nodeType":"YulFunctionCall","src":"3869:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3865:3:28"},"nodeType":"YulFunctionCall","src":"3865:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3850:3:28"},"nodeType":"YulFunctionCall","src":"3850:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3835:6:28"},"nodeType":"YulFunctionCall","src":"3835:74:28"},"nodeType":"YulExpressionStatement","src":"3835:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3728:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"3737:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3725:2:28"},"nodeType":"YulFunctionCall","src":"3725:19:28"},"nodeType":"YulIf","src":"3722:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3943:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3957:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3960:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3953:3:28"},"nodeType":"YulFunctionCall","src":"3953:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"3969:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3949:3:28"},"nodeType":"YulFunctionCall","src":"3949:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3936:6:28"},"nodeType":"YulFunctionCall","src":"3936:36:28"},"nodeType":"YulExpressionStatement","src":"3936:36:28"}]},"nodeType":"YulCase","src":"3319:663:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3324:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3999:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4013:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4026:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4017:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4062:67:28","statements":[{"nodeType":"YulAssignment","src":"4080:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4099:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4104:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4095:3:28"},"nodeType":"YulFunctionCall","src":"4095:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4089:5:28"},"nodeType":"YulFunctionCall","src":"4089:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4080:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4043:6:28"},"nodeType":"YulIf","src":"4040:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4149:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4208:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4215:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4155:52:28"},"nodeType":"YulFunctionCall","src":"4155:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4142:6:28"},"nodeType":"YulFunctionCall","src":"4142:81:28"},"nodeType":"YulExpressionStatement","src":"4142:81:28"}]},"nodeType":"YulCase","src":"3991:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3299:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3307:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3296:2:28"},"nodeType":"YulFunctionCall","src":"3296:14:28"},"nodeType":"YulSwitch","src":"3289:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2968:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"2974:3:28","type":""}],"src":"2887:1352:28"},{"body":{"nodeType":"YulBlock","src":"4345:102:28","statements":[{"nodeType":"YulAssignment","src":"4355:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4367:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4378:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4363:3:28"},"nodeType":"YulFunctionCall","src":"4363:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4355:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4412:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4428:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4433:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4424:3:28"},"nodeType":"YulFunctionCall","src":"4424:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4437:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4420:3:28"},"nodeType":"YulFunctionCall","src":"4420:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4408:3:28"},"nodeType":"YulFunctionCall","src":"4408:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4390:6:28"},"nodeType":"YulFunctionCall","src":"4390:51:28"},"nodeType":"YulExpressionStatement","src":"4390:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4314:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4325:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4336:4:28","type":""}],"src":"4244:203:28"},{"body":{"nodeType":"YulBlock","src":"4665:276:28","statements":[{"nodeType":"YulAssignment","src":"4675:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4687:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4698:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:28"},"nodeType":"YulFunctionCall","src":"4683:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4675:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4729:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4711:6:28"},"nodeType":"YulFunctionCall","src":"4711:25:28"},"nodeType":"YulExpressionStatement","src":"4711:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4756:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4752:3:28"},"nodeType":"YulFunctionCall","src":"4752:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"4772:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4745:6:28"},"nodeType":"YulFunctionCall","src":"4745:34:28"},"nodeType":"YulExpressionStatement","src":"4745:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4799:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4810:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4795:3:28"},"nodeType":"YulFunctionCall","src":"4795:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"4815:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4788:6:28"},"nodeType":"YulFunctionCall","src":"4788:34:28"},"nodeType":"YulExpressionStatement","src":"4788:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4842:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4853:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4838:3:28"},"nodeType":"YulFunctionCall","src":"4838:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"4858:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4831:6:28"},"nodeType":"YulFunctionCall","src":"4831:34:28"},"nodeType":"YulExpressionStatement","src":"4831:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4885:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4896:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4881:3:28"},"nodeType":"YulFunctionCall","src":"4881:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4906:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4922:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4927:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4918:3:28"},"nodeType":"YulFunctionCall","src":"4918:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4931:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4914:3:28"},"nodeType":"YulFunctionCall","src":"4914:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4902:3:28"},"nodeType":"YulFunctionCall","src":"4902:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4874:6:28"},"nodeType":"YulFunctionCall","src":"4874:61:28"},"nodeType":"YulExpressionStatement","src":"4874:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4602:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4613:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4621:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4629:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4637:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4645:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4656:4:28","type":""}],"src":"4452:489:28"},{"body":{"nodeType":"YulBlock","src":"5067:275:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5084:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5095:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5077:6:28"},"nodeType":"YulFunctionCall","src":"5077:21:28"},"nodeType":"YulExpressionStatement","src":"5077:21:28"},{"nodeType":"YulVariableDeclaration","src":"5107:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5127:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5121:5:28"},"nodeType":"YulFunctionCall","src":"5121:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5111:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5165:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5150:3:28"},"nodeType":"YulFunctionCall","src":"5150:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"5170:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5143:6:28"},"nodeType":"YulFunctionCall","src":"5143:34:28"},"nodeType":"YulExpressionStatement","src":"5143:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5225:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5233:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5221:3:28"},"nodeType":"YulFunctionCall","src":"5221:15:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5253:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5238:3:28"},"nodeType":"YulFunctionCall","src":"5238:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"5258:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5186:34:28"},"nodeType":"YulFunctionCall","src":"5186:79:28"},"nodeType":"YulExpressionStatement","src":"5186:79:28"},{"nodeType":"YulAssignment","src":"5274:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5309:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5317:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:28"},"nodeType":"YulFunctionCall","src":"5305:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5326:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5322:3:28"},"nodeType":"YulFunctionCall","src":"5322:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5301:3:28"},"nodeType":"YulFunctionCall","src":"5301:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:28"},"nodeType":"YulFunctionCall","src":"5286:45:28"},{"kind":"number","nodeType":"YulLiteral","src":"5333:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:28"},"nodeType":"YulFunctionCall","src":"5282:54:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5274:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5036:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5047:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5058:4:28","type":""}],"src":"4946:396:28"},{"body":{"nodeType":"YulBlock","src":"5441:203:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5451:26:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5471:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5465:5:28"},"nodeType":"YulFunctionCall","src":"5465:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5455:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5486:32:28","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5505:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5512:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5501:3:28"},"nodeType":"YulFunctionCall","src":"5501:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5495:5:28"},"nodeType":"YulFunctionCall","src":"5495:23:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5486:5:28"}]},{"body":{"nodeType":"YulBlock","src":"5555:83:28","statements":[{"nodeType":"YulAssignment","src":"5569:59:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5582:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5597:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5604:4:28","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"5610:6:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5600:3:28"},"nodeType":"YulFunctionCall","src":"5600:17:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5593:3:28"},"nodeType":"YulFunctionCall","src":"5593:25:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5624:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5620:3:28"},"nodeType":"YulFunctionCall","src":"5620:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5589:3:28"},"nodeType":"YulFunctionCall","src":"5589:38:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5578:3:28"},"nodeType":"YulFunctionCall","src":"5578:50:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5569:5:28"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5533:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5541:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5530:2:28"},"nodeType":"YulFunctionCall","src":"5530:16:28"},"nodeType":"YulIf","src":"5527:111:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5421:5:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5431:5:28","type":""}],"src":"5347:297:28"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b506040516200295e3803806200295e833981016040819052620000359162000337565b6040518060400160405280600b81526020016a10dc98599d1a585e13919560aa1b815250604051806040016040528060018152602001603160f81b815250846040518060400160405280600b81526020016a10dc98599d1a585e13919560aa1b8152506040518060400160405280600481526020016310d3919560e21b8152508160009081620000c69190620004a6565b506001620000d58282620004a6565b5050506001600160a01b0381166200010857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620001138162000210565b5060016008556009805460ff191690556200013082600a62000262565b610120526200014181600b62000262565b61014052815160208084019190912060e052815190820120610100524660a052620001cf60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600d620001e68382620004a6565b50601080546001600160a01b0319166001600160a01b039290921691909117905550620005cc9050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208351101562000282576200027a836200029b565b905062000295565b816200028f8482620004a6565b5060ff90505b92915050565b600080829050601f81511115620002c9578260405163305a27a960e01b8152600401620000ff919062000572565b8051620002d682620005a7565b179392505050565b80516001600160a01b0381168114620002f657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200032e57818101518382015260200162000314565b50506000910152565b6000806000606084860312156200034d57600080fd5b6200035884620002de565b60208501519093506001600160401b03808211156200037657600080fd5b818601915086601f8301126200038b57600080fd5b815181811115620003a057620003a0620002fb565b604051601f8201601f19908116603f01168101908382118183101715620003cb57620003cb620002fb565b81604052828152896020848701011115620003e557600080fd5b620003f883602083016020880162000311565b80965050505050506200040e60408501620002de565b90509250925092565b600181811c908216806200042c57607f821691505b6020821081036200044d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004a157600081815260208120601f850160051c810160208610156200047c5750805b601f850160051c820191505b818110156200049d5782815560010162000488565b5050505b505050565b81516001600160401b03811115620004c257620004c2620002fb565b620004da81620004d3845462000417565b8462000453565b602080601f831160018114620005125760008415620004f95750858301515b600019600386901b1c1916600185901b1785556200049d565b600085815260208120601f198616915b82811015620005435788860151825594840194600190910190840162000522565b5085821015620005625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200059381604085016020870162000311565b601f01601f19169190910160400192915050565b805160208083015191908110156200044d5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516123376200062760003960006110e2015260006110b001526000611820015260006117f8015260006117530152600061177d015260006117a701526123376000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806397fc007c11610097578063c87b56dd11610071578063c87b56dd1461035c578063e5763b731461036f578063e985e9c514610382578063f2fde38b1461039557600080fd5b806397fc007c14610323578063a22cb46514610336578063b88d4fde1461034957600080fd5b8063715018a6146102b65780637ecebe00146102be5780638456cb59146102e757806384b0196e146102ef5780638da5cb5b1461030a57806395d89b411461031b57600080fd5b806342842e0e1161014b57806355f804b31161012557806355f804b3146102645780635c975abb146102775780636352211e1461028257806370a082311461029557600080fd5b806342842e0e1461022b57806342966c681461023e57806353a780641461025157600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806323b872dd146102105780633f4ba83a14610223575b600080fd5b6101a66101a1366004611d0e565b6103a8565b60405190151581526020015b60405180910390f35b6101c36103b9565b6040516101b29190611d7b565b6101e36101de366004611d8e565b61044b565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611dc3565b610474565b005b61020e61021e366004611ded565b610483565b61020e610513565b61020e610239366004611ded565b61055b565b61020e61024c366004611d8e565b61057b565b61020e61025f366004611e29565b6106a5565b61020e610272366004611ee7565b610755565b60095460ff166101a6565b6101e3610290366004611d8e565b6107f5565b6102a86102a3366004611e29565b610800565b6040519081526020016101b2565b61020e610848565b6102a86102cc366004611e29565b6001600160a01b03166000908152600f602052604090205490565b61020e61085c565b6102f761089e565b6040516101b29796959493929190611f1c565b6007546001600160a01b03166101e3565b6101c36108e4565b61020e610331366004611e29565b6108f3565b61020e610344366004611fb2565b6109a3565b61020e610357366004611fee565b6109ae565b6101c361036a366004611d8e565b6109c6565b61020e61037d366004612056565b6109db565b6101a66103903660046120c8565b610cf5565b61020e6103a3366004611e29565b610d23565b60006103b382610d5e565b92915050565b6060600080546103c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f4906120fb565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b600061045682610d83565b506000828152600460205260409020546001600160a01b03166103b3565b61047f828233610dbc565b5050565b6001600160a01b0382166104b257604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104bf838333610dc9565b9050836001600160a01b0316816001600160a01b03161461050d576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104a9565b50505050565b61051b610ec2565b610523610eef565b60405142815233907f107553d8191d85b405879cf752997865edd48d94e20bda4dd27223c94b31a7cc906020015b60405180910390a2565b610576838383604051806020016040528060008152506109ae565b505050565b610583610f41565b61058b610f6b565b6000610596826107f5565b9050336001600160a01b0382168114806105b557506105b58282610cf5565b806105d95750806001600160a01b03166105ce8461044b565b6001600160a01b0316145b6106255760405162461bcd60e51b815260206004820152601f60248201527f43616c6c6572206973206e6f74206f776e6572206f7220617070726f7665640060448201526064016104a9565b61063e8360405180602001604052806000815250610f8f565b6000838152600e60205260409020805460ff1916600117905561066083610fdf565b60405183906001600160a01b038316907f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa290600090a350506106a26001600855565b50565b6106ad610ec2565b6001600160a01b0381166106fa5760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b60448201526064016104a9565b6001600160a01b0381166000818152600f6020908152604091829020805460001990915591518281529192917f1800cd2301fbc20790ed94f3d55a28ef2306a9c31cd3c72b5b71b6e4cf5c6241910160405180910390a25050565b61075d610ec2565b60008151116107ae5760405162461bcd60e51b815260206004820152601860248201527f42617365205552492063616e6e6f7420626520656d707479000000000000000060448201526064016104a9565b600d6107ba828261217b565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6816040516107ea9190611d7b565b60405180910390a150565b60006103b382610d83565b60006001600160a01b03821661082c576040516322718ad960e21b8152600060048201526024016104a9565b506001600160a01b031660009081526003602052604090205490565b610850610ec2565b61085a600061101a565b565b610864610ec2565b61086c61106c565b60405142815233907f80170b5fcdd2bf1e0660ef4b8851f86685f64d41b1a19de1471947ece8725aac90602001610551565b6000606080600080600060606108b26110a9565b6108ba6110db565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600180546103c8906120fb565b6108fb610ec2565b6001600160a01b0381166109515760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642076657269666965722061646472657373000000000000000060448201526064016104a9565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f0243549a92b2412f7a3caf7a2e56d65b8821b91345363faa5f57195384065fcc90600090a35050565b61047f338383611108565b6109b9848484610483565b61050d33858585856111a7565b60606109d1826107f5565b506103b3826112d2565b6109e3610f41565b6109eb610f6b565b6001600c5410610a325760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016104a9565b81421115610a765760405162461bcd60e51b815260206004820152601160248201527014da59db985d1d5c9948195e1c1a5c9959607a1b60448201526064016104a9565b6001600160a01b038416610acc5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e7420616464726573730000000000000060448201526064016104a9565b6000835111610b135760405162461bcd60e51b81526020600482015260136024820152725552492063616e6e6f7420626520656d70747960681b60448201526064016104a9565b82516020808501919091206001600160a01b0386166000908152600f9092526040822080547fce3829100355b953ccf0678623667f04f1ef312616e89358bc4973f327d3b68b92889290919085610b698361223b565b909155506040805160208101959095526001600160a01b03909316928401929092526060830152608082015260a0810184905260c0016040516020818303038152906040528051906020012090506000610bc2826113d6565b90506000610bd08285611403565b6010549091506001600160a01b03808316911614610c245760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016104a9565b600c805460009182610c358361223b565b909155506000818152600e602052604090205490915060ff1615610c915760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881251081dd85cc8189d5c9b9959606a1b60448201526064016104a9565b610c9b888261142d565b610ca58188610f8f565b80886001600160a01b03167fdf92894dc4675a7333caa5903b69cf5d8e8ec0d3f361c88207b6688e525703bb89604051610cdf9190611d7b565b60405180910390a35050505061050d6001600855565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610d2b610ec2565b6001600160a01b038116610d5557604051631e4fbdf760e01b8152600060048201526024016104a9565b6106a28161101a565b60006001600160e01b03198216632483248360e11b14806103b357506103b382611447565b6000818152600260205260408120546001600160a01b0316806103b357604051637e27328960e01b8152600481018490526024016104a9565b6105768383836001611497565b6000828152600260205260408120546001600160a01b0390811690831615610df657610df681848661159d565b6001600160a01b03811615610e3457610e13600085600080611497565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610e63576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b0316331461085a5760405163118cdaa760e01b81523360048201526024016104a9565b610ef7611601565b6009805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260085403610f6457604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b60095460ff161561085a5760405163d93c066560e01b815260040160405180910390fd5b6000828152600660205260409020610fa7828261217b565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6000610fee6000836000610dc9565b90506001600160a01b03811661047f57604051637e27328960e01b8152600481018390526024016104a9565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611074610f6b565b6009805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f243390565b60606110d67f0000000000000000000000000000000000000000000000000000000000000000600a611624565b905090565b60606110d67f0000000000000000000000000000000000000000000000000000000000000000600b611624565b6001600160a01b03821661113a57604051630b61174360e31b81526001600160a01b03831660048201526024016104a9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156112cb57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906111e9908890889087908790600401612262565b6020604051808303816000875af1925050508015611224575060408051601f3d908101601f191682019092526112219181019061229f565b60015b61128d573d808015611252576040519150601f19603f3d011682016040523d82523d6000602084013e611257565b606091505b50805160000361128557604051633250574960e11b81526001600160a01b03851660048201526024016104a9565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146112c957604051633250574960e11b81526001600160a01b03851660048201526024016104a9565b505b5050505050565b60606112dd82610d83565b50600082815260066020526040812080546112f7906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054611323906120fb565b80156113705780601f1061134557610100808354040283529160200191611370565b820191906000526020600020905b81548152906001019060200180831161135357829003601f168201915b5050505050905060006113816116cf565b90508051600003611393575092915050565b8151156113c55780826040516020016113ad9291906122bc565b60405160208183030381529060405292505050919050565b6113ce846116de565b949350505050565b60006103b36113e3611746565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806114138686611871565b92509250925061142382826118be565b5090949350505050565b61047f828260405180602001604052806000815250611977565b60006001600160e01b031982166380ac58cd60e01b148061147857506001600160e01b03198216635b5e139f60e01b145b806103b357506301ffc9a760e01b6001600160e01b03198316146103b3565b80806114ab57506001600160a01b03821615155b1561156d5760006114bb84610d83565b90506001600160a01b038316158015906114e75750826001600160a01b0316816001600160a01b031614155b80156114fa57506114f88184610cf5565b155b156115235760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104a9565b811561156b5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6115a883838361198f565b610576576001600160a01b0383166115d657604051637e27328960e01b8152600481018290526024016104a9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104a9565b60095460ff1661085a57604051638dfc202b60e01b815260040160405180910390fd5b606060ff831461163e57611637836119f2565b90506103b3565b81805461164a906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054611676906120fb565b80156116c35780601f10611698576101008083540402835291602001916116c3565b820191906000526020600020905b8154815290600101906020018083116116a657829003601f168201915b505050505090506103b3565b6060600d80546103c8906120fb565b60606116e982610d83565b5060006116f46116cf565b90506000815111611714576040518060200160405280600081525061173f565b8061171e84611a31565b60405160200161172f9291906122bc565b6040516020818303038152906040525b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561179f57507f000000000000000000000000000000000000000000000000000000000000000046145b156117c957507f000000000000000000000000000000000000000000000000000000000000000090565b6110d6604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036118ab5760208401516040850151606086015160001a61189d88828585611ac4565b9550955095505050506118b7565b50508151600091506002905b9250925092565b60008260038111156118d2576118d26122eb565b036118db575050565b60018260038111156118ef576118ef6122eb565b0361190d5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611921576119216122eb565b036119425760405163fce698f760e01b8152600481018290526024016104a9565b6003826003811115611956576119566122eb565b0361047f576040516335e2f38360e21b8152600481018290526024016104a9565b6119818383611b93565b6105763360008585856111a7565b60006001600160a01b038316158015906113ce5750826001600160a01b0316846001600160a01b031614806119c957506119c98484610cf5565b806113ce5750506000908152600460205260409020546001600160a01b03908116911614919050565b606060006119ff83611bf8565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60606000611a3e83611c20565b600101905060008167ffffffffffffffff811115611a5e57611a5e611e44565b6040519080825280601f01601f191660200182016040528015611a88576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611a9257509392505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611aff5750600091506003905082611b89565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611b53573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b7f57506000925060019150829050611b89565b9250600091508190505b9450945094915050565b6001600160a01b038216611bbd57604051633250574960e11b8152600060048201526024016104a9565b6000611bcb83836000610dc9565b90506001600160a01b03811615610576576040516339e3563760e11b8152600060048201526024016104a9565b600060ff8216601f8111156103b357604051632cd44ac360e21b815260040160405180910390fd5b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611c5f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611c8b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ca957662386f26fc10000830492506010015b6305f5e1008310611cc1576305f5e100830492506008015b6127108310611cd557612710830492506004015b60648310611ce7576064830492506002015b600a83106103b35760010192915050565b6001600160e01b0319811681146106a257600080fd5b600060208284031215611d2057600080fd5b813561173f81611cf8565b60005b83811015611d46578181015183820152602001611d2e565b50506000910152565b60008151808452611d67816020860160208601611d2b565b601f01601f19169290920160200192915050565b60208152600061173f6020830184611d4f565b600060208284031215611da057600080fd5b5035919050565b80356001600160a01b0381168114611dbe57600080fd5b919050565b60008060408385031215611dd657600080fd5b611ddf83611da7565b946020939093013593505050565b600080600060608486031215611e0257600080fd5b611e0b84611da7565b9250611e1960208501611da7565b9150604084013590509250925092565b600060208284031215611e3b57600080fd5b61173f82611da7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e6b57600080fd5b813567ffffffffffffffff80821115611e8657611e86611e44565b604051601f8301601f19908116603f01168101908282118183101715611eae57611eae611e44565b81604052838152866020858801011115611ec757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611ef957600080fd5b813567ffffffffffffffff811115611f1057600080fd5b6113ce84828501611e5a565b60ff60f81b881681526000602060e081840152611f3c60e084018a611d4f565b8381036040850152611f4e818a611d4f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611fa057835183529284019291840191600101611f84565b50909c9b505050505050505050505050565b60008060408385031215611fc557600080fd5b611fce83611da7565b915060208301358015158114611fe357600080fd5b809150509250929050565b6000806000806080858703121561200457600080fd5b61200d85611da7565b935061201b60208601611da7565b925060408501359150606085013567ffffffffffffffff81111561203e57600080fd5b61204a87828801611e5a565b91505092959194509250565b6000806000806080858703121561206c57600080fd5b61207585611da7565b9350602085013567ffffffffffffffff8082111561209257600080fd5b61209e88838901611e5a565b94506040870135935060608701359150808211156120bb57600080fd5b5061204a87828801611e5a565b600080604083850312156120db57600080fd5b6120e483611da7565b91506120f260208401611da7565b90509250929050565b600181811c9082168061210f57607f821691505b60208210810361212f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561057657600081815260208120601f850160051c8101602086101561215c5750805b601f850160051c820191505b818110156112c957828155600101612168565b815167ffffffffffffffff81111561219557612195611e44565b6121a9816121a384546120fb565b84612135565b602080601f8311600181146121de57600084156121c65750858301515b600019600386901b1c1916600185901b1785556112c9565b600085815260208120601f198616915b8281101561220d578886015182559484019460019091019084016121ee565b508582101561222b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161225b57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061229590830184611d4f565b9695505050505050565b6000602082840312156122b157600080fd5b815161173f81611cf8565b600083516122ce818460208801611d2b565b8351908301906122e2818360208801611d2b565b01949350505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122050d1096f0d1e96ed85dae3ad80841371bad331020349cdbfec63e6b152aec05264736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x295E CODESIZE SUB DUP1 PUSH3 0x295E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x10DC98599D1A585E139195 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x10DC98599D1A585E139195 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x10D39195 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x4A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0xD5 DUP3 DUP3 PUSH3 0x4A6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x108 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x113 DUP2 PUSH3 0x210 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x130 DUP3 PUSH1 0xA PUSH3 0x262 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x141 DUP2 PUSH1 0xB PUSH3 0x262 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x1CF PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE PUSH1 0xD PUSH3 0x1E6 DUP4 DUP3 PUSH3 0x4A6 JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x5CC SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x282 JUMPI PUSH3 0x27A DUP4 PUSH3 0x29B JUMP JUMPDEST SWAP1 POP PUSH3 0x295 JUMP JUMPDEST DUP2 PUSH3 0x28F DUP5 DUP3 PUSH3 0x4A6 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x2C9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFF SWAP2 SWAP1 PUSH3 0x572 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x2D6 DUP3 PUSH3 0x5A7 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x32E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x314 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x358 DUP5 PUSH3 0x2DE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3A0 JUMPI PUSH3 0x3A0 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x3CB JUMPI PUSH3 0x3CB PUSH3 0x2FB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3F8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x311 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP PUSH3 0x40E PUSH1 0x40 DUP6 ADD PUSH3 0x2DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x42C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x44D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4A1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x47C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x49D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x488 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4C2 JUMPI PUSH3 0x4C2 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x4DA DUP2 PUSH3 0x4D3 DUP5 SLOAD PUSH3 0x417 JUMP JUMPDEST DUP5 PUSH3 0x453 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x512 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4F9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x49D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x543 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x522 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x562 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x593 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x311 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x44D JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2337 PUSH3 0x627 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x10E2 ADD MSTORE PUSH1 0x0 PUSH2 0x10B0 ADD MSTORE PUSH1 0x0 PUSH2 0x1820 ADD MSTORE PUSH1 0x0 PUSH2 0x17F8 ADD MSTORE PUSH1 0x0 PUSH2 0x1753 ADD MSTORE PUSH1 0x0 PUSH2 0x177D ADD MSTORE PUSH1 0x0 PUSH2 0x17A7 ADD MSTORE PUSH2 0x2337 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x97FC007C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xE5763B73 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97FC007C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x53A78064 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x223 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x513 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x20E PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x20E PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x848 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x85C JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB2 JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0xD5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x441 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x416 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x441 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x424 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x47F DUP3 DUP3 CALLER PUSH2 0xDBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4BF DUP4 DUP4 CALLER PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x523 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 PUSH32 0x107553D8191D85B405879CF752997865EDD48D94E20BDA4DD27223C94B31A7CC SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x576 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x58B PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP3 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B5 DUP3 DUP3 PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH2 0x5D9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CE DUP5 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206F7220617070726F76656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x63E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x660 DUP4 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH2 0x6A2 PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP3 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x1800CD2301FBC20790ED94F3D55A28EF2306A9C31CD3C72B5B71B6E4CF5C6241 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x75D PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617365205552492063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0xD PUSH2 0x7BA DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST POP PUSH32 0x5411E8EBF1636D9E83D5FC4900BF80CBAC82E8790DA2A4C94DB4895E889EEDF6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x850 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x0 PUSH2 0x101A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x864 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x86C PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 PUSH32 0x80170B5FCDD2BF1E0660EF4B8851F86685F64D41B1A19DE1471947ECE8725AAC SWAP1 PUSH1 0x20 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8B2 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x8BA PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0x8FB PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420766572696669657220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x243549A92B2412F7A3CAF7A2E56D65B8821B91345363FAA5F57195384065FCC SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x47F CALLER DUP4 DUP4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x9B9 DUP5 DUP5 DUP5 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x50D CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9D1 DUP3 PUSH2 0x7F5 JUMP JUMPDEST POP PUSH2 0x3B3 DUP3 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x9EB PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD LT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP2 TIMESTAMP GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5552492063616E6E6F7420626520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xCE3829100355B953CCF0678623667F04F1EF312616E89358BC4973F327D3B68B SWAP3 DUP9 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 PUSH2 0xB69 DUP4 PUSH2 0x223B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xBC2 DUP3 PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD0 DUP3 DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0xC35 DUP4 PUSH2 0x223B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881251081DD85CC8189D5C9B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xC9B DUP9 DUP3 PUSH2 0x142D JUMP JUMPDEST PUSH2 0xCA5 DUP2 DUP9 PUSH2 0xF8F JUMP JUMPDEST DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDF92894DC4675A7333CAA5903B69CF5D8E8EC0D3F361C88207B6688E525703BB DUP10 PUSH1 0x40 MLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x50D PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD2B PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x6A2 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3B3 JUMPI POP PUSH2 0x3B3 DUP3 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x576 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xDF6 JUMPI PUSH2 0xDF6 DUP2 DUP5 DUP7 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xE34 JUMPI PUSH2 0xE13 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xE63 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xEF7 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFA7 DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1074 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF24 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D6 PUSH32 0x0 PUSH1 0xA PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D6 PUSH32 0x0 PUSH1 0xB PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x11E9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1221 SWAP2 DUP2 ADD SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x128D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x12C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12DD DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x12F7 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1323 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1345 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1381 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1393 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x13C5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13AD SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CE DUP5 PUSH2 0x16DE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x13E3 PUSH2 0x1746 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1413 DUP7 DUP7 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1423 DUP3 DUP3 PUSH2 0x18BE JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x47F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1478 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3B3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14AB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 PUSH2 0x14BB DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14E7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14FA JUMPI POP PUSH2 0x14F8 DUP2 DUP5 PUSH2 0xCF5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x156B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15A8 DUP4 DUP4 DUP4 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x576 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x163E JUMPI PUSH2 0x1637 DUP4 PUSH2 0x19F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x164A SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1676 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1698 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16E9 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x16F4 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH2 0x171E DUP5 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x172F SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x179F JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x17C9 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x10D6 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x18AB JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x189D DUP9 DUP3 DUP6 DUP6 PUSH2 0x1AC4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x18B7 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x18DB JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EF PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1921 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1956 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x1981 DUP4 DUP4 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x576 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13CE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x19C9 JUMPI POP PUSH2 0x19C9 DUP5 DUP5 PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH2 0x13CE JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x19FF DUP4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A3E DUP4 PUSH2 0x1C20 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5E PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1A92 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1AFF JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B7F JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1B89 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP4 DUP4 PUSH1 0x0 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1C5F JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CA9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CC1 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CD5 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CE7 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3B3 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x173F DUP2 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D2E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D67 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x173F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDF DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0B DUP5 PUSH2 0x1DA7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E19 PUSH1 0x20 DUP6 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173F DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E86 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x1E44 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CE DUP5 DUP3 DUP6 ADD PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1F3C PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1D4F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1F4E DUP2 DUP11 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F84 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FCE DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200D DUP6 PUSH2 0x1DA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x201B PUSH1 0x20 DUP7 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2075 DUP6 PUSH2 0x1DA7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x209E DUP9 DUP4 DUP10 ADD PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E4 DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 PUSH1 0x20 DUP5 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x210F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x215C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2168 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2195 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x21A9 DUP2 PUSH2 0x21A3 DUP5 SLOAD PUSH2 0x20FB JUMP JUMPDEST DUP5 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21DE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x21C6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x220D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x21EE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x222B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x225B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2295 SWAP1 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x173F DUP2 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x22CE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1D2B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x22E2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1D2B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xD1 MULMOD PUSH16 0xD1E96ED85DAE3AD80841371BAD33102 SUB 0x49 0xCD 0xBF 0xEC PUSH4 0xE6B152AE 0xC0 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"500:5262:27:-:0;;;1712:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:20;;;;;;;;;;;;;-1:-1:-1;;;3328:431:20;;;;;;;;;;;;;;;;-1:-1:-1;;;3328:431:20;;;1867:12:27;1380:113:6;;;;;;;;;;;;;-1:-1:-1;;;1380:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:6;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:6;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4390:51:28;4363:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:15;2061:7;:21;1231:7:14;:15;;-1:-1:-1;;1231:15:14;;;3401:45:20;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4711:25:28;4752:18;;;4745:34;;;;4795:18;;;4788:34;4255:13:20;4838:18:28;;;4831:34;4278:4:20;4881:19:28;;;4874:61;4168:7:20;;4683:19:28;;4204:80:20;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:20;3725:27;;1933:13:27::3;:23;1949:7:::0;1933:13;:23:::3;:::i;:::-;-1:-1:-1::0;1967:9:27::3;:20:::0;;-1:-1:-1;;;;;;1967:20:27::3;-1:-1:-1::0;;;;;1967:20:27;;;::::3;::::0;;;::::3;::::0;;-1:-1:-1;500:5262:27;;-1:-1:-1;500:5262:27;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:16:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:16;;-1:-1:-1;3006:215:16;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:16;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:16:o;14:177:28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:28;552:16;;545:27;328:250::o;583:1067::-;681:6;689;697;750:2;738:9;729:7;725:23;721:32;718:52;;;766:1;763;756:12;718:52;789:40;819:9;789:40;:::i;:::-;873:2;858:18;;852:25;779:50;;-1:-1:-1;;;;;;926:14:28;;;923:34;;;953:1;950;943:12;923:34;991:6;980:9;976:22;966:32;;1036:7;1029:4;1025:2;1021:13;1017:27;1007:55;;1058:1;1055;1048:12;1007:55;1087:2;1081:9;1109:2;1105;1102:10;1099:36;;;1115:18;;:::i;:::-;1190:2;1184:9;1158:2;1244:13;;-1:-1:-1;;1240:22:28;;;1264:2;1236:31;1232:40;1220:53;;;1288:18;;;1308:22;;;1285:46;1282:72;;;1334:18;;:::i;:::-;1374:10;1370:2;1363:22;1409:2;1401:6;1394:18;1449:7;1444:2;1439;1435;1431:11;1427:20;1424:33;1421:53;;;1470:1;1467;1460:12;1421:53;1483:68;1548:2;1543;1535:6;1531:15;1526:2;1522;1518:11;1483:68;:::i;:::-;1570:6;1560:16;;;;;;;1595:49;1640:2;1629:9;1625:18;1595:49;:::i;:::-;1585:59;;583:1067;;;;;:::o;1655:380::-;1734:1;1730:12;;;;1777;;;1798:61;;1852:4;1844:6;1840:17;1830:27;;1798:61;1905:2;1897:6;1894:14;1874:18;1871:38;1868:161;;1951:10;1946:3;1942:20;1939:1;1932:31;1986:4;1983:1;1976:15;2014:4;2011:1;2004:15;1868:161;;1655:380;;;:::o;2166:545::-;2268:2;2263:3;2260:11;2257:448;;;2304:1;2329:5;2325:2;2318:17;2374:4;2370:2;2360:19;2444:2;2432:10;2428:19;2425:1;2421:27;2415:4;2411:38;2480:4;2468:10;2465:20;2462:47;;;-1:-1:-1;2503:4:28;2462:47;2558:2;2553:3;2549:12;2546:1;2542:20;2536:4;2532:31;2522:41;;2613:82;2631:2;2624:5;2621:13;2613:82;;;2676:17;;;2657:1;2646:13;2613:82;;;2617:3;;;2257:448;2166:545;;;:::o;2887:1352::-;3007:10;;-1:-1:-1;;;;;3029:30:28;;3026:56;;;3062:18;;:::i;:::-;3091:97;3181:6;3141:38;3173:4;3167:11;3141:38;:::i;:::-;3135:4;3091:97;:::i;:::-;3243:4;;3307:2;3296:14;;3324:1;3319:663;;;;4026:1;4043:6;4040:89;;;-1:-1:-1;4095:19:28;;;4089:26;4040:89;-1:-1:-1;;2844:1:28;2840:11;;;2836:24;2832:29;2822:40;2868:1;2864:11;;;2819:57;4142:81;;3289:944;;3319:663;2113:1;2106:14;;;2150:4;2137:18;;-1:-1:-1;;3355:20:28;;;3473:236;3487:7;3484:1;3481:14;3473:236;;;3576:19;;;3570:26;3555:42;;3668:27;;;;3636:1;3624:14;;;;3503:19;;3473:236;;;3477:3;3737:6;3728:7;3725:19;3722:201;;;3798:19;;;3792:26;-1:-1:-1;;3881:1:28;3877:14;;;3893:3;3873:24;3869:37;3865:42;3850:58;3835:74;;3722:201;-1:-1:-1;;;;;3969:1:28;3953:14;;;3949:22;3936:36;;-1:-1:-1;2887:1352:28:o;4946:396::-;5095:2;5084:9;5077:21;5058:4;5127:6;5121:13;5170:6;5165:2;5154:9;5150:18;5143:34;5186:79;5258:6;5253:2;5242:9;5238:18;5233:2;5225:6;5221:15;5186:79;:::i;:::-;5326:2;5305:15;-1:-1:-1;;5301:29:28;5286:45;;;;5333:2;5282:54;;4946:396;-1:-1:-1;;4946:396:28:o;5347:297::-;5465:12;;5512:4;5501:16;;;5495:23;;5465:12;5530:16;;5527:111;;;-1:-1:-1;;5604:4:28;5600:17;;;;5597:1;5593:25;5589:38;5578:50;;5347:297;-1:-1:-1;5347:297:28:o;:::-;500:5262:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_3155":{"entryPoint":4265,"id":3155,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3167":{"entryPoint":4315,"id":3167,"parameterSlots":0,"returnSlots":1},"@_approve_1165":{"entryPoint":3516,"id":1165,"parameterSlots":3,"returnSlots":0},"@_approve_1231":{"entryPoint":5271,"id":1231,"parameterSlots":4,"returnSlots":0},"@_baseURI_7107":{"entryPoint":5839,"id":7107,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_3085":{"entryPoint":null,"id":3085,"parameterSlots":0,"returnSlots":1},"@_burn_1039":{"entryPoint":4063,"id":1039,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_805":{"entryPoint":5533,"id":805,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3778,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3064":{"entryPoint":5958,"id":3064,"parameterSlots":0,"returnSlots":1},"@_getApproved_732":{"entryPoint":null,"id":732,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_3101":{"entryPoint":5078,"id":3101,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_768":{"entryPoint":6543,"id":768,"parameterSlots":3,"returnSlots":1},"@_mint_961":{"entryPoint":7059,"id":961,"parameterSlots":2,"returnSlots":0},"@_msgSender_1676":{"entryPoint":null,"id":1676,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1920":{"entryPoint":null,"id":1920,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1912":{"entryPoint":3905,"id":1912,"parameterSlots":0,"returnSlots":0},"@_ownerOf_719":{"entryPoint":null,"id":719,"parameterSlots":1,"returnSlots":1},"@_pause_1846":{"entryPoint":4204,"id":1846,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1817":{"entryPoint":3947,"id":1817,"parameterSlots":0,"returnSlots":0},"@_requireOwned_1297":{"entryPoint":3459,"id":1297,"parameterSlots":1,"returnSlots":1},"@_requirePaused_1830":{"entryPoint":5633,"id":1830,"parameterSlots":0,"returnSlots":0},"@_safeMint_1006":{"entryPoint":6519,"id":1006,"parameterSlots":3,"returnSlots":0},"@_safeMint_976":{"entryPoint":5165,"id":976,"parameterSlots":2,"returnSlots":0},"@_setApprovalForAll_1268":{"entryPoint":4360,"id":1268,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1558":{"entryPoint":3983,"id":1558,"parameterSlots":2,"returnSlots":0},"@_throwError_2940":{"entryPoint":6334,"id":2940,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4122,"id":146,"parameterSlots":1,"returnSlots":0},"@_unpause_1862":{"entryPoint":3823,"id":1862,"parameterSlots":0,"returnSlots":0},"@_update_911":{"entryPoint":3529,"id":911,"parameterSlots":3,"returnSlots":1},"@approve_562":{"entryPoint":1140,"id":562,"parameterSlots":2,"returnSlots":0},"@balanceOf_470":{"entryPoint":2048,"id":470,"parameterSlots":1,"returnSlots":1},"@burn_7200":{"entryPoint":1403,"id":7200,"parameterSlots":1,"returnSlots":0},"@byteLength_2050":{"entryPoint":7160,"id":2050,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1663":{"entryPoint":4519,"id":1663,"parameterSlots":5,"returnSlots":0},"@eip712Domain_3143":{"entryPoint":2206,"id":3143,"parameterSlots":0,"returnSlots":7},"@getApproved_579":{"entryPoint":1099,"id":579,"parameterSlots":1,"returnSlots":1},"@invalidateNonce_7282":{"entryPoint":1701,"id":7282,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_612":{"entryPoint":3317,"id":612,"parameterSlots":2,"returnSlots":1},"@log10_4656":{"entryPoint":7200,"id":4656,"parameterSlots":1,"returnSlots":1},"@name_492":{"entryPoint":953,"id":492,"parameterSlots":0,"returnSlots":1},"@nonces_7212":{"entryPoint":null,"id":7212,"parameterSlots":1,"returnSlots":1},"@ownerOf_483":{"entryPoint":2037,"id":483,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_7082":{"entryPoint":2140,"id":7082,"parameterSlots":0,"returnSlots":0},"@paused_1805":{"entryPoint":null,"id":1805,"parameterSlots":0,"returnSlots":1},"@recover_2697":{"entryPoint":5123,"id":2697,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2120,"id":98,"parameterSlots":0,"returnSlots":0},"@safeMint_7039":{"entryPoint":2523,"id":7039,"parameterSlots":4,"returnSlots":0},"@safeTransferFrom_676":{"entryPoint":1371,"id":676,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_706":{"entryPoint":2478,"id":706,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_595":{"entryPoint":2467,"id":595,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7066":{"entryPoint":1877,"id":7066,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1482":{"entryPoint":3422,"id":1482,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3265":{"entryPoint":null,"id":3265,"parameterSlots":1,"returnSlots":1},"@supportsInterface_442":{"entryPoint":5191,"id":442,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7141":{"entryPoint":936,"id":7141,"parameterSlots":1,"returnSlots":1},"@symbol_501":{"entryPoint":2276,"id":501,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2117":{"entryPoint":5668,"id":2117,"parameterSlots":2,"returnSlots":1},"@toString_2018":{"entryPoint":6642,"id":2018,"parameterSlots":1,"returnSlots":1},"@toString_2341":{"entryPoint":6705,"id":2341,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3241":{"entryPoint":null,"id":3241,"parameterSlots":2,"returnSlots":1},"@tokenURI_1539":{"entryPoint":4818,"id":1539,"parameterSlots":1,"returnSlots":1},"@tokenURI_537":{"entryPoint":5854,"id":537,"parameterSlots":1,"returnSlots":1},"@tokenURI_7126":{"entryPoint":2502,"id":7126,"parameterSlots":1,"returnSlots":1},"@transferFrom_658":{"entryPoint":1155,"id":658,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3363,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_2667":{"entryPoint":6257,"id":2667,"parameterSlots":2,"returnSlots":3},"@tryRecover_2855":{"entryPoint":6852,"id":2855,"parameterSlots":4,"returnSlots":3},"@unpause_7098":{"entryPoint":1299,"id":7098,"parameterSlots":0,"returnSlots":0},"@updateVerifier_7243":{"entryPoint":2291,"id":7243,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":7591,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":7770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8392,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7661,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8174,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8114,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr":{"entryPoint":8278,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7619,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7438,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":7911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":7503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8892,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8802,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7964,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09137e482b6b203228712b3a3778c204812f195c570565d3a641f9cfbfcae705__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_603f4022c7c9bca46ef8304cd6a88dd2e6d49898b43e3a9ed7aea6d1839c2f9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_988e2d3f8e6b36776351fc027ad241d4ba88f694364705255b0aa85f453113c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8501,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":8571,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7467,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8443,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":8763,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8939,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7748,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":7416,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17253:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:28","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:28"},"nodeType":"YulFunctionCall","src":"125:12:28"},"nodeType":"YulExpressionStatement","src":"125:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:28"},"nodeType":"YulFunctionCall","src":"99:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:28"},"nodeType":"YulFunctionCall","src":"88:32:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:28"},"nodeType":"YulFunctionCall","src":"78:43:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:28"},"nodeType":"YulFunctionCall","src":"71:51:28"},"nodeType":"YulIf","src":"68:71:28"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:28","type":""}],"src":"14:131:28"},{"body":{"nodeType":"YulBlock","src":"219:176:28","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:28"},"nodeType":"YulFunctionCall","src":"267:12:28"},"nodeType":"YulExpressionStatement","src":"267:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:28"},"nodeType":"YulFunctionCall","src":"236:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:28"},"nodeType":"YulFunctionCall","src":"232:32:28"},"nodeType":"YulIf","src":"229:52:28"},{"nodeType":"YulVariableDeclaration","src":"290:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:28"},"nodeType":"YulFunctionCall","src":"303:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:28"},"nodeType":"YulFunctionCall","src":"335:30:28"},"nodeType":"YulExpressionStatement","src":"335:30:28"},{"nodeType":"YulAssignment","src":"374:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:28","type":""}],"src":"150:245:28"},{"body":{"nodeType":"YulBlock","src":"495:92:28","statements":[{"nodeType":"YulAssignment","src":"505:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:28"},"nodeType":"YulFunctionCall","src":"513:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:28"},"nodeType":"YulFunctionCall","src":"565:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:28"},"nodeType":"YulFunctionCall","src":"558:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:28"},"nodeType":"YulFunctionCall","src":"540:41:28"},"nodeType":"YulExpressionStatement","src":"540:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:28","type":""}],"src":"400:187:28"},{"body":{"nodeType":"YulBlock","src":"658:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:28"},"nodeType":"YulFunctionCall","src":"758:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:28"},"nodeType":"YulFunctionCall","src":"777:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:28"},"nodeType":"YulFunctionCall","src":"771:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:28"},"nodeType":"YulFunctionCall","src":"751:39:28"},"nodeType":"YulExpressionStatement","src":"751:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:28"},"nodeType":"YulFunctionCall","src":"695:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:28","statements":[{"nodeType":"YulAssignment","src":"711:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:28"},"nodeType":"YulFunctionCall","src":"716:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:28","statements":[]},"src":"687:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:28"},"nodeType":"YulFunctionCall","src":"816:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:28"},"nodeType":"YulFunctionCall","src":"809:27:28"},"nodeType":"YulExpressionStatement","src":"809:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:28","type":""}],"src":"592:250:28"},{"body":{"nodeType":"YulBlock","src":"897:221:28","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:28"},"nodeType":"YulFunctionCall","src":"921:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:28"},"nodeType":"YulFunctionCall","src":"942:19:28"},"nodeType":"YulExpressionStatement","src":"942:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:28"},"nodeType":"YulFunctionCall","src":"1005:16:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:28"},"nodeType":"YulFunctionCall","src":"1023:14:28"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:28"},"nodeType":"YulFunctionCall","src":"970:76:28"},"nodeType":"YulExpressionStatement","src":"970:76:28"},{"nodeType":"YulAssignment","src":"1055:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:28"},"nodeType":"YulFunctionCall","src":"1079:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:28"},"nodeType":"YulFunctionCall","src":"1096:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:28"},"nodeType":"YulFunctionCall","src":"1075:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:28"},"nodeType":"YulFunctionCall","src":"1066:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:28"},"nodeType":"YulFunctionCall","src":"1062:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:28"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:28","type":""}],"src":"847:271:28"},{"body":{"nodeType":"YulBlock","src":"1244:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:28"},"nodeType":"YulFunctionCall","src":"1254:21:28"},"nodeType":"YulExpressionStatement","src":"1254:21:28"},{"nodeType":"YulAssignment","src":"1284:53:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:28"},"nodeType":"YulFunctionCall","src":"1318:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:28"},"nodeType":"YulFunctionCall","src":"1292:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:28","type":""}],"src":"1123:220:28"},{"body":{"nodeType":"YulBlock","src":"1418:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:28"},"nodeType":"YulFunctionCall","src":"1466:12:28"},"nodeType":"YulExpressionStatement","src":"1466:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:28"},"nodeType":"YulFunctionCall","src":"1435:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:28"},"nodeType":"YulFunctionCall","src":"1431:32:28"},"nodeType":"YulIf","src":"1428:52:28"},{"nodeType":"YulAssignment","src":"1489:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:28"},"nodeType":"YulFunctionCall","src":"1499:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:28","type":""}],"src":"1348:180:28"},{"body":{"nodeType":"YulBlock","src":"1634:102:28","statements":[{"nodeType":"YulAssignment","src":"1644:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:28"},"nodeType":"YulFunctionCall","src":"1652:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:28"},"nodeType":"YulFunctionCall","src":"1713:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:28"},"nodeType":"YulFunctionCall","src":"1709:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:28"},"nodeType":"YulFunctionCall","src":"1697:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:28"},"nodeType":"YulFunctionCall","src":"1679:51:28"},"nodeType":"YulExpressionStatement","src":"1679:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:28","type":""}],"src":"1533:203:28"},{"body":{"nodeType":"YulBlock","src":"1790:124:28","statements":[{"nodeType":"YulAssignment","src":"1800:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:28"},"nodeType":"YulFunctionCall","src":"1809:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:28"},"nodeType":"YulFunctionCall","src":"1894:12:28"},"nodeType":"YulExpressionStatement","src":"1894:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:28"},"nodeType":"YulFunctionCall","src":"1873:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:28"},"nodeType":"YulFunctionCall","src":"1869:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:28"},"nodeType":"YulFunctionCall","src":"1858:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:28"},"nodeType":"YulFunctionCall","src":"1848:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:28"},"nodeType":"YulFunctionCall","src":"1841:50:28"},"nodeType":"YulIf","src":"1838:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:28","type":""}],"src":"1741:173:28"},{"body":{"nodeType":"YulBlock","src":"2006:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:28"},"nodeType":"YulFunctionCall","src":"2054:12:28"},"nodeType":"YulExpressionStatement","src":"2054:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:28"},"nodeType":"YulFunctionCall","src":"2023:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:28"},"nodeType":"YulFunctionCall","src":"2019:32:28"},"nodeType":"YulIf","src":"2016:52:28"},{"nodeType":"YulAssignment","src":"2077:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:28"},"nodeType":"YulFunctionCall","src":"2087:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:28"}]},{"nodeType":"YulAssignment","src":"2125:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:28"},"nodeType":"YulFunctionCall","src":"2148:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:28"},"nodeType":"YulFunctionCall","src":"2135:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:28","type":""}],"src":"1919:254:28"},{"body":{"nodeType":"YulBlock","src":"2282:224:28","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:28"},"nodeType":"YulFunctionCall","src":"2330:12:28"},"nodeType":"YulExpressionStatement","src":"2330:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:28"},"nodeType":"YulFunctionCall","src":"2299:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:28"},"nodeType":"YulFunctionCall","src":"2295:32:28"},"nodeType":"YulIf","src":"2292:52:28"},{"nodeType":"YulAssignment","src":"2353:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:28"},"nodeType":"YulFunctionCall","src":"2363:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:28"}]},{"nodeType":"YulAssignment","src":"2401:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:28"},"nodeType":"YulFunctionCall","src":"2430:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2411:18:28"},"nodeType":"YulFunctionCall","src":"2411:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:28"}]},{"nodeType":"YulAssignment","src":"2458:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2485:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2496:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:28"},"nodeType":"YulFunctionCall","src":"2481:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2468:12:28"},"nodeType":"YulFunctionCall","src":"2468:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2458:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:28","type":""}],"src":"2178:328:28"},{"body":{"nodeType":"YulBlock","src":"2581:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"2627:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:28"},"nodeType":"YulFunctionCall","src":"2629:12:28"},"nodeType":"YulExpressionStatement","src":"2629:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2602:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2598:3:28"},"nodeType":"YulFunctionCall","src":"2598:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2623:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2594:3:28"},"nodeType":"YulFunctionCall","src":"2594:32:28"},"nodeType":"YulIf","src":"2591:52:28"},{"nodeType":"YulAssignment","src":"2652:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2662:18:28"},"nodeType":"YulFunctionCall","src":"2662:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2547:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2558:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2570:6:28","type":""}],"src":"2511:186:28"},{"body":{"nodeType":"YulBlock","src":"2734:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2751:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2758:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2763:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2754:3:28"},"nodeType":"YulFunctionCall","src":"2754:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2744:6:28"},"nodeType":"YulFunctionCall","src":"2744:31:28"},"nodeType":"YulExpressionStatement","src":"2744:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2791:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2794:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2784:6:28"},"nodeType":"YulFunctionCall","src":"2784:15:28"},"nodeType":"YulExpressionStatement","src":"2784:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2815:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2818:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2808:6:28"},"nodeType":"YulFunctionCall","src":"2808:15:28"},"nodeType":"YulExpressionStatement","src":"2808:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2702:127:28"},{"body":{"nodeType":"YulBlock","src":"2887:666:28","statements":[{"body":{"nodeType":"YulBlock","src":"2936:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2945:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2948:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2938:6:28"},"nodeType":"YulFunctionCall","src":"2938:12:28"},"nodeType":"YulExpressionStatement","src":"2938:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2915:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2923:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2911:3:28"},"nodeType":"YulFunctionCall","src":"2911:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"2930:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2907:3:28"},"nodeType":"YulFunctionCall","src":"2907:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2900:6:28"},"nodeType":"YulFunctionCall","src":"2900:35:28"},"nodeType":"YulIf","src":"2897:55:28"},{"nodeType":"YulVariableDeclaration","src":"2961:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2984:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2971:12:28"},"nodeType":"YulFunctionCall","src":"2971:20:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2965:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3000:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3010:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3004:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3051:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3053:16:28"},"nodeType":"YulFunctionCall","src":"3053:18:28"},"nodeType":"YulExpressionStatement","src":"3053:18:28"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3043:2:28"},{"name":"_2","nodeType":"YulIdentifier","src":"3047:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3040:2:28"},"nodeType":"YulFunctionCall","src":"3040:10:28"},"nodeType":"YulIf","src":"3037:36:28"},{"nodeType":"YulVariableDeclaration","src":"3082:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3096:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3092:3:28"},"nodeType":"YulFunctionCall","src":"3092:7:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3086:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3108:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3128:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3122:5:28"},"nodeType":"YulFunctionCall","src":"3122:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3112:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3140:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3162:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3186:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"3190:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:28"},"nodeType":"YulFunctionCall","src":"3182:13:28"},{"name":"_3","nodeType":"YulIdentifier","src":"3197:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3178:3:28"},"nodeType":"YulFunctionCall","src":"3178:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"3202:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:28"},"nodeType":"YulFunctionCall","src":"3174:31:28"},{"name":"_3","nodeType":"YulIdentifier","src":"3207:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3170:3:28"},"nodeType":"YulFunctionCall","src":"3170:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3158:3:28"},"nodeType":"YulFunctionCall","src":"3158:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3144:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3270:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3272:16:28"},"nodeType":"YulFunctionCall","src":"3272:18:28"},"nodeType":"YulExpressionStatement","src":"3272:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3229:10:28"},{"name":"_2","nodeType":"YulIdentifier","src":"3241:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3226:2:28"},"nodeType":"YulFunctionCall","src":"3226:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3249:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3261:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3246:2:28"},"nodeType":"YulFunctionCall","src":"3246:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3223:2:28"},"nodeType":"YulFunctionCall","src":"3223:46:28"},"nodeType":"YulIf","src":"3220:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3308:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3312:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3301:6:28"},"nodeType":"YulFunctionCall","src":"3301:22:28"},"nodeType":"YulExpressionStatement","src":"3301:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3339:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3347:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:28"},"nodeType":"YulFunctionCall","src":"3332:18:28"},"nodeType":"YulExpressionStatement","src":"3332:18:28"},{"body":{"nodeType":"YulBlock","src":"3398:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:28"},"nodeType":"YulFunctionCall","src":"3400:12:28"},"nodeType":"YulExpressionStatement","src":"3400:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3373:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3381:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3369:3:28"},"nodeType":"YulFunctionCall","src":"3369:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"3386:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3365:3:28"},"nodeType":"YulFunctionCall","src":"3365:26:28"},{"name":"end","nodeType":"YulIdentifier","src":"3393:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3362:2:28"},"nodeType":"YulFunctionCall","src":"3362:35:28"},"nodeType":"YulIf","src":"3359:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3440:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3448:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3436:3:28"},"nodeType":"YulFunctionCall","src":"3436:17:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3459:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3467:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3455:3:28"},"nodeType":"YulFunctionCall","src":"3455:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3474:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3423:12:28"},"nodeType":"YulFunctionCall","src":"3423:54:28"},"nodeType":"YulExpressionStatement","src":"3423:54:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3501:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3509:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:28"},"nodeType":"YulFunctionCall","src":"3497:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"3514:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:28"},"nodeType":"YulFunctionCall","src":"3493:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"3521:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3486:6:28"},"nodeType":"YulFunctionCall","src":"3486:37:28"},"nodeType":"YulExpressionStatement","src":"3486:37:28"},{"nodeType":"YulAssignment","src":"3532:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3541:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3532:5:28"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2861:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2869:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2877:5:28","type":""}],"src":"2834:719:28"},{"body":{"nodeType":"YulBlock","src":"3638:242:28","statements":[{"body":{"nodeType":"YulBlock","src":"3684:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3693:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3696:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3686:6:28"},"nodeType":"YulFunctionCall","src":"3686:12:28"},"nodeType":"YulExpressionStatement","src":"3686:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3659:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3668:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3655:3:28"},"nodeType":"YulFunctionCall","src":"3655:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3680:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3651:3:28"},"nodeType":"YulFunctionCall","src":"3651:32:28"},"nodeType":"YulIf","src":"3648:52:28"},{"nodeType":"YulVariableDeclaration","src":"3709:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3736:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3723:12:28"},"nodeType":"YulFunctionCall","src":"3723:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3713:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3789:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3798:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3801:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3791:6:28"},"nodeType":"YulFunctionCall","src":"3791:12:28"},"nodeType":"YulExpressionStatement","src":"3791:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3761:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3769:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3758:2:28"},"nodeType":"YulFunctionCall","src":"3758:30:28"},"nodeType":"YulIf","src":"3755:50:28"},{"nodeType":"YulAssignment","src":"3814:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3857:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3842:3:28"},"nodeType":"YulFunctionCall","src":"3842:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3866:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3824:17:28"},"nodeType":"YulFunctionCall","src":"3824:50:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3814:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3604:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3615:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3627:6:28","type":""}],"src":"3558:322:28"},{"body":{"nodeType":"YulBlock","src":"3986:76:28","statements":[{"nodeType":"YulAssignment","src":"3996:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4008:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4019:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4004:3:28"},"nodeType":"YulFunctionCall","src":"4004:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3996:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4038:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4049:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4031:6:28"},"nodeType":"YulFunctionCall","src":"4031:25:28"},"nodeType":"YulExpressionStatement","src":"4031:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3955:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3966:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3977:4:28","type":""}],"src":"3885:177:28"},{"body":{"nodeType":"YulBlock","src":"4424:902:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4441:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4456:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4468:3:28","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"4473:3:28","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4464:3:28"},"nodeType":"YulFunctionCall","src":"4464:13:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4452:3:28"},"nodeType":"YulFunctionCall","src":"4452:26:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4434:6:28"},"nodeType":"YulFunctionCall","src":"4434:45:28"},"nodeType":"YulExpressionStatement","src":"4434:45:28"},{"nodeType":"YulVariableDeclaration","src":"4488:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4498:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4492:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4520:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4531:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4516:3:28"},"nodeType":"YulFunctionCall","src":"4516:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"4536:3:28","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4509:6:28"},"nodeType":"YulFunctionCall","src":"4509:31:28"},"nodeType":"YulExpressionStatement","src":"4509:31:28"},{"nodeType":"YulVariableDeclaration","src":"4549:60:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4581:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4593:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4604:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4589:3:28"},"nodeType":"YulFunctionCall","src":"4589:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4563:17:28"},"nodeType":"YulFunctionCall","src":"4563:46:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4553:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4629:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:28"},"nodeType":"YulFunctionCall","src":"4625:18:28"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4649:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4645:3:28"},"nodeType":"YulFunctionCall","src":"4645:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4618:6:28"},"nodeType":"YulFunctionCall","src":"4618:50:28"},"nodeType":"YulExpressionStatement","src":"4618:50:28"},{"nodeType":"YulVariableDeclaration","src":"4677:47:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4709:6:28"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4717:6:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4691:17:28"},"nodeType":"YulFunctionCall","src":"4691:33:28"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4681:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4744:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4755:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4740:3:28"},"nodeType":"YulFunctionCall","src":"4740:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"4760:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4733:6:28"},"nodeType":"YulFunctionCall","src":"4733:34:28"},"nodeType":"YulExpressionStatement","src":"4733:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4787:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4798:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4783:3:28"},"nodeType":"YulFunctionCall","src":"4783:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4808:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4824:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4829:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4820:3:28"},"nodeType":"YulFunctionCall","src":"4820:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4833:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4816:3:28"},"nodeType":"YulFunctionCall","src":"4816:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4804:3:28"},"nodeType":"YulFunctionCall","src":"4804:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:28"},"nodeType":"YulFunctionCall","src":"4776:61:28"},"nodeType":"YulExpressionStatement","src":"4776:61:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4857:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4868:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4853:3:28"},"nodeType":"YulFunctionCall","src":"4853:19:28"},{"name":"value5","nodeType":"YulIdentifier","src":"4874:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4846:6:28"},"nodeType":"YulFunctionCall","src":"4846:35:28"},"nodeType":"YulExpressionStatement","src":"4846:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4901:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4912:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4897:3:28"},"nodeType":"YulFunctionCall","src":"4897:19:28"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4922:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4918:3:28"},"nodeType":"YulFunctionCall","src":"4918:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4890:6:28"},"nodeType":"YulFunctionCall","src":"4890:51:28"},"nodeType":"YulExpressionStatement","src":"4890:51:28"},{"nodeType":"YulVariableDeclaration","src":"4950:17:28","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4961:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4954:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4976:27:28","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4996:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4990:5:28"},"nodeType":"YulFunctionCall","src":"4990:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4980:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5019:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"5027:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5012:6:28"},"nodeType":"YulFunctionCall","src":"5012:22:28"},"nodeType":"YulExpressionStatement","src":"5012:22:28"},{"nodeType":"YulAssignment","src":"5043:22:28","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5054:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5062:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5050:3:28"},"nodeType":"YulFunctionCall","src":"5050:15:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5043:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"5074:29:28","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5092:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5100:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5088:3:28"},"nodeType":"YulFunctionCall","src":"5088:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5078:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5112:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5121:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5116:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5180:120:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5201:3:28"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5212:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5206:5:28"},"nodeType":"YulFunctionCall","src":"5206:13:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5194:6:28"},"nodeType":"YulFunctionCall","src":"5194:26:28"},"nodeType":"YulExpressionStatement","src":"5194:26:28"},{"nodeType":"YulAssignment","src":"5233:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5244:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5249:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:28"},"nodeType":"YulFunctionCall","src":"5240:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5233:3:28"}]},{"nodeType":"YulAssignment","src":"5265:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5279:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5287:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5275:3:28"},"nodeType":"YulFunctionCall","src":"5275:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5265:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5142:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"5145:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5139:2:28"},"nodeType":"YulFunctionCall","src":"5139:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5153:18:28","statements":[{"nodeType":"YulAssignment","src":"5155:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5164:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5167:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5160:3:28"},"nodeType":"YulFunctionCall","src":"5160:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5155:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5135:3:28","statements":[]},"src":"5131:169:28"},{"nodeType":"YulAssignment","src":"5309:11:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"5317:3:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5309:4:28"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4345:9:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4356:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4364:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4372:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4380:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4388:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4396:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4404:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4415:4:28","type":""}],"src":"4067:1259:28"},{"body":{"nodeType":"YulBlock","src":"5415:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"5461:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5470:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5473:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5463:6:28"},"nodeType":"YulFunctionCall","src":"5463:12:28"},"nodeType":"YulExpressionStatement","src":"5463:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5436:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5445:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5432:3:28"},"nodeType":"YulFunctionCall","src":"5432:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5457:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5428:3:28"},"nodeType":"YulFunctionCall","src":"5428:32:28"},"nodeType":"YulIf","src":"5425:52:28"},{"nodeType":"YulAssignment","src":"5486:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5515:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5496:18:28"},"nodeType":"YulFunctionCall","src":"5496:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5486:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"5534:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5564:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5575:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5560:3:28"},"nodeType":"YulFunctionCall","src":"5560:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5547:12:28"},"nodeType":"YulFunctionCall","src":"5547:32:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5538:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5632:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5641:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5644:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5634:6:28"},"nodeType":"YulFunctionCall","src":"5634:12:28"},"nodeType":"YulExpressionStatement","src":"5634:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5601:5:28"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5622:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5615:6:28"},"nodeType":"YulFunctionCall","src":"5615:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5608:6:28"},"nodeType":"YulFunctionCall","src":"5608:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5598:2:28"},"nodeType":"YulFunctionCall","src":"5598:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5591:6:28"},"nodeType":"YulFunctionCall","src":"5591:40:28"},"nodeType":"YulIf","src":"5588:60:28"},{"nodeType":"YulAssignment","src":"5657:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5667:5:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5657:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5373:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5384:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5396:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5404:6:28","type":""}],"src":"5331:347:28"},{"body":{"nodeType":"YulBlock","src":"5813:408:28","statements":[{"body":{"nodeType":"YulBlock","src":"5860:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5869:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5872:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5862:6:28"},"nodeType":"YulFunctionCall","src":"5862:12:28"},"nodeType":"YulExpressionStatement","src":"5862:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5843:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5830:3:28"},"nodeType":"YulFunctionCall","src":"5830:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5855:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5826:3:28"},"nodeType":"YulFunctionCall","src":"5826:33:28"},"nodeType":"YulIf","src":"5823:53:28"},{"nodeType":"YulAssignment","src":"5885:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5914:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5895:18:28"},"nodeType":"YulFunctionCall","src":"5895:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5885:6:28"}]},{"nodeType":"YulAssignment","src":"5933:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5966:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5977:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5962:3:28"},"nodeType":"YulFunctionCall","src":"5962:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5943:18:28"},"nodeType":"YulFunctionCall","src":"5943:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5933:6:28"}]},{"nodeType":"YulAssignment","src":"5990:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6017:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6028:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:28"},"nodeType":"YulFunctionCall","src":"6013:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6000:12:28"},"nodeType":"YulFunctionCall","src":"6000:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5990:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6041:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6072:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6083:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6068:3:28"},"nodeType":"YulFunctionCall","src":"6068:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6055:12:28"},"nodeType":"YulFunctionCall","src":"6055:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6045:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6130:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6139:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6142:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6132:6:28"},"nodeType":"YulFunctionCall","src":"6132:12:28"},"nodeType":"YulExpressionStatement","src":"6132:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6102:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6110:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6099:2:28"},"nodeType":"YulFunctionCall","src":"6099:30:28"},"nodeType":"YulIf","src":"6096:50:28"},{"nodeType":"YulAssignment","src":"6155:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6187:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6198:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6183:3:28"},"nodeType":"YulFunctionCall","src":"6183:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6207:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6165:17:28"},"nodeType":"YulFunctionCall","src":"6165:50:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6155:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5755:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5766:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5778:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5786:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5794:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5802:6:28","type":""}],"src":"5683:538:28"},{"body":{"nodeType":"YulBlock","src":"6366:545:28","statements":[{"body":{"nodeType":"YulBlock","src":"6413:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6422:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6425:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6415:6:28"},"nodeType":"YulFunctionCall","src":"6415:12:28"},"nodeType":"YulExpressionStatement","src":"6415:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6387:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6396:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6383:3:28"},"nodeType":"YulFunctionCall","src":"6383:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6408:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6379:3:28"},"nodeType":"YulFunctionCall","src":"6379:33:28"},"nodeType":"YulIf","src":"6376:53:28"},{"nodeType":"YulAssignment","src":"6438:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6467:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6448:18:28"},"nodeType":"YulFunctionCall","src":"6448:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6438:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6486:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6528:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6513:3:28"},"nodeType":"YulFunctionCall","src":"6513:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6500:12:28"},"nodeType":"YulFunctionCall","src":"6500:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6490:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6541:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6551:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6545:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6596:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6605:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6608:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6598:6:28"},"nodeType":"YulFunctionCall","src":"6598:12:28"},"nodeType":"YulExpressionStatement","src":"6598:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6584:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6592:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6581:2:28"},"nodeType":"YulFunctionCall","src":"6581:14:28"},"nodeType":"YulIf","src":"6578:34:28"},{"nodeType":"YulAssignment","src":"6621:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6653:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6664:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6649:3:28"},"nodeType":"YulFunctionCall","src":"6649:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6673:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6631:17:28"},"nodeType":"YulFunctionCall","src":"6631:50:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6621:6:28"}]},{"nodeType":"YulAssignment","src":"6690:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6717:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6728:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6713:3:28"},"nodeType":"YulFunctionCall","src":"6713:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6700:12:28"},"nodeType":"YulFunctionCall","src":"6700:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6690:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6741:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6774:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6785:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6770:3:28"},"nodeType":"YulFunctionCall","src":"6770:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6757:12:28"},"nodeType":"YulFunctionCall","src":"6757:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6745:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6818:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6830:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6820:6:28"},"nodeType":"YulFunctionCall","src":"6820:12:28"},"nodeType":"YulExpressionStatement","src":"6820:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6804:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6814:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6801:2:28"},"nodeType":"YulFunctionCall","src":"6801:16:28"},"nodeType":"YulIf","src":"6798:36:28"},{"nodeType":"YulAssignment","src":"6843:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6875:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6886:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:28"},"nodeType":"YulFunctionCall","src":"6871:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6897:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6853:17:28"},"nodeType":"YulFunctionCall","src":"6853:52:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6843:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6308:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6319:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6331:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6339:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6347:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6355:6:28","type":""}],"src":"6226:685:28"},{"body":{"nodeType":"YulBlock","src":"7003:173:28","statements":[{"body":{"nodeType":"YulBlock","src":"7049:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7058:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7061:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7051:6:28"},"nodeType":"YulFunctionCall","src":"7051:12:28"},"nodeType":"YulExpressionStatement","src":"7051:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7024:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7033:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7020:3:28"},"nodeType":"YulFunctionCall","src":"7020:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"7045:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7016:3:28"},"nodeType":"YulFunctionCall","src":"7016:32:28"},"nodeType":"YulIf","src":"7013:52:28"},{"nodeType":"YulAssignment","src":"7074:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7103:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7084:18:28"},"nodeType":"YulFunctionCall","src":"7084:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7074:6:28"}]},{"nodeType":"YulAssignment","src":"7122:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7155:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7166:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7151:3:28"},"nodeType":"YulFunctionCall","src":"7151:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7132:18:28"},"nodeType":"YulFunctionCall","src":"7132:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7122:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6961:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6972:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6984:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6992:6:28","type":""}],"src":"6916:260:28"},{"body":{"nodeType":"YulBlock","src":"7236:325:28","statements":[{"nodeType":"YulAssignment","src":"7246:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7260:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7263:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7256:3:28"},"nodeType":"YulFunctionCall","src":"7256:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7246:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"7277:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7307:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"7313:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7303:3:28"},"nodeType":"YulFunctionCall","src":"7303:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7281:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7354:31:28","statements":[{"nodeType":"YulAssignment","src":"7356:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7370:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7378:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7366:3:28"},"nodeType":"YulFunctionCall","src":"7366:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7356:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7334:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7327:6:28"},"nodeType":"YulFunctionCall","src":"7327:26:28"},"nodeType":"YulIf","src":"7324:61:28"},{"body":{"nodeType":"YulBlock","src":"7444:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7465:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7472:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7477:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7468:3:28"},"nodeType":"YulFunctionCall","src":"7468:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7458:6:28"},"nodeType":"YulFunctionCall","src":"7458:31:28"},"nodeType":"YulExpressionStatement","src":"7458:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7509:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7512:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7502:6:28"},"nodeType":"YulFunctionCall","src":"7502:15:28"},"nodeType":"YulExpressionStatement","src":"7502:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7537:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7540:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7530:6:28"},"nodeType":"YulFunctionCall","src":"7530:15:28"},"nodeType":"YulExpressionStatement","src":"7530:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7400:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7423:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7431:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7420:2:28"},"nodeType":"YulFunctionCall","src":"7420:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7397:2:28"},"nodeType":"YulFunctionCall","src":"7397:38:28"},"nodeType":"YulIf","src":"7394:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7216:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7225:6:28","type":""}],"src":"7181:380:28"},{"body":{"nodeType":"YulBlock","src":"7723:218:28","statements":[{"nodeType":"YulAssignment","src":"7733:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7756:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:28"},"nodeType":"YulFunctionCall","src":"7741:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7733:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"7768:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7786:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7791:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7782:3:28"},"nodeType":"YulFunctionCall","src":"7782:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"7795:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7778:3:28"},"nodeType":"YulFunctionCall","src":"7778:19:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7772:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7813:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7828:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7836:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7824:3:28"},"nodeType":"YulFunctionCall","src":"7824:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7806:6:28"},"nodeType":"YulFunctionCall","src":"7806:34:28"},"nodeType":"YulExpressionStatement","src":"7806:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7860:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7871:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7856:3:28"},"nodeType":"YulFunctionCall","src":"7856:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"7876:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7849:6:28"},"nodeType":"YulFunctionCall","src":"7849:34:28"},"nodeType":"YulExpressionStatement","src":"7849:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7903:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7914:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7899:3:28"},"nodeType":"YulFunctionCall","src":"7899:18:28"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7923:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7931:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7919:3:28"},"nodeType":"YulFunctionCall","src":"7919:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7892:6:28"},"nodeType":"YulFunctionCall","src":"7892:43:28"},"nodeType":"YulExpressionStatement","src":"7892:43:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7676:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7687:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7695:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7703:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7714:4:28","type":""}],"src":"7566:375:28"},{"body":{"nodeType":"YulBlock","src":"8120:181:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8137:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8148:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8130:6:28"},"nodeType":"YulFunctionCall","src":"8130:21:28"},"nodeType":"YulExpressionStatement","src":"8130:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8171:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8182:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:28"},"nodeType":"YulFunctionCall","src":"8167:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8187:2:28","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8160:6:28"},"nodeType":"YulFunctionCall","src":"8160:30:28"},"nodeType":"YulExpressionStatement","src":"8160:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8210:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8221:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8206:3:28"},"nodeType":"YulFunctionCall","src":"8206:18:28"},{"hexValue":"43616c6c6572206973206e6f74206f776e6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"8226:33:28","type":"","value":"Caller is not owner or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8199:6:28"},"nodeType":"YulFunctionCall","src":"8199:61:28"},"nodeType":"YulExpressionStatement","src":"8199:61:28"},{"nodeType":"YulAssignment","src":"8269:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8281:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8292:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8277:3:28"},"nodeType":"YulFunctionCall","src":"8277:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8269:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_603f4022c7c9bca46ef8304cd6a88dd2e6d49898b43e3a9ed7aea6d1839c2f9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8097:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8111:4:28","type":""}],"src":"7946:355:28"},{"body":{"nodeType":"YulBlock","src":"8480:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8497:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8508:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8490:6:28"},"nodeType":"YulFunctionCall","src":"8490:21:28"},"nodeType":"YulExpressionStatement","src":"8490:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8531:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8542:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8527:3:28"},"nodeType":"YulFunctionCall","src":"8527:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8547:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8520:6:28"},"nodeType":"YulFunctionCall","src":"8520:30:28"},"nodeType":"YulExpressionStatement","src":"8520:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8570:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8581:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8566:3:28"},"nodeType":"YulFunctionCall","src":"8566:18:28"},{"hexValue":"496e76616c696420757365722061646472657373","kind":"string","nodeType":"YulLiteral","src":"8586:22:28","type":"","value":"Invalid user address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8559:6:28"},"nodeType":"YulFunctionCall","src":"8559:50:28"},"nodeType":"YulExpressionStatement","src":"8559:50:28"},{"nodeType":"YulAssignment","src":"8618:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8630:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8641:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:28"},"nodeType":"YulFunctionCall","src":"8626:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8618:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8457:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8471:4:28","type":""}],"src":"8306:344:28"},{"body":{"nodeType":"YulBlock","src":"8829:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8846:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8857:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8839:6:28"},"nodeType":"YulFunctionCall","src":"8839:21:28"},"nodeType":"YulExpressionStatement","src":"8839:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8880:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8891:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:28"},"nodeType":"YulFunctionCall","src":"8876:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8896:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8869:6:28"},"nodeType":"YulFunctionCall","src":"8869:30:28"},"nodeType":"YulExpressionStatement","src":"8869:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8919:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8930:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8915:3:28"},"nodeType":"YulFunctionCall","src":"8915:18:28"},{"hexValue":"42617365205552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"8935:26:28","type":"","value":"Base URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8908:6:28"},"nodeType":"YulFunctionCall","src":"8908:54:28"},"nodeType":"YulExpressionStatement","src":"8908:54:28"},{"nodeType":"YulAssignment","src":"8971:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8983:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8994:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8979:3:28"},"nodeType":"YulFunctionCall","src":"8979:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8971:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_09137e482b6b203228712b3a3778c204812f195c570565d3a641f9cfbfcae705__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8806:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8820:4:28","type":""}],"src":"8655:348:28"},{"body":{"nodeType":"YulBlock","src":"9064:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9081:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9084:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9074:6:28"},"nodeType":"YulFunctionCall","src":"9074:14:28"},"nodeType":"YulExpressionStatement","src":"9074:14:28"},{"nodeType":"YulAssignment","src":"9097:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9115:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9118:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9105:9:28"},"nodeType":"YulFunctionCall","src":"9105:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9097:4:28"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9047:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9055:4:28","type":""}],"src":"9008:121:28"},{"body":{"nodeType":"YulBlock","src":"9215:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"9248:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9262:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9272:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9266:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9293:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"9297:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9286:6:28"},"nodeType":"YulFunctionCall","src":"9286:17:28"},"nodeType":"YulExpressionStatement","src":"9286:17:28"},{"nodeType":"YulVariableDeclaration","src":"9316:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9338:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"9342:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9328:9:28"},"nodeType":"YulFunctionCall","src":"9328:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"9320:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9360:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9383:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9393:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9400:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"9412:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:28"},"nodeType":"YulFunctionCall","src":"9396:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9389:3:28"},"nodeType":"YulFunctionCall","src":"9389:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9379:3:28"},"nodeType":"YulFunctionCall","src":"9379:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"9364:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9454:23:28","statements":[{"nodeType":"YulAssignment","src":"9456:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"9471:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9456:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9436:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"9448:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9433:2:28"},"nodeType":"YulFunctionCall","src":"9433:20:28"},"nodeType":"YulIf","src":"9430:47:28"},{"nodeType":"YulVariableDeclaration","src":"9490:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9504:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9514:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9521:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"9526:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9517:3:28"},"nodeType":"YulFunctionCall","src":"9517:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9510:3:28"},"nodeType":"YulFunctionCall","src":"9510:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:28"},"nodeType":"YulFunctionCall","src":"9500:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9494:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9544:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"9557:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"9548:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9642:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9651:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9658:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9644:6:28"},"nodeType":"YulFunctionCall","src":"9644:17:28"},"nodeType":"YulExpressionStatement","src":"9644:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9592:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"9599:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9589:2:28"},"nodeType":"YulFunctionCall","src":"9589:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9603:26:28","statements":[{"nodeType":"YulAssignment","src":"9605:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9618:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9625:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9614:3:28"},"nodeType":"YulFunctionCall","src":"9614:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9605:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"9585:3:28","statements":[]},"src":"9581:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9231:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"9236:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9228:2:28"},"nodeType":"YulFunctionCall","src":"9228:11:28"},"nodeType":"YulIf","src":"9225:448:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"9187:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"9194:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"9199:10:28","type":""}],"src":"9134:545:28"},{"body":{"nodeType":"YulBlock","src":"9769:81:28","statements":[{"nodeType":"YulAssignment","src":"9779:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9794:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9812:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9815:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9808:3:28"},"nodeType":"YulFunctionCall","src":"9808:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9825:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9821:3:28"},"nodeType":"YulFunctionCall","src":"9821:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9804:3:28"},"nodeType":"YulFunctionCall","src":"9804:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9800:3:28"},"nodeType":"YulFunctionCall","src":"9800:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9790:3:28"},"nodeType":"YulFunctionCall","src":"9790:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9836:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9839:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9832:3:28"},"nodeType":"YulFunctionCall","src":"9832:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9787:2:28"},"nodeType":"YulFunctionCall","src":"9787:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9779:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9746:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"9752:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9760:4:28","type":""}],"src":"9684:166:28"},{"body":{"nodeType":"YulBlock","src":"9951:1256:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9961:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9981:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9975:5:28"},"nodeType":"YulFunctionCall","src":"9975:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9965:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10028:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10030:16:28"},"nodeType":"YulFunctionCall","src":"10030:18:28"},"nodeType":"YulExpressionStatement","src":"10030:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10000:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10008:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9997:2:28"},"nodeType":"YulFunctionCall","src":"9997:30:28"},"nodeType":"YulIf","src":"9994:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10103:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10141:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10135:5:28"},"nodeType":"YulFunctionCall","src":"10135:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10109:25:28"},"nodeType":"YulFunctionCall","src":"10109:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"10149:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"10059:43:28"},"nodeType":"YulFunctionCall","src":"10059:97:28"},"nodeType":"YulExpressionStatement","src":"10059:97:28"},{"nodeType":"YulVariableDeclaration","src":"10165:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10182:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10169:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10192:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10211:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"10196:11:28","type":""}]},{"nodeType":"YulAssignment","src":"10224:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10237:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10224:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10294:656:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10308:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10327:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10339:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10335:3:28"},"nodeType":"YulFunctionCall","src":"10335:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10323:3:28"},"nodeType":"YulFunctionCall","src":"10323:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10312:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10356:49:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10400:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"10370:29:28"},"nodeType":"YulFunctionCall","src":"10370:35:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"10360:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10418:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10427:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10422:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10505:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10530:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10548:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10553:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10544:3:28"},"nodeType":"YulFunctionCall","src":"10544:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10538:5:28"},"nodeType":"YulFunctionCall","src":"10538:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10523:6:28"},"nodeType":"YulFunctionCall","src":"10523:42:28"},"nodeType":"YulExpressionStatement","src":"10523:42:28"},{"nodeType":"YulAssignment","src":"10582:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10596:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10604:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:28"},"nodeType":"YulFunctionCall","src":"10592:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10582:6:28"}]},{"nodeType":"YulAssignment","src":"10623:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10640:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10651:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10636:3:28"},"nodeType":"YulFunctionCall","src":"10636:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10623:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10452:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10455:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10449:2:28"},"nodeType":"YulFunctionCall","src":"10449:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10464:28:28","statements":[{"nodeType":"YulAssignment","src":"10466:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10475:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10478:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:28"},"nodeType":"YulFunctionCall","src":"10471:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10466:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"10445:3:28","statements":[]},"src":"10441:236:28"},{"body":{"nodeType":"YulBlock","src":"10725:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10743:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10770:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10775:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10766:3:28"},"nodeType":"YulFunctionCall","src":"10766:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10760:5:28"},"nodeType":"YulFunctionCall","src":"10760:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10747:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10810:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10822:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10849:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10852:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10845:3:28"},"nodeType":"YulFunctionCall","src":"10845:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10861:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10841:3:28"},"nodeType":"YulFunctionCall","src":"10841:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10871:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10867:3:28"},"nodeType":"YulFunctionCall","src":"10867:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10837:3:28"},"nodeType":"YulFunctionCall","src":"10837:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10833:3:28"},"nodeType":"YulFunctionCall","src":"10833:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:28"},"nodeType":"YulFunctionCall","src":"10818:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10803:6:28"},"nodeType":"YulFunctionCall","src":"10803:74:28"},"nodeType":"YulExpressionStatement","src":"10803:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10696:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"10705:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10693:2:28"},"nodeType":"YulFunctionCall","src":"10693:19:28"},"nodeType":"YulIf","src":"10690:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10911:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10925:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10928:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10921:3:28"},"nodeType":"YulFunctionCall","src":"10921:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10937:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10917:3:28"},"nodeType":"YulFunctionCall","src":"10917:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10904:6:28"},"nodeType":"YulFunctionCall","src":"10904:36:28"},"nodeType":"YulExpressionStatement","src":"10904:36:28"}]},"nodeType":"YulCase","src":"10287:663:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10292:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10967:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10981:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10994:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10985:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"11030:67:28","statements":[{"nodeType":"YulAssignment","src":"11048:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11067:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11072:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11063:3:28"},"nodeType":"YulFunctionCall","src":"11063:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11057:5:28"},"nodeType":"YulFunctionCall","src":"11057:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11048:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"11011:6:28"},"nodeType":"YulIf","src":"11008:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11117:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11176:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"11183:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"11123:52:28"},"nodeType":"YulFunctionCall","src":"11123:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11110:6:28"},"nodeType":"YulFunctionCall","src":"11110:81:28"},"nodeType":"YulExpressionStatement","src":"11110:81:28"}]},"nodeType":"YulCase","src":"10959:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10267:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10275:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10264:2:28"},"nodeType":"YulFunctionCall","src":"10264:14:28"},"nodeType":"YulSwitch","src":"10257:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9936:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"9942:3:28","type":""}],"src":"9855:1352:28"},{"body":{"nodeType":"YulBlock","src":"11386:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11403:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11414:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11396:6:28"},"nodeType":"YulFunctionCall","src":"11396:21:28"},"nodeType":"YulExpressionStatement","src":"11396:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11437:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11448:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11433:3:28"},"nodeType":"YulFunctionCall","src":"11433:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11453:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11426:6:28"},"nodeType":"YulFunctionCall","src":"11426:30:28"},"nodeType":"YulExpressionStatement","src":"11426:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11476:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11487:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11472:3:28"},"nodeType":"YulFunctionCall","src":"11472:18:28"},{"hexValue":"496e76616c69642076657269666965722061646472657373","kind":"string","nodeType":"YulLiteral","src":"11492:26:28","type":"","value":"Invalid verifier address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11465:6:28"},"nodeType":"YulFunctionCall","src":"11465:54:28"},"nodeType":"YulExpressionStatement","src":"11465:54:28"},{"nodeType":"YulAssignment","src":"11528:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11540:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11551:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11536:3:28"},"nodeType":"YulFunctionCall","src":"11536:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11528:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11363:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11377:4:28","type":""}],"src":"11212:348:28"},{"body":{"nodeType":"YulBlock","src":"11739:168:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11756:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11767:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11749:6:28"},"nodeType":"YulFunctionCall","src":"11749:21:28"},"nodeType":"YulExpressionStatement","src":"11749:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11790:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11801:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11786:3:28"},"nodeType":"YulFunctionCall","src":"11786:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11806:2:28","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11779:6:28"},"nodeType":"YulFunctionCall","src":"11779:30:28"},"nodeType":"YulExpressionStatement","src":"11779:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11829:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11840:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11825:3:28"},"nodeType":"YulFunctionCall","src":"11825:18:28"},{"hexValue":"4d617820737570706c792072656163686564","kind":"string","nodeType":"YulLiteral","src":"11845:20:28","type":"","value":"Max supply reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11818:6:28"},"nodeType":"YulFunctionCall","src":"11818:48:28"},"nodeType":"YulExpressionStatement","src":"11818:48:28"},{"nodeType":"YulAssignment","src":"11875:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11887:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11898:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11883:3:28"},"nodeType":"YulFunctionCall","src":"11883:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11875:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11716:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11730:4:28","type":""}],"src":"11565:342:28"},{"body":{"nodeType":"YulBlock","src":"12086:167:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12103:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12114:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12096:6:28"},"nodeType":"YulFunctionCall","src":"12096:21:28"},"nodeType":"YulExpressionStatement","src":"12096:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12137:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12148:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12133:3:28"},"nodeType":"YulFunctionCall","src":"12133:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12153:2:28","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12126:6:28"},"nodeType":"YulFunctionCall","src":"12126:30:28"},"nodeType":"YulExpressionStatement","src":"12126:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12176:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12187:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:28"},"nodeType":"YulFunctionCall","src":"12172:18:28"},{"hexValue":"5369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"12192:19:28","type":"","value":"Signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12165:6:28"},"nodeType":"YulFunctionCall","src":"12165:47:28"},"nodeType":"YulExpressionStatement","src":"12165:47:28"},{"nodeType":"YulAssignment","src":"12221:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12233:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12244:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12229:3:28"},"nodeType":"YulFunctionCall","src":"12229:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12221:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12063:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12077:4:28","type":""}],"src":"11912:341:28"},{"body":{"nodeType":"YulBlock","src":"12432:175:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12460:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12442:6:28"},"nodeType":"YulFunctionCall","src":"12442:21:28"},"nodeType":"YulExpressionStatement","src":"12442:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12483:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12494:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12479:3:28"},"nodeType":"YulFunctionCall","src":"12479:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12499:2:28","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12472:6:28"},"nodeType":"YulFunctionCall","src":"12472:30:28"},"nodeType":"YulExpressionStatement","src":"12472:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12533:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:28"},"nodeType":"YulFunctionCall","src":"12518:18:28"},{"hexValue":"496e76616c696420726563697069656e742061646472657373","kind":"string","nodeType":"YulLiteral","src":"12538:27:28","type":"","value":"Invalid recipient address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12511:6:28"},"nodeType":"YulFunctionCall","src":"12511:55:28"},"nodeType":"YulExpressionStatement","src":"12511:55:28"},{"nodeType":"YulAssignment","src":"12575:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12587:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12598:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12583:3:28"},"nodeType":"YulFunctionCall","src":"12583:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12575:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12409:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12423:4:28","type":""}],"src":"12258:349:28"},{"body":{"nodeType":"YulBlock","src":"12786:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12803:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12814:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12796:6:28"},"nodeType":"YulFunctionCall","src":"12796:21:28"},"nodeType":"YulExpressionStatement","src":"12796:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12837:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12848:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12833:3:28"},"nodeType":"YulFunctionCall","src":"12833:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12853:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12826:6:28"},"nodeType":"YulFunctionCall","src":"12826:30:28"},"nodeType":"YulExpressionStatement","src":"12826:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12876:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12887:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12872:3:28"},"nodeType":"YulFunctionCall","src":"12872:18:28"},{"hexValue":"5552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"12892:21:28","type":"","value":"URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12865:6:28"},"nodeType":"YulFunctionCall","src":"12865:49:28"},"nodeType":"YulExpressionStatement","src":"12865:49:28"},{"nodeType":"YulAssignment","src":"12923:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12935:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12946:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12931:3:28"},"nodeType":"YulFunctionCall","src":"12931:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12923:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12763:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12777:4:28","type":""}],"src":"12612:343:28"},{"body":{"nodeType":"YulBlock","src":"13007:185:28","statements":[{"body":{"nodeType":"YulBlock","src":"13046:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13067:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13074:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13079:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13070:3:28"},"nodeType":"YulFunctionCall","src":"13070:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13060:6:28"},"nodeType":"YulFunctionCall","src":"13060:31:28"},"nodeType":"YulExpressionStatement","src":"13060:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13111:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13114:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13104:6:28"},"nodeType":"YulFunctionCall","src":"13104:15:28"},"nodeType":"YulExpressionStatement","src":"13104:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13139:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13142:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13132:6:28"},"nodeType":"YulFunctionCall","src":"13132:15:28"},"nodeType":"YulExpressionStatement","src":"13132:15:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13023:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13030:3:28"},"nodeType":"YulFunctionCall","src":"13030:6:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13020:2:28"},"nodeType":"YulFunctionCall","src":"13020:17:28"},"nodeType":"YulIf","src":"13017:140:28"},{"nodeType":"YulAssignment","src":"13166:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13177:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"13184:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13173:3:28"},"nodeType":"YulFunctionCall","src":"13173:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13166:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12989:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12999:3:28","type":""}],"src":"12960:232:28"},{"body":{"nodeType":"YulBlock","src":"13410:276:28","statements":[{"nodeType":"YulAssignment","src":"13420:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13432:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13443:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13428:3:28"},"nodeType":"YulFunctionCall","src":"13428:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13420:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"13474:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13456:6:28"},"nodeType":"YulFunctionCall","src":"13456:25:28"},"nodeType":"YulExpressionStatement","src":"13456:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13501:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13512:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13497:3:28"},"nodeType":"YulFunctionCall","src":"13497:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13521:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13537:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13542:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13533:3:28"},"nodeType":"YulFunctionCall","src":"13533:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"13546:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13529:3:28"},"nodeType":"YulFunctionCall","src":"13529:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13517:3:28"},"nodeType":"YulFunctionCall","src":"13517:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13490:6:28"},"nodeType":"YulFunctionCall","src":"13490:60:28"},"nodeType":"YulExpressionStatement","src":"13490:60:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13570:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13581:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13566:3:28"},"nodeType":"YulFunctionCall","src":"13566:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"13586:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13559:6:28"},"nodeType":"YulFunctionCall","src":"13559:34:28"},"nodeType":"YulExpressionStatement","src":"13559:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13613:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13624:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13609:3:28"},"nodeType":"YulFunctionCall","src":"13609:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"13629:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13602:6:28"},"nodeType":"YulFunctionCall","src":"13602:34:28"},"nodeType":"YulExpressionStatement","src":"13602:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13656:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13667:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13652:3:28"},"nodeType":"YulFunctionCall","src":"13652:19:28"},{"name":"value4","nodeType":"YulIdentifier","src":"13673:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13645:6:28"},"nodeType":"YulFunctionCall","src":"13645:35:28"},"nodeType":"YulExpressionStatement","src":"13645:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13347:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13358:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13366:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13374:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13382:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13390:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13401:4:28","type":""}],"src":"13197:489:28"},{"body":{"nodeType":"YulBlock","src":"13865:167:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13882:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13893:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13875:6:28"},"nodeType":"YulFunctionCall","src":"13875:21:28"},"nodeType":"YulExpressionStatement","src":"13875:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13916:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13927:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13912:3:28"},"nodeType":"YulFunctionCall","src":"13912:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13932:2:28","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13905:6:28"},"nodeType":"YulFunctionCall","src":"13905:30:28"},"nodeType":"YulExpressionStatement","src":"13905:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13955:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13966:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13951:3:28"},"nodeType":"YulFunctionCall","src":"13951:18:28"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"13971:19:28","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13944:6:28"},"nodeType":"YulFunctionCall","src":"13944:47:28"},"nodeType":"YulExpressionStatement","src":"13944:47:28"},{"nodeType":"YulAssignment","src":"14000:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14012:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14023:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14008:3:28"},"nodeType":"YulFunctionCall","src":"14008:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14000:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13842:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13856:4:28","type":""}],"src":"13691:341:28"},{"body":{"nodeType":"YulBlock","src":"14211:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14228:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14239:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14221:6:28"},"nodeType":"YulFunctionCall","src":"14221:21:28"},"nodeType":"YulExpressionStatement","src":"14221:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14262:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14273:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14258:3:28"},"nodeType":"YulFunctionCall","src":"14258:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14278:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14251:6:28"},"nodeType":"YulFunctionCall","src":"14251:30:28"},"nodeType":"YulExpressionStatement","src":"14251:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14301:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14312:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14297:3:28"},"nodeType":"YulFunctionCall","src":"14297:18:28"},{"hexValue":"546f6b656e20494420776173206275726e6564","kind":"string","nodeType":"YulLiteral","src":"14317:21:28","type":"","value":"Token ID was burned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14290:6:28"},"nodeType":"YulFunctionCall","src":"14290:49:28"},"nodeType":"YulExpressionStatement","src":"14290:49:28"},{"nodeType":"YulAssignment","src":"14348:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14360:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14371:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14356:3:28"},"nodeType":"YulFunctionCall","src":"14356:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14348:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_988e2d3f8e6b36776351fc027ad241d4ba88f694364705255b0aa85f453113c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14188:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14202:4:28","type":""}],"src":"14037:343:28"},{"body":{"nodeType":"YulBlock","src":"14588:286:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14598:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14616:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14621:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14612:3:28"},"nodeType":"YulFunctionCall","src":"14612:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"14625:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14608:3:28"},"nodeType":"YulFunctionCall","src":"14608:19:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14602:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14643:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14658:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14666:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14654:3:28"},"nodeType":"YulFunctionCall","src":"14654:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14636:6:28"},"nodeType":"YulFunctionCall","src":"14636:34:28"},"nodeType":"YulExpressionStatement","src":"14636:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14690:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14701:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14686:3:28"},"nodeType":"YulFunctionCall","src":"14686:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14710:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14718:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14706:3:28"},"nodeType":"YulFunctionCall","src":"14706:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14679:6:28"},"nodeType":"YulFunctionCall","src":"14679:43:28"},"nodeType":"YulExpressionStatement","src":"14679:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14742:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14753:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14738:3:28"},"nodeType":"YulFunctionCall","src":"14738:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"14758:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14731:6:28"},"nodeType":"YulFunctionCall","src":"14731:34:28"},"nodeType":"YulExpressionStatement","src":"14731:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14785:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14796:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14781:3:28"},"nodeType":"YulFunctionCall","src":"14781:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14801:3:28","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14774:6:28"},"nodeType":"YulFunctionCall","src":"14774:31:28"},"nodeType":"YulExpressionStatement","src":"14774:31:28"},{"nodeType":"YulAssignment","src":"14814:54:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14840:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14852:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14863:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14848:3:28"},"nodeType":"YulFunctionCall","src":"14848:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14822:17:28"},"nodeType":"YulFunctionCall","src":"14822:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14814:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14533:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14544:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14552:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14560:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14568:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14579:4:28","type":""}],"src":"14385:489:28"},{"body":{"nodeType":"YulBlock","src":"14959:169:28","statements":[{"body":{"nodeType":"YulBlock","src":"15005:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15014:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15017:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15007:6:28"},"nodeType":"YulFunctionCall","src":"15007:12:28"},"nodeType":"YulExpressionStatement","src":"15007:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14980:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"14989:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14976:3:28"},"nodeType":"YulFunctionCall","src":"14976:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"15001:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14972:3:28"},"nodeType":"YulFunctionCall","src":"14972:32:28"},"nodeType":"YulIf","src":"14969:52:28"},{"nodeType":"YulVariableDeclaration","src":"15030:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15049:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15043:5:28"},"nodeType":"YulFunctionCall","src":"15043:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15034:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15092:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"15068:23:28"},"nodeType":"YulFunctionCall","src":"15068:30:28"},"nodeType":"YulExpressionStatement","src":"15068:30:28"},{"nodeType":"YulAssignment","src":"15107:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"15117:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15107:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14925:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14936:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14948:6:28","type":""}],"src":"14879:249:28"},{"body":{"nodeType":"YulBlock","src":"15320:309:28","statements":[{"nodeType":"YulVariableDeclaration","src":"15330:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15350:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15344:5:28"},"nodeType":"YulFunctionCall","src":"15344:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15334:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15405:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"15413:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15401:3:28"},"nodeType":"YulFunctionCall","src":"15401:17:28"},{"name":"pos","nodeType":"YulIdentifier","src":"15420:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15425:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15366:34:28"},"nodeType":"YulFunctionCall","src":"15366:66:28"},"nodeType":"YulExpressionStatement","src":"15366:66:28"},{"nodeType":"YulVariableDeclaration","src":"15441:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15458:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15463:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15454:3:28"},"nodeType":"YulFunctionCall","src":"15454:16:28"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"15445:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15479:29:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15501:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15495:5:28"},"nodeType":"YulFunctionCall","src":"15495:13:28"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15483:8:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15556:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"15564:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15552:3:28"},"nodeType":"YulFunctionCall","src":"15552:17:28"},{"name":"end_1","nodeType":"YulIdentifier","src":"15571:5:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"15578:8:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15517:34:28"},"nodeType":"YulFunctionCall","src":"15517:70:28"},"nodeType":"YulExpressionStatement","src":"15517:70:28"},{"nodeType":"YulAssignment","src":"15596:27:28","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"15607:5:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"15614:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15603:3:28"},"nodeType":"YulFunctionCall","src":"15603:20:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15596:3:28"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15288:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15293:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15301:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15312:3:28","type":""}],"src":"15133:496:28"},{"body":{"nodeType":"YulBlock","src":"15763:145:28","statements":[{"nodeType":"YulAssignment","src":"15773:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15785:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15796:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15781:3:28"},"nodeType":"YulFunctionCall","src":"15781:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15773:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15815:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15830:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15846:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15851:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15842:3:28"},"nodeType":"YulFunctionCall","src":"15842:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"15855:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15838:3:28"},"nodeType":"YulFunctionCall","src":"15838:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15826:3:28"},"nodeType":"YulFunctionCall","src":"15826:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15808:6:28"},"nodeType":"YulFunctionCall","src":"15808:51:28"},"nodeType":"YulExpressionStatement","src":"15808:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15879:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15890:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15875:3:28"},"nodeType":"YulFunctionCall","src":"15875:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"15895:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15868:6:28"},"nodeType":"YulFunctionCall","src":"15868:34:28"},"nodeType":"YulExpressionStatement","src":"15868:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15724:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15735:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15743:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15754:4:28","type":""}],"src":"15634:274:28"},{"body":{"nodeType":"YulBlock","src":"15945:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15962:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15969:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15974:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15965:3:28"},"nodeType":"YulFunctionCall","src":"15965:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15955:6:28"},"nodeType":"YulFunctionCall","src":"15955:31:28"},"nodeType":"YulExpressionStatement","src":"15955:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16002:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16005:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15995:6:28"},"nodeType":"YulFunctionCall","src":"15995:15:28"},"nodeType":"YulExpressionStatement","src":"15995:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16026:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16029:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16019:6:28"},"nodeType":"YulFunctionCall","src":"16019:15:28"},"nodeType":"YulExpressionStatement","src":"16019:15:28"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"15913:127:28"},{"body":{"nodeType":"YulBlock","src":"16146:76:28","statements":[{"nodeType":"YulAssignment","src":"16156:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16168:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16179:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16164:3:28"},"nodeType":"YulFunctionCall","src":"16164:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16156:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"16209:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16191:6:28"},"nodeType":"YulFunctionCall","src":"16191:25:28"},"nodeType":"YulExpressionStatement","src":"16191:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16115:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16126:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16137:4:28","type":""}],"src":"16045:177:28"},{"body":{"nodeType":"YulBlock","src":"16259:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16276:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16283:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16288:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16279:3:28"},"nodeType":"YulFunctionCall","src":"16279:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16269:6:28"},"nodeType":"YulFunctionCall","src":"16269:31:28"},"nodeType":"YulExpressionStatement","src":"16269:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16316:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16319:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16309:6:28"},"nodeType":"YulFunctionCall","src":"16309:15:28"},"nodeType":"YulExpressionStatement","src":"16309:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16340:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16343:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16333:6:28"},"nodeType":"YulFunctionCall","src":"16333:15:28"},"nodeType":"YulExpressionStatement","src":"16333:15:28"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"16227:127:28"},{"body":{"nodeType":"YulBlock","src":"16572:276:28","statements":[{"nodeType":"YulAssignment","src":"16582:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16605:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16590:3:28"},"nodeType":"YulFunctionCall","src":"16590:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16582:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16625:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"16636:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16618:6:28"},"nodeType":"YulFunctionCall","src":"16618:25:28"},"nodeType":"YulExpressionStatement","src":"16618:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16663:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16659:3:28"},"nodeType":"YulFunctionCall","src":"16659:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"16679:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16652:6:28"},"nodeType":"YulFunctionCall","src":"16652:34:28"},"nodeType":"YulExpressionStatement","src":"16652:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16706:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16717:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16702:3:28"},"nodeType":"YulFunctionCall","src":"16702:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"16722:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16695:6:28"},"nodeType":"YulFunctionCall","src":"16695:34:28"},"nodeType":"YulExpressionStatement","src":"16695:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16749:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16760:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16745:3:28"},"nodeType":"YulFunctionCall","src":"16745:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"16765:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16738:6:28"},"nodeType":"YulFunctionCall","src":"16738:34:28"},"nodeType":"YulExpressionStatement","src":"16738:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16792:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16803:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16788:3:28"},"nodeType":"YulFunctionCall","src":"16788:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16813:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16829:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16834:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16825:3:28"},"nodeType":"YulFunctionCall","src":"16825:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"16838:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16821:3:28"},"nodeType":"YulFunctionCall","src":"16821:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16809:3:28"},"nodeType":"YulFunctionCall","src":"16809:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16781:6:28"},"nodeType":"YulFunctionCall","src":"16781:61:28"},"nodeType":"YulExpressionStatement","src":"16781:61:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16509:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16520:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16528:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16536:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16544:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16552:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16563:4:28","type":""}],"src":"16359:489:28"},{"body":{"nodeType":"YulBlock","src":"17034:217:28","statements":[{"nodeType":"YulAssignment","src":"17044:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17056:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17067:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17052:3:28"},"nodeType":"YulFunctionCall","src":"17052:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17044:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17087:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"17098:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17080:6:28"},"nodeType":"YulFunctionCall","src":"17080:25:28"},"nodeType":"YulExpressionStatement","src":"17080:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17125:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17136:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17121:3:28"},"nodeType":"YulFunctionCall","src":"17121:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17145:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17153:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17141:3:28"},"nodeType":"YulFunctionCall","src":"17141:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17114:6:28"},"nodeType":"YulFunctionCall","src":"17114:45:28"},"nodeType":"YulExpressionStatement","src":"17114:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17179:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17190:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17175:3:28"},"nodeType":"YulFunctionCall","src":"17175:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"17195:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17168:6:28"},"nodeType":"YulFunctionCall","src":"17168:34:28"},"nodeType":"YulExpressionStatement","src":"17168:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17222:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17233:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17218:3:28"},"nodeType":"YulFunctionCall","src":"17218:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"17238:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17211:6:28"},"nodeType":"YulFunctionCall","src":"17211:34:28"},"nodeType":"YulExpressionStatement","src":"17211:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16979:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16990:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16998:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17006:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17014:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17025:4:28","type":""}],"src":"16853:398:28"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_603f4022c7c9bca46ef8304cd6a88dd2e6d49898b43e3a9ed7aea6d1839c2f9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Caller is not owner or approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid user address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09137e482b6b203228712b3a3778c204812f195c570565d3a641f9cfbfcae705__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Base URI cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_af54df3ee99e70071616e3972779618a9123698d90a7cfaa88df1de961fd5b68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid verifier address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Max supply reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"URI cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_988e2d3f8e6b36776351fc027ad241d4ba88f694364705255b0aa85f453113c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Token ID was burned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2962":[{"length":32,"start":6055}],"2964":[{"length":32,"start":6013}],"2966":[{"length":32,"start":5971}],"2968":[{"length":32,"start":6136}],"2970":[{"length":32,"start":6176}],"2973":[{"length":32,"start":4272}],"2976":[{"length":32,"start":4322}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806397fc007c11610097578063c87b56dd11610071578063c87b56dd1461035c578063e5763b731461036f578063e985e9c514610382578063f2fde38b1461039557600080fd5b806397fc007c14610323578063a22cb46514610336578063b88d4fde1461034957600080fd5b8063715018a6146102b65780637ecebe00146102be5780638456cb59146102e757806384b0196e146102ef5780638da5cb5b1461030a57806395d89b411461031b57600080fd5b806342842e0e1161014b57806355f804b31161012557806355f804b3146102645780635c975abb146102775780636352211e1461028257806370a082311461029557600080fd5b806342842e0e1461022b57806342966c681461023e57806353a780641461025157600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806323b872dd146102105780633f4ba83a14610223575b600080fd5b6101a66101a1366004611d0e565b6103a8565b60405190151581526020015b60405180910390f35b6101c36103b9565b6040516101b29190611d7b565b6101e36101de366004611d8e565b61044b565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611dc3565b610474565b005b61020e61021e366004611ded565b610483565b61020e610513565b61020e610239366004611ded565b61055b565b61020e61024c366004611d8e565b61057b565b61020e61025f366004611e29565b6106a5565b61020e610272366004611ee7565b610755565b60095460ff166101a6565b6101e3610290366004611d8e565b6107f5565b6102a86102a3366004611e29565b610800565b6040519081526020016101b2565b61020e610848565b6102a86102cc366004611e29565b6001600160a01b03166000908152600f602052604090205490565b61020e61085c565b6102f761089e565b6040516101b29796959493929190611f1c565b6007546001600160a01b03166101e3565b6101c36108e4565b61020e610331366004611e29565b6108f3565b61020e610344366004611fb2565b6109a3565b61020e610357366004611fee565b6109ae565b6101c361036a366004611d8e565b6109c6565b61020e61037d366004612056565b6109db565b6101a66103903660046120c8565b610cf5565b61020e6103a3366004611e29565b610d23565b60006103b382610d5e565b92915050565b6060600080546103c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f4906120fb565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b600061045682610d83565b506000828152600460205260409020546001600160a01b03166103b3565b61047f828233610dbc565b5050565b6001600160a01b0382166104b257604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104bf838333610dc9565b9050836001600160a01b0316816001600160a01b03161461050d576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104a9565b50505050565b61051b610ec2565b610523610eef565b60405142815233907f107553d8191d85b405879cf752997865edd48d94e20bda4dd27223c94b31a7cc906020015b60405180910390a2565b610576838383604051806020016040528060008152506109ae565b505050565b610583610f41565b61058b610f6b565b6000610596826107f5565b9050336001600160a01b0382168114806105b557506105b58282610cf5565b806105d95750806001600160a01b03166105ce8461044b565b6001600160a01b0316145b6106255760405162461bcd60e51b815260206004820152601f60248201527f43616c6c6572206973206e6f74206f776e6572206f7220617070726f7665640060448201526064016104a9565b61063e8360405180602001604052806000815250610f8f565b6000838152600e60205260409020805460ff1916600117905561066083610fdf565b60405183906001600160a01b038316907f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa290600090a350506106a26001600855565b50565b6106ad610ec2565b6001600160a01b0381166106fa5760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b60448201526064016104a9565b6001600160a01b0381166000818152600f6020908152604091829020805460001990915591518281529192917f1800cd2301fbc20790ed94f3d55a28ef2306a9c31cd3c72b5b71b6e4cf5c6241910160405180910390a25050565b61075d610ec2565b60008151116107ae5760405162461bcd60e51b815260206004820152601860248201527f42617365205552492063616e6e6f7420626520656d707479000000000000000060448201526064016104a9565b600d6107ba828261217b565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6816040516107ea9190611d7b565b60405180910390a150565b60006103b382610d83565b60006001600160a01b03821661082c576040516322718ad960e21b8152600060048201526024016104a9565b506001600160a01b031660009081526003602052604090205490565b610850610ec2565b61085a600061101a565b565b610864610ec2565b61086c61106c565b60405142815233907f80170b5fcdd2bf1e0660ef4b8851f86685f64d41b1a19de1471947ece8725aac90602001610551565b6000606080600080600060606108b26110a9565b6108ba6110db565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600180546103c8906120fb565b6108fb610ec2565b6001600160a01b0381166109515760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642076657269666965722061646472657373000000000000000060448201526064016104a9565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f0243549a92b2412f7a3caf7a2e56d65b8821b91345363faa5f57195384065fcc90600090a35050565b61047f338383611108565b6109b9848484610483565b61050d33858585856111a7565b60606109d1826107f5565b506103b3826112d2565b6109e3610f41565b6109eb610f6b565b6001600c5410610a325760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016104a9565b81421115610a765760405162461bcd60e51b815260206004820152601160248201527014da59db985d1d5c9948195e1c1a5c9959607a1b60448201526064016104a9565b6001600160a01b038416610acc5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e7420616464726573730000000000000060448201526064016104a9565b6000835111610b135760405162461bcd60e51b81526020600482015260136024820152725552492063616e6e6f7420626520656d70747960681b60448201526064016104a9565b82516020808501919091206001600160a01b0386166000908152600f9092526040822080547fce3829100355b953ccf0678623667f04f1ef312616e89358bc4973f327d3b68b92889290919085610b698361223b565b909155506040805160208101959095526001600160a01b03909316928401929092526060830152608082015260a0810184905260c0016040516020818303038152906040528051906020012090506000610bc2826113d6565b90506000610bd08285611403565b6010549091506001600160a01b03808316911614610c245760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016104a9565b600c805460009182610c358361223b565b909155506000818152600e602052604090205490915060ff1615610c915760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881251081dd85cc8189d5c9b9959606a1b60448201526064016104a9565b610c9b888261142d565b610ca58188610f8f565b80886001600160a01b03167fdf92894dc4675a7333caa5903b69cf5d8e8ec0d3f361c88207b6688e525703bb89604051610cdf9190611d7b565b60405180910390a35050505061050d6001600855565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610d2b610ec2565b6001600160a01b038116610d5557604051631e4fbdf760e01b8152600060048201526024016104a9565b6106a28161101a565b60006001600160e01b03198216632483248360e11b14806103b357506103b382611447565b6000818152600260205260408120546001600160a01b0316806103b357604051637e27328960e01b8152600481018490526024016104a9565b6105768383836001611497565b6000828152600260205260408120546001600160a01b0390811690831615610df657610df681848661159d565b6001600160a01b03811615610e3457610e13600085600080611497565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610e63576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b0316331461085a5760405163118cdaa760e01b81523360048201526024016104a9565b610ef7611601565b6009805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260085403610f6457604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b60095460ff161561085a5760405163d93c066560e01b815260040160405180910390fd5b6000828152600660205260409020610fa7828261217b565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6000610fee6000836000610dc9565b90506001600160a01b03811661047f57604051637e27328960e01b8152600481018390526024016104a9565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611074610f6b565b6009805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f243390565b60606110d67f0000000000000000000000000000000000000000000000000000000000000000600a611624565b905090565b60606110d67f0000000000000000000000000000000000000000000000000000000000000000600b611624565b6001600160a01b03821661113a57604051630b61174360e31b81526001600160a01b03831660048201526024016104a9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156112cb57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906111e9908890889087908790600401612262565b6020604051808303816000875af1925050508015611224575060408051601f3d908101601f191682019092526112219181019061229f565b60015b61128d573d808015611252576040519150601f19603f3d011682016040523d82523d6000602084013e611257565b606091505b50805160000361128557604051633250574960e11b81526001600160a01b03851660048201526024016104a9565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146112c957604051633250574960e11b81526001600160a01b03851660048201526024016104a9565b505b5050505050565b60606112dd82610d83565b50600082815260066020526040812080546112f7906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054611323906120fb565b80156113705780601f1061134557610100808354040283529160200191611370565b820191906000526020600020905b81548152906001019060200180831161135357829003601f168201915b5050505050905060006113816116cf565b90508051600003611393575092915050565b8151156113c55780826040516020016113ad9291906122bc565b60405160208183030381529060405292505050919050565b6113ce846116de565b949350505050565b60006103b36113e3611746565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806114138686611871565b92509250925061142382826118be565b5090949350505050565b61047f828260405180602001604052806000815250611977565b60006001600160e01b031982166380ac58cd60e01b148061147857506001600160e01b03198216635b5e139f60e01b145b806103b357506301ffc9a760e01b6001600160e01b03198316146103b3565b80806114ab57506001600160a01b03821615155b1561156d5760006114bb84610d83565b90506001600160a01b038316158015906114e75750826001600160a01b0316816001600160a01b031614155b80156114fa57506114f88184610cf5565b155b156115235760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104a9565b811561156b5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6115a883838361198f565b610576576001600160a01b0383166115d657604051637e27328960e01b8152600481018290526024016104a9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104a9565b60095460ff1661085a57604051638dfc202b60e01b815260040160405180910390fd5b606060ff831461163e57611637836119f2565b90506103b3565b81805461164a906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054611676906120fb565b80156116c35780601f10611698576101008083540402835291602001916116c3565b820191906000526020600020905b8154815290600101906020018083116116a657829003601f168201915b505050505090506103b3565b6060600d80546103c8906120fb565b60606116e982610d83565b5060006116f46116cf565b90506000815111611714576040518060200160405280600081525061173f565b8061171e84611a31565b60405160200161172f9291906122bc565b6040516020818303038152906040525b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561179f57507f000000000000000000000000000000000000000000000000000000000000000046145b156117c957507f000000000000000000000000000000000000000000000000000000000000000090565b6110d6604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036118ab5760208401516040850151606086015160001a61189d88828585611ac4565b9550955095505050506118b7565b50508151600091506002905b9250925092565b60008260038111156118d2576118d26122eb565b036118db575050565b60018260038111156118ef576118ef6122eb565b0361190d5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611921576119216122eb565b036119425760405163fce698f760e01b8152600481018290526024016104a9565b6003826003811115611956576119566122eb565b0361047f576040516335e2f38360e21b8152600481018290526024016104a9565b6119818383611b93565b6105763360008585856111a7565b60006001600160a01b038316158015906113ce5750826001600160a01b0316846001600160a01b031614806119c957506119c98484610cf5565b806113ce5750506000908152600460205260409020546001600160a01b03908116911614919050565b606060006119ff83611bf8565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60606000611a3e83611c20565b600101905060008167ffffffffffffffff811115611a5e57611a5e611e44565b6040519080825280601f01601f191660200182016040528015611a88576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611a9257509392505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611aff5750600091506003905082611b89565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611b53573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b7f57506000925060019150829050611b89565b9250600091508190505b9450945094915050565b6001600160a01b038216611bbd57604051633250574960e11b8152600060048201526024016104a9565b6000611bcb83836000610dc9565b90506001600160a01b03811615610576576040516339e3563760e11b8152600060048201526024016104a9565b600060ff8216601f8111156103b357604051632cd44ac360e21b815260040160405180910390fd5b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611c5f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611c8b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ca957662386f26fc10000830492506010015b6305f5e1008310611cc1576305f5e100830492506008015b6127108310611cd557612710830492506004015b60648310611ce7576064830492506002015b600a83106103b35760010192915050565b6001600160e01b0319811681146106a257600080fd5b600060208284031215611d2057600080fd5b813561173f81611cf8565b60005b83811015611d46578181015183820152602001611d2e565b50506000910152565b60008151808452611d67816020860160208601611d2b565b601f01601f19169290920160200192915050565b60208152600061173f6020830184611d4f565b600060208284031215611da057600080fd5b5035919050565b80356001600160a01b0381168114611dbe57600080fd5b919050565b60008060408385031215611dd657600080fd5b611ddf83611da7565b946020939093013593505050565b600080600060608486031215611e0257600080fd5b611e0b84611da7565b9250611e1960208501611da7565b9150604084013590509250925092565b600060208284031215611e3b57600080fd5b61173f82611da7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e6b57600080fd5b813567ffffffffffffffff80821115611e8657611e86611e44565b604051601f8301601f19908116603f01168101908282118183101715611eae57611eae611e44565b81604052838152866020858801011115611ec757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611ef957600080fd5b813567ffffffffffffffff811115611f1057600080fd5b6113ce84828501611e5a565b60ff60f81b881681526000602060e081840152611f3c60e084018a611d4f565b8381036040850152611f4e818a611d4f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611fa057835183529284019291840191600101611f84565b50909c9b505050505050505050505050565b60008060408385031215611fc557600080fd5b611fce83611da7565b915060208301358015158114611fe357600080fd5b809150509250929050565b6000806000806080858703121561200457600080fd5b61200d85611da7565b935061201b60208601611da7565b925060408501359150606085013567ffffffffffffffff81111561203e57600080fd5b61204a87828801611e5a565b91505092959194509250565b6000806000806080858703121561206c57600080fd5b61207585611da7565b9350602085013567ffffffffffffffff8082111561209257600080fd5b61209e88838901611e5a565b94506040870135935060608701359150808211156120bb57600080fd5b5061204a87828801611e5a565b600080604083850312156120db57600080fd5b6120e483611da7565b91506120f260208401611da7565b90509250929050565b600181811c9082168061210f57607f821691505b60208210810361212f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561057657600081815260208120601f850160051c8101602086101561215c5750805b601f850160051c820191505b818110156112c957828155600101612168565b815167ffffffffffffffff81111561219557612195611e44565b6121a9816121a384546120fb565b84612135565b602080601f8311600181146121de57600084156121c65750858301515b600019600386901b1c1916600185901b1785556112c9565b600085815260208120601f198616915b8281101561220d578886015182559484019460019091019084016121ee565b508582101561222b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161225b57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061229590830184611d4f565b9695505050505050565b6000602082840312156122b157600080fd5b815161173f81611cf8565b600083516122ce818460208801611d2b565b8351908301906122e2818360208801611d2b565b01949350505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122050d1096f0d1e96ed85dae3ad80841371bad331020349cdbfec63e6b152aec05264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x97FC007C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xE5763B73 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97FC007C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x53A78064 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x223 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x513 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x20E PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x20E PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x848 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x85C JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB2 JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0xD5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x441 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x416 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x441 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x424 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x47F DUP3 DUP3 CALLER PUSH2 0xDBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4BF DUP4 DUP4 CALLER PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x523 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 PUSH32 0x107553D8191D85B405879CF752997865EDD48D94E20BDA4DD27223C94B31A7CC SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x576 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x58B PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP3 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B5 DUP3 DUP3 PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH2 0x5D9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CE DUP5 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206F7220617070726F76656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x63E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x660 DUP4 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH2 0x6A2 PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP3 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x1800CD2301FBC20790ED94F3D55A28EF2306A9C31CD3C72B5B71B6E4CF5C6241 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x75D PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617365205552492063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0xD PUSH2 0x7BA DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST POP PUSH32 0x5411E8EBF1636D9E83D5FC4900BF80CBAC82E8790DA2A4C94DB4895E889EEDF6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x850 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x0 PUSH2 0x101A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x864 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x86C PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 PUSH32 0x80170B5FCDD2BF1E0660EF4B8851F86685F64D41B1A19DE1471947ECE8725AAC SWAP1 PUSH1 0x20 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8B2 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x8BA PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0x8FB PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420766572696669657220616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x243549A92B2412F7A3CAF7A2E56D65B8821B91345363FAA5F57195384065FCC SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x47F CALLER DUP4 DUP4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x9B9 DUP5 DUP5 DUP5 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x50D CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9D1 DUP3 PUSH2 0x7F5 JUMP JUMPDEST POP PUSH2 0x3B3 DUP3 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x9EB PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD LT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP2 TIMESTAMP GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5552492063616E6E6F7420626520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xCE3829100355B953CCF0678623667F04F1EF312616E89358BC4973F327D3B68B SWAP3 DUP9 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 PUSH2 0xB69 DUP4 PUSH2 0x223B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xBC2 DUP3 PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD0 DUP3 DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0xC35 DUP4 PUSH2 0x223B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881251081DD85CC8189D5C9B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xC9B DUP9 DUP3 PUSH2 0x142D JUMP JUMPDEST PUSH2 0xCA5 DUP2 DUP9 PUSH2 0xF8F JUMP JUMPDEST DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDF92894DC4675A7333CAA5903B69CF5D8E8EC0D3F361C88207B6688E525703BB DUP10 PUSH1 0x40 MLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x50D PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD2B PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x6A2 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3B3 JUMPI POP PUSH2 0x3B3 DUP3 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x576 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xDF6 JUMPI PUSH2 0xDF6 DUP2 DUP5 DUP7 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xE34 JUMPI PUSH2 0xE13 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xE63 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0xEF7 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFA7 DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1074 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF24 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D6 PUSH32 0x0 PUSH1 0xA PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D6 PUSH32 0x0 PUSH1 0xB PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x11E9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1221 SWAP2 DUP2 ADD SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x128D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x12C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12DD DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x12F7 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1323 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1345 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1381 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1393 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x13C5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13AD SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CE DUP5 PUSH2 0x16DE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x13E3 PUSH2 0x1746 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1413 DUP7 DUP7 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1423 DUP3 DUP3 PUSH2 0x18BE JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x47F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1478 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3B3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14AB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 PUSH2 0x14BB DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14E7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14FA JUMPI POP PUSH2 0x14F8 DUP2 DUP5 PUSH2 0xCF5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x156B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15A8 DUP4 DUP4 DUP4 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x576 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x163E JUMPI PUSH2 0x1637 DUP4 PUSH2 0x19F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x164A SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1676 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1698 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16E9 DUP3 PUSH2 0xD83 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x16F4 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH2 0x171E DUP5 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x172F SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x179F JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x17C9 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x10D6 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x18AB JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x189D DUP9 DUP3 DUP6 DUP6 PUSH2 0x1AC4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x18B7 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x18DB JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EF PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1921 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1956 PUSH2 0x22EB JUMP JUMPDEST SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x1981 DUP4 DUP4 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x576 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13CE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x19C9 JUMPI POP PUSH2 0x19C9 DUP5 DUP5 PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH2 0x13CE JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x19FF DUP4 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A3E DUP4 PUSH2 0x1C20 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5E PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1A92 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1AFF JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B7F JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1B89 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP4 DUP4 PUSH1 0x0 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1C5F JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CA9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CC1 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CD5 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CE7 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3B3 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x173F DUP2 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D2E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D67 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x173F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDF DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0B DUP5 PUSH2 0x1DA7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E19 PUSH1 0x20 DUP6 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173F DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E86 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x1E44 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CE DUP5 DUP3 DUP6 ADD PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1F3C PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1D4F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1F4E DUP2 DUP11 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F84 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FCE DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200D DUP6 PUSH2 0x1DA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x201B PUSH1 0x20 DUP7 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2075 DUP6 PUSH2 0x1DA7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x209E DUP9 DUP4 DUP10 ADD PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E4 DUP4 PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 PUSH1 0x20 DUP5 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x210F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x215C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2168 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2195 PUSH2 0x1E44 JUMP JUMPDEST PUSH2 0x21A9 DUP2 PUSH2 0x21A3 DUP5 SLOAD PUSH2 0x20FB JUMP JUMPDEST DUP5 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21DE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x21C6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x220D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x21EE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x222B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x225B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2295 SWAP1 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x173F DUP2 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x22CE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1D2B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x22E2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1D2B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xD1 MULMOD PUSH16 0xD1E96ED85DAE3AD80841371BAD33102 SUB 0x49 0xCD 0xBF 0xEC PUSH4 0xE6B152AE 0xC0 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"500:5262:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4057:204;;;;;;:::i;:::-;;:::i;:::-;;;565:14:28;;558:22;540:41;;528:2;513:18;4057:204:27;;;;;;;;2364:89:6;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:28;;;1679:51;;1667:2;1652:18;3496:154:6;1533:203:28;3322:113:6;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;:::i;:::-;;:::i;3510:130:27:-;;;:::i;4786:132:6:-;;;;;;:::i;:::-;;:::i;4269:703:27:-;;;;;;:::i;:::-;;:::i;5438:321::-;;;;;;:::i;:::-;;:::i;3142:228::-;;;;;;:::i;:::-;;:::i;1850:84:14:-;1920:7;;;;1850:84;;2184:118:6;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;:::-;;;4031:25:28;;;4019:2;4004:18;1919:208:6;3885:177:28;2293:101:0;;;:::i;4980::27:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5059:14:27;5032:7;5059:14;;;:7;:14;;;;;;;4980:101;3378:124;;;:::i;5144:557:20:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2517:93:6;;;:::i;5089:278:27:-;;;;;;:::i;:::-;;:::i;3717:144:6:-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;3829:220:27:-;;;;;;:::i;:::-;;:::i;2009:1125::-;;;;;;:::i;:::-;;:::i;3927:153:6:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;4057:204:27:-;4188:4;4217:36;4241:11;4217:23;:36::i;:::-;4210:43;4057:204;-1:-1:-1;;4057:204:27:o;2364:89:6:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:6;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:6;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:12;3393:8:6;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:6;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:6;;4305:1;4275:33;;;1679:51:28;1652:18;;4275:33:6;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:12;4561:7:6;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:6;:13;-1:-1:-1;;;;;4609:21:6;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:6;;-1:-1:-1;;;;;7824:15:28;;;4653:50:6;;;7806:34:28;7856:18;;;7849:34;;;7919:15;;7899:18;;;7892:43;7741:18;;4653:50:6;7566:375:28;4605:109:6;4222:498;4142:578;;;:::o;3510:130:27:-;1531:13:0;:11;:13::i;:::-;3559:10:27::1;:8;:10::i;:::-;3585:47;::::0;3616:15:::1;4031:25:28::0;;735:10:12;;3585:47:27::1;::::0;4019:2:28;4004:18;3585:47:27::1;;;;;;;;3510:130::o:0;4786:132:6:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;4269:703:27:-;2500:21:15;:19;:21::i;:::-;1474:19:14::1;:17;:19::i;:::-;4383:13:27::2;4399:16;4407:7;4399;:16::i;:::-;4383:32:::0;-1:-1:-1;735:10:12;-1:-1:-1;;;;;4499:16:27;::::2;::::0;::::2;::::0;:66:::2;;;4533:32;4550:5;4557:7;4533:16;:32::i;:::-;4499:114;;;;4606:7;-1:-1:-1::0;;;;;4582:31:27::2;:20;4594:7;4582:11;:20::i;:::-;-1:-1:-1::0;;;;;4582:31:27::2;;4499:114;4477:195;;;::::0;-1:-1:-1;;;4477:195:27;;8148:2:28;4477:195:27::2;::::0;::::2;8130:21:28::0;8187:2;8167:18;;;8160:30;8226:33;8206:18;;;8199:61;8277:18;;4477:195:27::2;7946:355:28::0;4477:195:27::2;4737:25;4750:7;4737:25;;;;;;;;;;;::::0;:12:::2;:25::i;:::-;4816:24;::::0;;;:15:::2;:24;::::0;;;;:31;;-1:-1:-1;;4816:31:27::2;4843:4;4816:31;::::0;;4895:14:::2;4832:7:::0;4895:5:::2;:14::i;:::-;4935:29;::::0;4956:7;;-1:-1:-1;;;;;4935:29:27;::::2;::::0;::::2;::::0;;;::::2;4372:600;;2542:20:15::0;1857:1;3068:7;:21;2888:208;2542:20;4269:703:27;:::o;5438:321::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5515:18:27;::::1;5507:51;;;::::0;-1:-1:-1;;;5507:51:27;;8508:2:28;5507:51:27::1;::::0;::::1;8490:21:28::0;8547:2;8527:18;;;8520:30;-1:-1:-1;;;8566:18:28;;;8559:50;8626:18;;5507:51:27::1;8306:344:28::0;5507:51:27::1;-1:-1:-1::0;;;;;5592:13:27;::::1;5569:20;5592:13:::0;;;:7:::1;:13;::::0;;;;;;;;;;-1:-1:-1;;5616:33:27;;;5715:36;;4031:25:28;;;5592:13:27;;;5715:36:::1;::::0;4004:18:28;5715:36:27::1;;;;;;;5496:263;5438:321:::0;:::o;3142:228::-;1531:13:0;:11;:13::i;:::-;3253:1:27::1;3232:10;3226:24;:28;3218:65;;;::::0;-1:-1:-1;;;3218:65:27;;8857:2:28;3218:65:27::1;::::0;::::1;8839:21:28::0;8896:2;8876:18;;;8869:30;8935:26;8915:18;;;8908:54;8979:18;;3218:65:27::1;8655:348:28::0;3218:65:27::1;3294:13;:26;3310:10:::0;3294:13;:26:::1;:::i;:::-;;3336;3351:10;3336:26;;;;;;:::i;:::-;;;;;;;;3142:228:::0;:::o;2184:118:6:-;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:6;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:6;;2074:1;2047:30;;;1679:51:28;1652:18;;2047:30:6;1533:203:28;2001:87:6;-1:-1:-1;;;;;;2104:16:6;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3378:124:27:-;1531:13:0;:11;:13::i;:::-;3425:8:27::1;:6;:8::i;:::-;3449:45;::::0;3478:15:::1;4031:25:28::0;;735:10:12;;3449:45:27::1;::::0;4019:2:28;4004:18;3449:45:27::1;3885:177:28::0;5144:557:20;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:20;;;-1:-1:-1;5482:212:20;;-1:-1:-1;5590:13:20;;-1:-1:-1;5625:4:20;;-1:-1:-1;5652:1:20;-1:-1:-1;5668:16:20;-1:-1:-1;5482:212:20;-1:-1:-1;5144:557:20:o;2517:93:6:-;2564:13;2596:7;2589:14;;;;;:::i;5089:278:27:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5172:25:27;::::1;5164:62;;;::::0;-1:-1:-1;;;5164:62:27;;11414:2:28;5164:62:27::1;::::0;::::1;11396:21:28::0;11453:2;11433:18;;;11426:30;11492:26;11472:18;;;11465:54;11536:18;;5164:62:27::1;11212:348:28::0;5164:62:27::1;5259:9;::::0;;-1:-1:-1;;;;;5279:23:27;;::::1;-1:-1:-1::0;;;;;;5279:23:27;::::1;::::0;::::1;::::0;;;5318:41:::1;::::0;5259:9;::::1;::::0;5279:23;5259:9;;5318:41:::1;::::0;5237:19:::1;::::0;5318:41:::1;5153:214;5089:278:::0;:::o;3717:144:6:-;3802:52;735:10:12;3835:8:6;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:12;5186:4:6;5192:2;5196:7;5205:4;5138:33;:72::i;3829:220:27:-;3952:13;3984:16;3992:7;3984;:16::i;:::-;;4018:23;4033:7;4018:14;:23::i;2009:1125::-;2500:21:15;:19;:21::i;:::-;1474:19:14::1;:17;:19::i;:::-;1702:1:27::2;2232:12;;:25;2224:56;;;::::0;-1:-1:-1;;;2224:56:27;;11767:2:28;2224:56:27::2;::::0;::::2;11749:21:28::0;11806:2;11786:18;;;11779:30;-1:-1:-1;;;11825:18:28;;;11818:48;11883:18;;2224:56:27::2;11565:342:28::0;2224:56:27::2;2318:8;2299:15;:27;;2291:57;;;::::0;-1:-1:-1;;;2291:57:27;;12114:2:28;2291:57:27::2;::::0;::::2;12096:21:28::0;12153:2;12133:18;;;12126:30;-1:-1:-1;;;12172:18:28;;;12165:47;12229:18;;2291:57:27::2;11912:341:28::0;2291:57:27::2;-1:-1:-1::0;;;;;2367:16:27;::::2;2359:54;;;::::0;-1:-1:-1;;;2359:54:27;;12460:2:28;2359:54:27::2;::::0;::::2;12442:21:28::0;12499:2;12479:18;;;12472:30;12538:27;12518:18;;;12511:55;12583:18;;2359:54:27::2;12258:349:28::0;2359:54:27::2;2452:1;2438:3;2432:17;:21;2424:53;;;::::0;-1:-1:-1;;;2424:53:27;;12814:2:28;2424:53:27::2;::::0;::::2;12796:21:28::0;12853:2;12833:18;;;12826:30;-1:-1:-1;;;12872:18:28;;;12865:49;12931:18;;2424:53:27::2;12612:343:28::0;2424:53:27::2;2620:21:::0;;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;2656:11:27;::::2;2519:18;2656:11:::0;;;:7:::2;:11:::0;;;;;;:13;;1498:75:::2;::::0;2603:2;;2620:21;;2656:13;2519:18;2656:13:::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;2550:153:27::2;::::0;;::::2;::::0;::::2;13456:25:28::0;;;;-1:-1:-1;;;;;13517:32:28;;;13497:18;;;13490:60;;;;13566:18;;;13559:34;13609:18;;;13602:34;13652:19;;;13645:35;;;13428:19;;2550:153:27::2;;;;;;;;;;;;2540:164;;;;;;2519:185;;2717:12;2732:28;2749:10;2732:16;:28::i;:::-;2717:43;;2771:14;2788:30;2802:4;2808:9;2788:13;:30::i;:::-;2847:9;::::0;2771:47;;-1:-1:-1;;;;;;2837:19:27;;::::2;2847:9:::0;::::2;2837:19;2829:49;;;::::0;-1:-1:-1;;;2829:49:27;;13893:2:28;2829:49:27::2;::::0;::::2;13875:21:28::0;13932:2;13912:18;;;13905:30;-1:-1:-1;;;13951:18:28;;;13944:47;14008:18;;2829:49:27::2;13691:341:28::0;2829:49:27::2;2909:12;:14:::0;;2891:15:::2;::::0;;2909:14:::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;2943:24:27::2;::::0;;;:15:::2;:24;::::0;;;;;2891:32;;-1:-1:-1;2943:24:27::2;;2942:25;2934:57;;;::::0;-1:-1:-1;;;2934:57:27;;14239:2:28;2934:57:27::2;::::0;::::2;14221:21:28::0;14278:2;14258:18;;;14251:30;-1:-1:-1;;;14297:18:28;;;14290:49;14356:18;;2934:57:27::2;14037:343:28::0;2934:57:27::2;3012:22;3022:2;3026:7;3012:9;:22::i;:::-;3045:26;3058:7;3067:3;3045:12;:26::i;:::-;3113:7;3109:2;-1:-1:-1::0;;;;;3097:29:27::2;;3122:3;3097:29;;;;;;:::i;:::-;;;;;;;;2213:921;;;;2542:20:15::0;1857:1;3068:7;:21;2888:208;3927:153:6;-1:-1:-1;;;;;4038:25:6;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1679:51:28::0;1652:18;;2672:31:0::1;1533:203:28::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;938:207:9:-:0;1040:4;-1:-1:-1;;;;;;1063:35:9;;-1:-1:-1;;;1063:35:9;;:75;;;1102:36;1126:11;1102:23;:36::i;16212:241:6:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:6;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:6;;;;;4031:25:28;;;4004:18;;16383:31:6;3885:177:28;14492:120:6;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:6;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:6;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:6;;;9180:256;-1:-1:-1;;;;;9450:16:6;;;9446:107;;-1:-1:-1;;;;;9510:13:6;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:6;-1:-1:-1;;;;;9563:21:6;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:6:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:12;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:12;1901:40:0;;;1679:51:28;1652:18;;1901:40:0;1533:203:28;2710:117:14;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:14::1;::::0;;2798:22:::1;735:10:12::0;2807:12:14::1;2798:22;::::0;-1:-1:-1;;;;;1697:32:28;;;1679:51;;1667:2;1652:18;2798:22:14::1;;;;;;;2710:117::o:0;2575:307:15:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:15;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;2002:128:14:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:14;;;;;;;;;;;1923:167:9;2014:19;;;;:10;:19;;;;;:31;2036:9;2014:19;:31;:::i;:::-;-1:-1:-1;2060:23:9;;4031:25:28;;;2060:23:9;;4019:2:28;4004:18;2060:23:9;;;;;;;1923:167;;:::o;11510:227:6:-;11561:21;11585:40;11601:1;11605:7;11622:1;11585:7;:40::i;:::-;11561:64;-1:-1:-1;;;;;;11639:27:6;;11635:96;;11689:31;;-1:-1:-1;;;11689:31:6;;;;;4031:25:28;;;4004:18;;11689:31:6;3885:177:28;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2463:115:14:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:14::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:12::0;;656:96;6021:126:20;6067:13;6099:41;:5;6126:13;6099:26;:41::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;15665:312:6:-;-1:-1:-1;;;;;15772:22:6;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:6;;-1:-1:-1;;;;;1697:32:28;;15817:31:6;;;1679:51:28;1652:18;;15817:31:6;1533:203:28;15768:91:6;-1:-1:-1;;;;;15868:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:6;;;;;;;;;;15929:41;;540::28;;;15929::6;;513:18:28;15929:41:6;;;;;;;15665:312;;;:::o;985:924:11:-;-1:-1:-1;;;;;1165:14:11;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:11;;-1:-1:-1;;;;;1203:36:11;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:11;;;;;;;;-1:-1:-1;;1203:67:11;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:11;;-1:-1:-1;;;;;1697:32:28;;1664:39:11;;;1679:51:28;1652:18;;1664:39:11;1533:203:28;1556:323:11;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:11;;-1:-1:-1;;;1317:51:11;1313:182;;1437:39;;-1:-1:-1;;;1437:39:11;;-1:-1:-1;;;;;1697:32:28;;1437:39:11;;;1679:51:28;1652:18;;1437:39:11;1533:203:28;1313:182:11;1271:238;1199:694;985:924;;;;;:::o;1211:593:9:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;-1:-1:-1;1342:23:9;1368:19;;;:10;:19;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1507:4;1501:18;1523:1;1501:23;1497:70;;-1:-1:-1;1547:9:9;1211:593;-1:-1:-1;;1211:593:9:o;1497:70::-;1666:23;;:27;1662:95;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;1211:593;;;:::o;1662:95::-;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;1211:593;-1:-1:-1;;;;1211:593:9:o;4917:176:20:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:21;3495:11;-1:-1:-1;;;3519:23:21;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;3714:255:19;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:19;;3714:255;-1:-1:-1;;;;3714:255:19:o;10656:100:6:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;1560:300::-;1662:4;-1:-1:-1;;;;;;1697:40:6;;-1:-1:-1;;;1697:40:6;;:104;;-1:-1:-1;;;;;;;1753:48:6;;-1:-1:-1;;;1753:48:6;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:22;;;1817:36:6;763:146:22;14794:662:6;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:6;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:6;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:6;:5;-1:-1:-1;;;;;15189:13:6;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:6;;-1:-1:-1;;;;;1697:32:28;;15263:27:6;;;1679:51:28;1652:18;;15263:27:6;1533:203:28;15163:142:6;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:6;15366:5;-1:-1:-1;;;;;15357:28:6;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:6;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:6;-1:-1:-1;;;;;15420:29:6;;;;;;;;;;14794:662::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:6;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:6;;;;;4031:25:28;;;4004:18;;7321:31:6;3885:177:28;7271:186:6;7398:44;;-1:-1:-1;;;7398:44:6;;-1:-1:-1;;;;;15826:32:28;;7398:44:6;;;15808:51:28;15875:18;;;15868:34;;;15781:18;;7398:44:6;15634:274:28;2202:126:14;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:14;;;;;;;;;;;3358:267:16;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:106:27;3700:13;3733;3726:20;;;;;:::i;2676:255:6:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:6:o;3845:262:20:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:20;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:20;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;16618:25:28;4226:11:20;16659:18:28;;;16652:34;;;;4239:14:20;16702:18:28;;;16695:34;4255:13:20;16745:18:28;;;16738:34;4278:4:20;16788:19:28;;;16781:61;4168:7:20;;16590:19:28;;4204:80:20;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;2129:778:19;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:19;;2823:1;;-1:-1:-1;2827:35:19;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:19;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:19;;;;;4031:25:28;;;4004:18;;7634:46:19;3885:177:28;7563:243:19;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:19;;;;;4031:25:28;;;4004:18;;7763:32:19;3885:177:28;10977:207:6;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:12;11155:1:6;11159:2;11163:7;11172:4;11099:33;:78::i;6401:272::-;6504:4;-1:-1:-1;;;;;6539:21:6;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:6;:5;-1:-1:-1;;;;;6577:16:6;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:6;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:6;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:6:o;2078:378:16:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:16;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:16;;;-1:-1:-1;2408:4:16;2399:14;;2392:28;;;;-1:-1:-1;2363:16:16;2078:378::o;637:632:18:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:18;-1:-1:-1;794:41:18;-1:-1:-1;924:28:18;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:18;-1:-1:-1;;;1109:2:18;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:18;979:247;1190:21;-1:-1:-1;1246:6:18;637:632;-1:-1:-1;;;637:632:18:o;5203:1551:19:-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:19;;-1:-1:-1;6385:30:19;;-1:-1:-1;6417:1:19;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;17080:25:28;;;17153:4;17141:17;;17121:18;;;17114:45;;;;17175:18;;;17168:34;;;17218:18;;;17211:34;;;6541:24:19;;17052:19:28;;6541:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:19;;-1:-1:-1;;6541:24:19;;;-1:-1:-1;;;;;;;6579:20:19;;6575:113;;-1:-1:-1;6631:1:19;;-1:-1:-1;6635:29:19;;-1:-1:-1;6631:1:19;;-1:-1:-1;6615:62:19;;6575:113;6706:6;-1:-1:-1;6714:20:19;;-1:-1:-1;6714:20:19;;-1:-1:-1;5203:1551:19;;;;;;;;;:::o;9978:327:6:-;-1:-1:-1;;;;;10045:16:6;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:6;;10114:1;10084:33;;;1679:51:28;1652:18;;10084:33:6;1533:203:28;10041:87:6;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:6;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:6;;10285:1;10257:31;;;1679:51:28;1652:18;;10257:31:6;1533:203:28;2528:245:16;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:16;;;;;;;;;;;25316:916:24;25369:7;;-1:-1:-1;;;25444:17:24;;25440:103;;-1:-1:-1;;;25481:17:24;;;-1:-1:-1;25526:2:24;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:24;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:24;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:24;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:24;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:24;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:24:o;14:131:28:-;-1:-1:-1;;;;;;88:32:28;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:28;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:28;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:28:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:28;;1348:180;-1:-1:-1;1348:180:28:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:28;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:28:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2702:127::-;2763:10;2758:3;2754:20;2751:1;2744:31;2794:4;2791:1;2784:15;2818:4;2815:1;2808:15;2834:719;2877:5;2930:3;2923:4;2915:6;2911:17;2907:27;2897:55;;2948:1;2945;2938:12;2897:55;2984:6;2971:20;3010:18;3047:2;3043;3040:10;3037:36;;;3053:18;;:::i;:::-;3128:2;3122:9;3096:2;3182:13;;-1:-1:-1;;3178:22:28;;;3202:2;3174:31;3170:40;3158:53;;;3226:18;;;3246:22;;;3223:46;3220:72;;;3272:18;;:::i;:::-;3312:10;3308:2;3301:22;3347:2;3339:6;3332:18;3393:3;3386:4;3381:2;3373:6;3369:15;3365:26;3362:35;3359:55;;;3410:1;3407;3400:12;3359:55;3474:2;3467:4;3459:6;3455:17;3448:4;3440:6;3436:17;3423:54;3521:1;3514:4;3509:2;3501:6;3497:15;3493:26;3486:37;3541:6;3532:15;;;;;;2834:719;;;;:::o;3558:322::-;3627:6;3680:2;3668:9;3659:7;3655:23;3651:32;3648:52;;;3696:1;3693;3686:12;3648:52;3736:9;3723:23;3769:18;3761:6;3758:30;3755:50;;;3801:1;3798;3791:12;3755:50;3824;3866:7;3857:6;3846:9;3842:22;3824:50;:::i;4067:1259::-;4473:3;4468;4464:13;4456:6;4452:26;4441:9;4434:45;4415:4;4498:2;4536:3;4531:2;4520:9;4516:18;4509:31;4563:46;4604:3;4593:9;4589:19;4581:6;4563:46;:::i;:::-;4657:9;4649:6;4645:22;4640:2;4629:9;4625:18;4618:50;4691:33;4717:6;4709;4691:33;:::i;:::-;4755:2;4740:18;;4733:34;;;-1:-1:-1;;;;;4804:32:28;;4798:3;4783:19;;4776:61;4824:3;4853:19;;4846:35;;;4918:22;;;4912:3;4897:19;;4890:51;4990:13;;5012:22;;;5088:15;;;;-1:-1:-1;5050:15:28;;;;-1:-1:-1;5131:169:28;5145:6;5142:1;5139:13;5131:169;;;5206:13;;5194:26;;5275:15;;;;5240:12;;;;5167:1;5160:9;5131:169;;;-1:-1:-1;5317:3:28;;4067:1259;-1:-1:-1;;;;;;;;;;;;4067:1259:28:o;5331:347::-;5396:6;5404;5457:2;5445:9;5436:7;5432:23;5428:32;5425:52;;;5473:1;5470;5463:12;5425:52;5496:29;5515:9;5496:29;:::i;:::-;5486:39;;5575:2;5564:9;5560:18;5547:32;5622:5;5615:13;5608:21;5601:5;5598:32;5588:60;;5644:1;5641;5634:12;5588:60;5667:5;5657:15;;;5331:347;;;;;:::o;5683:538::-;5778:6;5786;5794;5802;5855:3;5843:9;5834:7;5830:23;5826:33;5823:53;;;5872:1;5869;5862:12;5823:53;5895:29;5914:9;5895:29;:::i;:::-;5885:39;;5943:38;5977:2;5966:9;5962:18;5943:38;:::i;:::-;5933:48;;6028:2;6017:9;6013:18;6000:32;5990:42;;6083:2;6072:9;6068:18;6055:32;6110:18;6102:6;6099:30;6096:50;;;6142:1;6139;6132:12;6096:50;6165;6207:7;6198:6;6187:9;6183:22;6165:50;:::i;:::-;6155:60;;;5683:538;;;;;;;:::o;6226:685::-;6331:6;6339;6347;6355;6408:3;6396:9;6387:7;6383:23;6379:33;6376:53;;;6425:1;6422;6415:12;6376:53;6448:29;6467:9;6448:29;:::i;:::-;6438:39;;6528:2;6517:9;6513:18;6500:32;6551:18;6592:2;6584:6;6581:14;6578:34;;;6608:1;6605;6598:12;6578:34;6631:50;6673:7;6664:6;6653:9;6649:22;6631:50;:::i;:::-;6621:60;;6728:2;6717:9;6713:18;6700:32;6690:42;;6785:2;6774:9;6770:18;6757:32;6741:48;;6814:2;6804:8;6801:16;6798:36;;;6830:1;6827;6820:12;6798:36;;6853:52;6897:7;6886:8;6875:9;6871:24;6853:52;:::i;6916:260::-;6984:6;6992;7045:2;7033:9;7024:7;7020:23;7016:32;7013:52;;;7061:1;7058;7051:12;7013:52;7084:29;7103:9;7084:29;:::i;:::-;7074:39;;7132:38;7166:2;7155:9;7151:18;7132:38;:::i;:::-;7122:48;;6916:260;;;;;:::o;7181:380::-;7260:1;7256:12;;;;7303;;;7324:61;;7378:4;7370:6;7366:17;7356:27;;7324:61;7431:2;7423:6;7420:14;7400:18;7397:38;7394:161;;7477:10;7472:3;7468:20;7465:1;7458:31;7512:4;7509:1;7502:15;7540:4;7537:1;7530:15;7394:161;;7181:380;;;:::o;9134:545::-;9236:2;9231:3;9228:11;9225:448;;;9272:1;9297:5;9293:2;9286:17;9342:4;9338:2;9328:19;9412:2;9400:10;9396:19;9393:1;9389:27;9383:4;9379:38;9448:4;9436:10;9433:20;9430:47;;;-1:-1:-1;9471:4:28;9430:47;9526:2;9521:3;9517:12;9514:1;9510:20;9504:4;9500:31;9490:41;;9581:82;9599:2;9592:5;9589:13;9581:82;;;9644:17;;;9625:1;9614:13;9581:82;;9855:1352;9981:3;9975:10;10008:18;10000:6;9997:30;9994:56;;;10030:18;;:::i;:::-;10059:97;10149:6;10109:38;10141:4;10135:11;10109:38;:::i;:::-;10103:4;10059:97;:::i;:::-;10211:4;;10275:2;10264:14;;10292:1;10287:663;;;;10994:1;11011:6;11008:89;;;-1:-1:-1;11063:19:28;;;11057:26;11008:89;-1:-1:-1;;9812:1:28;9808:11;;;9804:24;9800:29;9790:40;9836:1;9832:11;;;9787:57;11110:81;;10257:944;;10287:663;9081:1;9074:14;;;9118:4;9105:18;;-1:-1:-1;;10323:20:28;;;10441:236;10455:7;10452:1;10449:14;10441:236;;;10544:19;;;10538:26;10523:42;;10636:27;;;;10604:1;10592:14;;;;10471:19;;10441:236;;;10445:3;10705:6;10696:7;10693:19;10690:201;;;10766:19;;;10760:26;-1:-1:-1;;10849:1:28;10845:14;;;10861:3;10841:24;10837:37;10833:42;10818:58;10803:74;;10690:201;-1:-1:-1;;;;;10937:1:28;10921:14;;;10917:22;10904:36;;-1:-1:-1;9855:1352:28:o;12960:232::-;12999:3;13020:17;;;13017:140;;13079:10;13074:3;13070:20;13067:1;13060:31;13114:4;13111:1;13104:15;13142:4;13139:1;13132:15;13017:140;-1:-1:-1;13184:1:28;13173:13;;12960:232::o;14385:489::-;-1:-1:-1;;;;;14654:15:28;;;14636:34;;14706:15;;14701:2;14686:18;;14679:43;14753:2;14738:18;;14731:34;;;14801:3;14796:2;14781:18;;14774:31;;;14579:4;;14822:46;;14848:19;;14840:6;14822:46;:::i;:::-;14814:54;14385:489;-1:-1:-1;;;;;;14385:489:28:o;14879:249::-;14948:6;15001:2;14989:9;14980:7;14976:23;14972:32;14969:52;;;15017:1;15014;15007:12;14969:52;15049:9;15043:16;15068:30;15092:5;15068:30;:::i;15133:496::-;15312:3;15350:6;15344:13;15366:66;15425:6;15420:3;15413:4;15405:6;15401:17;15366:66;:::i;:::-;15495:13;;15454:16;;;;15517:70;15495:13;15454:16;15564:4;15552:17;;15517:70;:::i;:::-;15603:20;;15133:496;-1:-1:-1;;;;15133:496:28:o;15913:127::-;15974:10;15969:3;15965:20;15962:1;15955:31;16005:4;16002:1;15995:15;16029:4;16026:1;16019:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","eip712Domain()":"84b0196e","getApproved(uint256)":"081812fc","invalidateNonce(address)":"53a78064","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","safeMint(address,string,uint256,bytes)":"e5763b73","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateVerifier(address)":"97fc007c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"BaseURIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"BatchMintCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"NonceInvalidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVerifier\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"VerifierUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"invalidateNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"updateVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CNFT.sol\":\"CraftiaxNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CNFT.sol\":{\"keccak256\":\"0x162afe9717a189a1120cf8b5d37ff6851a9d39493791262370876bec89761721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e1dc0332fe878f056d4c4330d1644cafec3174871f003524e60b8c7576686aa\",\"dweb:/ipfs/QmeYTKeu9ELns5WFCNUgySRRjdnQmBU8f5yReKr5PGEZP2\"]}},\"version\":1}"}}}}}